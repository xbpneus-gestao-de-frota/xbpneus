{"message": "AXES: BEGIN version 6.1.1, blocking by username or ip_address"}
{"message": "AXES: BEGIN version 6.1.1, blocking by username or ip_address"}
{"message": "Watching for file changes with StatReloader"}
{"message": "Not Found: /api/schema/swagger/", "status_code": 404, "request": "<WSGIRequest: GET '/api/schema/swagger/'>"}
{"message": "\"GET /api/schema/swagger/ HTTP/1.1\" 404 11084", "request": "<socket.socket fd=5, family=2, type=1, proto=0, laddr=('127.0.0.1', 8000), raddr=('127.0.0.1', 50136)>", "server_time": "23/Oct/2025 08:56:12", "status_code": 404}
{"message": "Not Found: /api/create/", "status_code": 404, "request": "<WSGIRequest: GET '/api/create/'>"}
{"message": "\"GET /api/create/ HTTP/1.1\" 404 11060", "request": "<socket.socket fd=6, family=2, type=1, proto=0, laddr=('127.0.0.1', 8000), raddr=('127.0.0.1', 50146)>", "server_time": "23/Oct/2025 08:56:12", "status_code": 404}
{"message": "Not Found: /api/run/", "status_code": 404, "request": "<WSGIRequest: GET '/api/run/'>"}
{"message": "\"GET /api/run/ HTTP/1.1\" 404 11051", "request": "<socket.socket fd=5, family=2, type=1, proto=0, laddr=('127.0.0.1', 8000), raddr=('127.0.0.1', 50158)>", "server_time": "23/Oct/2025 08:56:12", "status_code": 404}
{"message": "Not Found: /api/show/", "status_code": 404, "request": "<WSGIRequest: GET '/api/show/'>"}
{"message": "\"GET /api/show/ HTTP/1.1\" 404 11054", "request": "<socket.socket fd=6, family=2, type=1, proto=0, laddr=('127.0.0.1', 8000), raddr=('127.0.0.1', 50168)>", "server_time": "23/Oct/2025 08:56:12", "status_code": 404}
{"message": "Not Found: /api/make/", "status_code": 404, "request": "<WSGIRequest: GET '/api/make/'>"}
{"message": "\"GET /api/make/ HTTP/1.1\" 404 11054", "request": "<socket.socket fd=5, family=2, type=1, proto=0, laddr=('127.0.0.1', 8000), raddr=('127.0.0.1', 50184)>", "server_time": "23/Oct/2025 08:56:12", "status_code": 404}
/home/ubuntu/xbpneus/config/temp_approval_views.py: Error [approve_motorista_externo]: unable to guess serializer. This is graceful fallback handling for APIViews. Consider using GenericAPIView as view base class, if view is under your control. Either way you may want to add a serializer_class (or method). Ignoring view for now.
/home/ubuntu/xbpneus/backend/common/auth_views.py: Error [logout_view]: unable to guess serializer. This is graceful fallback handling for APIViews. Consider using GenericAPIView as view base class, if view is under your control. Either way you may want to add a serializer_class (or method). Ignoring view for now.
/home/ubuntu/xbpneus/backend/common/auth_views.py: Error [me_view]: unable to guess serializer. This is graceful fallback handling for APIViews. Consider using GenericAPIView as view base class, if view is under your control. Either way you may want to add a serializer_class (or method). Ignoring view for now.
/home/ubuntu/xbpneus/backend/borracharia/views.py: Error [login_borracharia]: unable to guess serializer. This is graceful fallback handling for APIViews. Consider using GenericAPIView as view base class, if view is under your control. Either way you may want to add a serializer_class (or method). Ignoring view for now.
/home/ubuntu/xbpneus/backend/borracharia/views.py: Error [perfil_borracharia]: unable to guess serializer. This is graceful fallback handling for APIViews. Consider using GenericAPIView as view base class, if view is under your control. Either way you may want to add a serializer_class (or method). Ignoring view for now.
/home/ubuntu/xbpneus/backend/borracharia/views.py: Error [registro_borracharia]: unable to guess serializer. This is graceful fallback handling for APIViews. Consider using GenericAPIView as view base class, if view is under your control. Either way you may want to add a serializer_class (or method). Ignoring view for now.
/home/ubuntu/xbpneus/config/temp_user_creation_views.py: Error [create_superuser_temp]: unable to guess serializer. This is graceful fallback handling for APIViews. Consider using GenericAPIView as view base class, if view is under your control. Either way you may want to add a serializer_class (or method). Ignoring view for now.
/home/ubuntu/xbpneus/config/temp_user_creation_views.py: Error [create_test_users_temp]: unable to guess serializer. This is graceful fallback handling for APIViews. Consider using GenericAPIView as view base class, if view is under your control. Either way you may want to add a serializer_class (or method). Ignoring view for now.
/home/ubuntu/xbpneus/backend/jobs/views.py: Error [ExportJobStatusApi]: unable to guess serializer. This is graceful fallback handling for APIViews. Consider using GenericAPIView as view base class, if view is under your control. Either way you may want to add a serializer_class (or method). Ignoring view for now.
/home/ubuntu/xbpneus/backend/jobs/views.py: Error [ExportJobDownloadApi]: unable to guess serializer. This is graceful fallback handling for APIViews. Consider using GenericAPIView as view base class, if view is under your control. Either way you may want to add a serializer_class (or method). Ignoring view for now.
/home/ubuntu/xbpneus/backend/jobs/views.py: Error [ExportJobApi]: unable to guess serializer. This is graceful fallback handling for APIViews. Consider using GenericAPIView as view base class, if view is under your control. Either way you may want to add a serializer_class (or method). Ignoring view for now.
/home/ubuntu/xbpneus/backend/motorista/motorista_externo_views.py: Warning [MotoristaExternoActionViewSet]: could not derive type of path parameter "id" because it is untyped and obtaining queryset from the viewset failed. Consider adding a type to the path (e.g. <int:id>) or annotating the parameter type with @extend_schema. Defaulting to "string".
/home/ubuntu/xbpneus/backend/motorista/motorista_externo_views.py: Error [MotoristaExternoActionViewSet]: unable to guess serializer. This is graceful fallback handling for APIViews. Consider using GenericAPIView as view base class, if view is under your control. Either way you may want to add a serializer_class (or method). Ignoring view for now.
/home/ubuntu/xbpneus/backend/motorista/motorista_externo_views.py: Error [motorista_externo_dashboard]: unable to guess serializer. This is graceful fallback handling for APIViews. Consider using GenericAPIView as view base class, if view is under your control. Either way you may want to add a serializer_class (or method). Ignoring view for now.
/home/ubuntu/xbpneus/backend/motorista/motorista_externo_views.py: Error [motorista_externo_me]: unable to guess serializer. This is graceful fallback handling for APIViews. Consider using GenericAPIView as view base class, if view is under your control. Either way you may want to add a serializer_class (or method). Ignoring view for now.
/home/ubuntu/xbpneus/backend/motorista/views.py: Error [login_motorista]: unable to guess serializer. This is graceful fallback handling for APIViews. Consider using GenericAPIView as view base class, if view is under your control. Either way you may want to add a serializer_class (or method). Ignoring view for now.
/home/ubuntu/xbpneus/backend/motorista/views.py: Error [perfil_motorista]: unable to guess serializer. This is graceful fallback handling for APIViews. Consider using GenericAPIView as view base class, if view is under your control. Either way you may want to add a serializer_class (or method). Ignoring view for now.
/home/ubuntu/xbpneus/backend/motorista/views.py: Error [registro_motorista]: unable to guess serializer. This is graceful fallback handling for APIViews. Consider using GenericAPIView as view base class, if view is under your control. Either way you may want to add a serializer_class (or method). Ignoring view for now.
/home/ubuntu/xbpneus/backend/recapagem/views.py: Error [login_recapagem]: unable to guess serializer. This is graceful fallback handling for APIViews. Consider using GenericAPIView as view base class, if view is under your control. Either way you may want to add a serializer_class (or method). Ignoring view for now.
/home/ubuntu/xbpneus/backend/recapagem/views.py: Error [perfil_recapagem]: unable to guess serializer. This is graceful fallback handling for APIViews. Consider using GenericAPIView as view base class, if view is under your control. Either way you may want to add a serializer_class (or method). Ignoring view for now.
/home/ubuntu/xbpneus/backend/recapagem/views.py: Error [registro_recapagem]: unable to guess serializer. This is graceful fallback handling for APIViews. Consider using GenericAPIView as view base class, if view is under your control. Either way you may want to add a serializer_class (or method). Ignoring view for now.
/home/ubuntu/xbpneus/backend/reports/views.py: Error [GiroEstoque]: unable to guess serializer. This is graceful fallback handling for APIViews. Consider using GenericAPIView as view base class, if view is under your control. Either way you may want to add a serializer_class (or method). Ignoring view for now.
/home/ubuntu/xbpneus/backend/reports/views.py: Error [CustosPorOS]: unable to guess serializer. This is graceful fallback handling for APIViews. Consider using GenericAPIView as view base class, if view is under your control. Either way you may want to add a serializer_class (or method). Ignoring view for now.
/home/ubuntu/xbpneus/backend/reports/views.py: Error [CustosPorPosicao]: unable to guess serializer. This is graceful fallback handling for APIViews. Consider using GenericAPIView as view base class, if view is under your control. Either way you may want to add a serializer_class (or method). Ignoring view for now.
/home/ubuntu/xbpneus/backend/reports/views.py: Error [MedicoesPorPosicao]: unable to guess serializer. This is graceful fallback handling for APIViews. Consider using GenericAPIView as view base class, if view is under your control. Either way you may want to add a serializer_class (or method). Ignoring view for now.
/home/ubuntu/xbpneus/backend/revenda/views.py: Error [login_revenda]: unable to guess serializer. This is graceful fallback handling for APIViews. Consider using GenericAPIView as view base class, if view is under your control. Either way you may want to add a serializer_class (or method). Ignoring view for now.
/home/ubuntu/xbpneus/backend/revenda/views.py: Error [perfil_revenda]: unable to guess serializer. This is graceful fallback handling for APIViews. Consider using GenericAPIView as view base class, if view is under your control. Either way you may want to add a serializer_class (or method). Ignoring view for now.
/home/ubuntu/xbpneus/backend/revenda/views.py: Error [registro_revenda]: unable to guess serializer. This is graceful fallback handling for APIViews. Consider using GenericAPIView as view base class, if view is under your control. Either way you may want to add a serializer_class (or method). Ignoring view for now.
/home/ubuntu/xbpneus/backend/transportador/alertas/views.py: Warning [AlertaViewSet]: Failed to obtain model through view's queryset due to raised exception. Prevent this either by setting "queryset = Model.objects.none()" on the view, checking for "getattr(self, "swagger_fake_view", False)" in get_queryset() or by simply using @extend_schema. (Exception: 'AnonymousUser' object has no attribute 'empresa')
/home/ubuntu/xbpneus/backend/transportador/alertas/views.py: Warning [AlertaViewSet]: could not derive type of path parameter "id" because it is untyped and obtaining queryset from the viewset failed. Consider adding a type to the path (e.g. <int:id>) or annotating the parameter type with @extend_schema. Defaulting to "string".
/home/ubuntu/xbpneus/backend/transportador/alertas/views.py: Warning [ConfiguracaoAlertaViewSet]: Failed to obtain model through view's queryset due to raised exception. Prevent this either by setting "queryset = Model.objects.none()" on the view, checking for "getattr(self, "swagger_fake_view", False)" in get_queryset() or by simply using @extend_schema. (Exception: 'AnonymousUser' object has no attribute 'empresa')
/home/ubuntu/xbpneus/backend/transportador/alertas/views.py: Warning [ConfiguracaoAlertaViewSet]: could not derive type of path parameter "id" because it is untyped and obtaining queryset from the viewset failed. Consider adding a type to the path (e.g. <int:id>) or annotating the parameter type with @extend_schema. Defaulting to "string".
/home/ubuntu/xbpneus/backend/transportador/alertas/views.py: Warning [HistoricoAlertaViewSet]: Failed to obtain model through view's queryset due to raised exception. Prevent this either by setting "queryset = Model.objects.none()" on the view, checking for "getattr(self, "swagger_fake_view", False)" in get_queryset() or by simply using @extend_schema. (Exception: 'AnonymousUser' object has no attribute 'empresa')
/home/ubuntu/xbpneus/backend/transportador/alertas/views.py: Warning [HistoricoAlertaViewSet]: could not derive type of path parameter "id" because it is untyped and obtaining queryset from the viewset failed. Consider adding a type to the path (e.g. <int:id>) or annotating the parameter type with @extend_schema. Defaulting to "string".
/home/ubuntu/xbpneus/backend/transportador/alertas/views.py: Warning [TipoAlertaViewSet]: Failed to obtain model through view's queryset due to raised exception. Prevent this either by setting "queryset = Model.objects.none()" on the view, checking for "getattr(self, "swagger_fake_view", False)" in get_queryset() or by simply using @extend_schema. (Exception: 'AnonymousUser' object has no attribute 'empresa')
/home/ubuntu/xbpneus/backend/transportador/alertas/views.py: Warning [TipoAlertaViewSet]: could not derive type of path parameter "id" because it is untyped and obtaining queryset from the viewset failed. Consider adding a type to the path (e.g. <int:id>) or annotating the parameter type with @extend_schema. Defaulting to "string".
/home/ubuntu/xbpneus/backend/transportador/almoxarifado/views.py: Warning [AlmoxarifadoViewSet]: Failed to obtain model through view's queryset due to raised exception. Prevent this either by setting "queryset = Model.objects.none()" on the view, checking for "getattr(self, "swagger_fake_view", False)" in get_queryset() or by simply using @extend_schema. (Exception: 'AnonymousUser' object has no attribute 'empresa')
/home/ubuntu/xbpneus/backend/transportador/almoxarifado/views.py: Warning [AlmoxarifadoViewSet]: could not derive type of path parameter "id" because it is untyped and obtaining queryset from the viewset failed. Consider adding a type to the path (e.g. <int:id>) or annotating the parameter type with @extend_schema. Defaulting to "string".
/home/ubuntu/xbpneus/backend/transportador/almoxarifado/views.py: Warning [InventarioAlmoxarifadoViewSet]: Failed to obtain model through view's queryset due to raised exception. Prevent this either by setting "queryset = Model.objects.none()" on the view, checking for "getattr(self, "swagger_fake_view", False)" in get_queryset() or by simply using @extend_schema. (Exception: 'AnonymousUser' object has no attribute 'empresa')
/home/ubuntu/xbpneus/backend/transportador/almoxarifado/views.py: Warning [InventarioAlmoxarifadoViewSet]: could not derive type of path parameter "id" because it is untyped and obtaining queryset from the viewset failed. Consider adding a type to the path (e.g. <int:id>) or annotating the parameter type with @extend_schema. Defaulting to "string".
/home/ubuntu/xbpneus/backend/transportador/almoxarifado/views.py: Warning [ItemInventarioViewSet]: Failed to obtain model through view's queryset due to raised exception. Prevent this either by setting "queryset = Model.objects.none()" on the view, checking for "getattr(self, "swagger_fake_view", False)" in get_queryset() or by simply using @extend_schema. (Exception: 'AnonymousUser' object has no attribute 'empresa')
/home/ubuntu/xbpneus/backend/transportador/almoxarifado/views.py: Warning [ItemInventarioViewSet]: could not derive type of path parameter "id" because it is untyped and obtaining queryset from the viewset failed. Consider adding a type to the path (e.g. <int:id>) or annotating the parameter type with @extend_schema. Defaulting to "string".
/home/ubuntu/xbpneus/backend/transportador/almoxarifado/views.py: Warning [ItemRequisicaoViewSet]: Failed to obtain model through view's queryset due to raised exception. Prevent this either by setting "queryset = Model.objects.none()" on the view, checking for "getattr(self, "swagger_fake_view", False)" in get_queryset() or by simply using @extend_schema. (Exception: 'AnonymousUser' object has no attribute 'empresa')
/home/ubuntu/xbpneus/backend/transportador/almoxarifado/views.py: Warning [ItemRequisicaoViewSet]: could not derive type of path parameter "id" because it is untyped and obtaining queryset from the viewset failed. Consider adding a type to the path (e.g. <int:id>) or annotating the parameter type with @extend_schema. Defaulting to "string".
/home/ubuntu/xbpneus/backend/transportador/almoxarifado/views.py: Warning [LocalEstoqueViewSet]: Failed to obtain model through view's queryset due to raised exception. Prevent this either by setting "queryset = Model.objects.none()" on the view, checking for "getattr(self, "swagger_fake_view", False)" in get_queryset() or by simply using @extend_schema. (Exception: 'AnonymousUser' object has no attribute 'empresa')
/home/ubuntu/xbpneus/backend/transportador/almoxarifado/views.py: Warning [LocalEstoqueViewSet]: could not derive type of path parameter "id" because it is untyped and obtaining queryset from the viewset failed. Consider adding a type to the path (e.g. <int:id>) or annotating the parameter type with @extend_schema. Defaulting to "string".
/home/ubuntu/xbpneus/backend/transportador/almoxarifado/views.py: Warning [MovimentacaoAlmoxarifadoViewSet]: Failed to obtain model through view's queryset due to raised exception. Prevent this either by setting "queryset = Model.objects.none()" on the view, checking for "getattr(self, "swagger_fake_view", False)" in get_queryset() or by simply using @extend_schema. (Exception: 'AnonymousUser' object has no attribute 'empresa')
/home/ubuntu/xbpneus/backend/transportador/almoxarifado/views.py: Warning [MovimentacaoAlmoxarifadoViewSet]: could not derive type of path parameter "id" because it is untyped and obtaining queryset from the viewset failed. Consider adding a type to the path (e.g. <int:id>) or annotating the parameter type with @extend_schema. Defaulting to "string".
/home/ubuntu/xbpneus/backend/transportador/almoxarifado/views.py: Warning [RequisicaoMaterialViewSet]: Failed to obtain model through view's queryset due to raised exception. Prevent this either by setting "queryset = Model.objects.none()" on the view, checking for "getattr(self, "swagger_fake_view", False)" in get_queryset() or by simply using @extend_schema. (Exception: 'AnonymousUser' object has no attribute 'empresa')
/home/ubuntu/xbpneus/backend/transportador/almoxarifado/views.py: Warning [RequisicaoMaterialViewSet]: could not derive type of path parameter "id" because it is untyped and obtaining queryset from the viewset failed. Consider adding a type to the path (e.g. <int:id>) or annotating the parameter type with @extend_schema. Defaulting to "string".
/home/ubuntu/xbpneus/backend/transportador/analise_pneus/views.py: Error [AnalisePneusViewSet]: unable to guess serializer. This is graceful fallback handling for APIViews. Consider using GenericAPIView as view base class, if view is under your control. Either way you may want to add a serializer_class (or method). Ignoring view for now.
/home/ubuntu/xbpneus/backend/transportador/auditoria/views.py: Warning [LogAlteracaoViewSet]: Failed to obtain model through view's queryset due to raised exception. Prevent this either by setting "queryset = Model.objects.none()" on the view, checking for "getattr(self, "swagger_fake_view", False)" in get_queryset() or by simply using @extend_schema. (Exception: 'AnonymousUser' object has no attribute 'empresa')
/home/ubuntu/xbpneus/backend/transportador/auditoria/views.py: Warning [LogAlteracaoViewSet]: could not derive type of path parameter "id" because it is untyped and obtaining queryset from the viewset failed. Consider adding a type to the path (e.g. <int:id>) or annotating the parameter type with @extend_schema. Defaulting to "string".
/home/ubuntu/xbpneus/backend/transportador/auditoria/views.py: Warning [LogAuditoriaViewSet]: Failed to obtain model through view's queryset due to raised exception. Prevent this either by setting "queryset = Model.objects.none()" on the view, checking for "getattr(self, "swagger_fake_view", False)" in get_queryset() or by simply using @extend_schema. (Exception: 'AnonymousUser' object has no attribute 'empresa')
/home/ubuntu/xbpneus/backend/transportador/auditoria/serializers.py: Warning [LogAuditoriaViewSet > LogAuditoriaSerializer]: unable to resolve type hint for function "alteracoes". Consider using a type hint or @extend_schema_field. Defaulting to string.
/home/ubuntu/xbpneus/backend/transportador/auditoria/views.py: Warning [LogAuditoriaViewSet]: could not derive type of path parameter "id" because it is untyped and obtaining queryset from the viewset failed. Consider adding a type to the path (e.g. <int:id>) or annotating the parameter type with @extend_schema. Defaulting to "string".
/home/ubuntu/xbpneus/backend/transportador/auditoria/serializers.py: Warning [SessaoUsuarioViewSet > SessaoUsuarioSerializer]: unable to resolve type hint for function "duracao". Consider using a type hint or @extend_schema_field. Defaulting to string.
/home/ubuntu/xbpneus/backend/transportador/cargas/views.py: Warning [CargaViewSet]: Failed to obtain model through view's queryset due to raised exception. Prevent this either by setting "queryset = Model.objects.none()" on the view, checking for "getattr(self, "swagger_fake_view", False)" in get_queryset() or by simply using @extend_schema. (Exception: 'AnonymousUser' object has no attribute 'empresa')
/home/ubuntu/xbpneus/backend/transportador/cargas/views.py: Warning [CargaViewSet]: could not derive type of path parameter "id" because it is untyped and obtaining queryset from the viewset failed. Consider adding a type to the path (e.g. <int:id>) or annotating the parameter type with @extend_schema. Defaulting to "string".
/home/ubuntu/xbpneus/backend/transportador/cargas/views.py: Warning [ItemCargaViewSet]: Failed to obtain model through view's queryset due to raised exception. Prevent this either by setting "queryset = Model.objects.none()" on the view, checking for "getattr(self, "swagger_fake_view", False)" in get_queryset() or by simply using @extend_schema. (Exception: 'AnonymousUser' object has no attribute 'empresa')
/home/ubuntu/xbpneus/backend/transportador/cargas/views.py: Warning [ItemCargaViewSet]: could not derive type of path parameter "id" because it is untyped and obtaining queryset from the viewset failed. Consider adding a type to the path (e.g. <int:id>) or annotating the parameter type with @extend_schema. Defaulting to "string".
/home/ubuntu/xbpneus/backend/transportador/cargas/views.py: Warning [ManifestoCargaViewSet]: Failed to obtain model through view's queryset due to raised exception. Prevent this either by setting "queryset = Model.objects.none()" on the view, checking for "getattr(self, "swagger_fake_view", False)" in get_queryset() or by simply using @extend_schema. (Exception: 'AnonymousUser' object has no attribute 'empresa')
/home/ubuntu/xbpneus/backend/transportador/cargas/views.py: Warning [ManifestoCargaViewSet]: could not derive type of path parameter "id" because it is untyped and obtaining queryset from the viewset failed. Consider adding a type to the path (e.g. <int:id>) or annotating the parameter type with @extend_schema. Defaulting to "string".
/home/ubuntu/xbpneus/backend/transportador/cargas/views.py: Warning [RastreamentoCargaViewSet]: Failed to obtain model through view's queryset due to raised exception. Prevent this either by setting "queryset = Model.objects.none()" on the view, checking for "getattr(self, "swagger_fake_view", False)" in get_queryset() or by simply using @extend_schema. (Exception: 'AnonymousUser' object has no attribute 'empresa')
/home/ubuntu/xbpneus/backend/transportador/cargas/views.py: Warning [RastreamentoCargaViewSet]: could not derive type of path parameter "id" because it is untyped and obtaining queryset from the viewset failed. Consider adding a type to the path (e.g. <int:id>) or annotating the parameter type with @extend_schema. Defaulting to "string".
/home/ubuntu/xbpneus/backend/transportador/cargas/views.py: Warning [TipoCargaViewSet]: Failed to obtain model through view's queryset due to raised exception. Prevent this either by setting "queryset = Model.objects.none()" on the view, checking for "getattr(self, "swagger_fake_view", False)" in get_queryset() or by simply using @extend_schema. (Exception: 'AnonymousUser' object has no attribute 'empresa')
/home/ubuntu/xbpneus/backend/transportador/cargas/views.py: Warning [TipoCargaViewSet]: could not derive type of path parameter "id" because it is untyped and obtaining queryset from the viewset failed. Consider adding a type to the path (e.g. <int:id>) or annotating the parameter type with @extend_schema. Defaulting to "string".
/home/ubuntu/xbpneus/backend/transportador/compliance/views.py: Warning [AuditoriaComplianceViewSet]: Failed to obtain model through view's queryset due to raised exception. Prevent this either by setting "queryset = Model.objects.none()" on the view, checking for "getattr(self, "swagger_fake_view", False)" in get_queryset() or by simply using @extend_schema. (Exception: 'AnonymousUser' object has no attribute 'empresa')
/home/ubuntu/xbpneus/backend/transportador/compliance/views.py: Warning [AuditoriaComplianceViewSet]: could not derive type of path parameter "id" because it is untyped and obtaining queryset from the viewset failed. Consider adding a type to the path (e.g. <int:id>) or annotating the parameter type with @extend_schema. Defaulting to "string".
/home/ubuntu/xbpneus/backend/transportador/compliance/views.py: Warning [NaoConformidadeViewSet]: Failed to obtain model through view's queryset due to raised exception. Prevent this either by setting "queryset = Model.objects.none()" on the view, checking for "getattr(self, "swagger_fake_view", False)" in get_queryset() or by simply using @extend_schema. (Exception: 'AnonymousUser' object has no attribute 'empresa')
/home/ubuntu/xbpneus/backend/transportador/compliance/views.py: Warning [NaoConformidadeViewSet]: could not derive type of path parameter "id" because it is untyped and obtaining queryset from the viewset failed. Consider adding a type to the path (e.g. <int:id>) or annotating the parameter type with @extend_schema. Defaulting to "string".
/home/ubuntu/xbpneus/backend/transportador/compliance/views.py: Warning [NormaComplianceViewSet]: Failed to obtain model through view's queryset due to raised exception. Prevent this either by setting "queryset = Model.objects.none()" on the view, checking for "getattr(self, "swagger_fake_view", False)" in get_queryset() or by simply using @extend_schema. (Exception: 'AnonymousUser' object has no attribute 'empresa')
/home/ubuntu/xbpneus/backend/transportador/compliance/views.py: Warning [NormaComplianceViewSet]: could not derive type of path parameter "id" because it is untyped and obtaining queryset from the viewset failed. Consider adding a type to the path (e.g. <int:id>) or annotating the parameter type with @extend_schema. Defaulting to "string".
/home/ubuntu/xbpneus/backend/transportador/compliance/views.py: Warning [PlanoAcaoComplianceViewSet]: Failed to obtain model through view's queryset due to raised exception. Prevent this either by setting "queryset = Model.objects.none()" on the view, checking for "getattr(self, "swagger_fake_view", False)" in get_queryset() or by simply using @extend_schema. (Exception: 'AnonymousUser' object has no attribute 'empresa')
/home/ubuntu/xbpneus/backend/transportador/compliance/views.py: Warning [PlanoAcaoComplianceViewSet]: could not derive type of path parameter "id" because it is untyped and obtaining queryset from the viewset failed. Consider adding a type to the path (e.g. <int:id>) or annotating the parameter type with @extend_schema. Defaulting to "string".
/home/ubuntu/xbpneus/backend/transportador/configuracoes/views.py: Warning [ConfiguracaoSistemaViewSet]: Failed to obtain model through view's queryset due to raised exception. Prevent this either by setting "queryset = Model.objects.none()" on the view, checking for "getattr(self, "swagger_fake_view", False)" in get_queryset() or by simply using @extend_schema. (Exception: 'AnonymousUser' object has no attribute 'empresa')
/home/ubuntu/xbpneus/backend/transportador/configuracoes/views.py: Warning [ConfiguracaoSistemaViewSet]: could not derive type of path parameter "id" because it is untyped and obtaining queryset from the viewset failed. Consider adding a type to the path (e.g. <int:id>) or annotating the parameter type with @extend_schema. Defaulting to "string".
/home/ubuntu/xbpneus/backend/transportador/configuracoes/views.py: Warning [ParametroEmpresaViewSet]: Failed to obtain model through view's queryset due to raised exception. Prevent this either by setting "queryset = Model.objects.none()" on the view, checking for "getattr(self, "swagger_fake_view", False)" in get_queryset() or by simply using @extend_schema. (Exception: 'AnonymousUser' object has no attribute 'empresa')
/home/ubuntu/xbpneus/backend/transportador/configuracoes/views.py: Warning [ParametroEmpresaViewSet]: could not derive type of path parameter "id" because it is untyped and obtaining queryset from the viewset failed. Consider adding a type to the path (e.g. <int:id>) or annotating the parameter type with @extend_schema. Defaulting to "string".
/home/ubuntu/xbpneus/backend/transportador/configuracoes/views.py: Warning [PerfilUsuarioViewSet]: Failed to obtain model through view's queryset due to raised exception. Prevent this either by setting "queryset = Model.objects.none()" on the view, checking for "getattr(self, "swagger_fake_view", False)" in get_queryset() or by simply using @extend_schema. (Exception: 'AnonymousUser' object has no attribute 'empresa')
/home/ubuntu/xbpneus/backend/transportador/configuracoes/views.py: Warning [PerfilUsuarioViewSet]: could not derive type of path parameter "id" because it is untyped and obtaining queryset from the viewset failed. Consider adding a type to the path (e.g. <int:id>) or annotating the parameter type with @extend_schema. Defaulting to "string".
/home/ubuntu/xbpneus/backend/transportador/configuracoes/views.py: Warning [PermissaoCustomizadaViewSet]: Failed to obtain model through view's queryset due to raised exception. Prevent this either by setting "queryset = Model.objects.none()" on the view, checking for "getattr(self, "swagger_fake_view", False)" in get_queryset() or by simply using @extend_schema. (Exception: 'AnonymousUser' object has no attribute 'empresa')
/home/ubuntu/xbpneus/backend/transportador/configuracoes/views.py: Warning [PermissaoCustomizadaViewSet]: could not derive type of path parameter "id" because it is untyped and obtaining queryset from the viewset failed. Consider adding a type to the path (e.g. <int:id>) or annotating the parameter type with @extend_schema. Defaulting to "string".
/home/ubuntu/xbpneus/backend/transportador/dashboard_views.py: Error [dashboard_view]: unable to guess serializer. This is graceful fallback handling for APIViews. Consider using GenericAPIView as view base class, if view is under your control. Either way you may want to add a serializer_class (or method). Ignoring view for now.
/home/ubuntu/xbpneus/backend/transportador/dashboard/views.py: Error [MetricsView]: unable to guess serializer. This is graceful fallback handling for APIViews. Consider using GenericAPIView as view base class, if view is under your control. Either way you may want to add a serializer_class (or method). Ignoring view for now.
/home/ubuntu/xbpneus/backend/transportador/dashboard_views.py: Error [dashboard_stats_view]: unable to guess serializer. This is graceful fallback handling for APIViews. Consider using GenericAPIView as view base class, if view is under your control. Either way you may want to add a serializer_class (or method). Ignoring view for now.
/home/ubuntu/xbpneus/backend/transportador/empresas/serializers.py: Warning [EmpresaViewSet > EmpresaListSerializer]: unable to resolve type hint for function "get_total_filiais". Consider using a type hint or @extend_schema_field. Defaulting to string.
/home/ubuntu/xbpneus/backend/transportador/empresas/serializers.py: Warning [EmpresaViewSet > EmpresaSerializer]: unable to resolve type hint for function "get_total_filiais". Consider using a type hint or @extend_schema_field. Defaulting to string.
/home/ubuntu/xbpneus/backend/transportador/empresas/views.py: Error [register_transportador]: unable to guess serializer. This is graceful fallback handling for APIViews. Consider using GenericAPIView as view base class, if view is under your control. Either way you may want to add a serializer_class (or method). Ignoring view for now.
/home/ubuntu/xbpneus/backend/transportador/epis/views.py: Warning [EntregaEPIViewSet]: Failed to obtain model through view's queryset due to raised exception. Prevent this either by setting "queryset = Model.objects.none()" on the view, checking for "getattr(self, "swagger_fake_view", False)" in get_queryset() or by simply using @extend_schema. (Exception: 'AnonymousUser' object has no attribute 'empresa')
/home/ubuntu/xbpneus/backend/transportador/epis/views.py: Warning [EntregaEPIViewSet]: could not derive type of path parameter "id" because it is untyped and obtaining queryset from the viewset failed. Consider adding a type to the path (e.g. <int:id>) or annotating the parameter type with @extend_schema. Defaulting to "string".
/home/ubuntu/xbpneus/backend/transportador/epis/views.py: Warning [EPIViewSet]: Failed to obtain model through view's queryset due to raised exception. Prevent this either by setting "queryset = Model.objects.none()" on the view, checking for "getattr(self, "swagger_fake_view", False)" in get_queryset() or by simply using @extend_schema. (Exception: 'AnonymousUser' object has no attribute 'empresa')
/home/ubuntu/xbpneus/backend/transportador/epis/views.py: Warning [EPIViewSet]: could not derive type of path parameter "id" because it is untyped and obtaining queryset from the viewset failed. Consider adding a type to the path (e.g. <int:id>) or annotating the parameter type with @extend_schema. Defaulting to "string".
/home/ubuntu/xbpneus/backend/transportador/epis/views.py: Warning [FichaEPIViewSet]: Failed to obtain model through view's queryset due to raised exception. Prevent this either by setting "queryset = Model.objects.none()" on the view, checking for "getattr(self, "swagger_fake_view", False)" in get_queryset() or by simply using @extend_schema. (Exception: 'AnonymousUser' object has no attribute 'empresa')
/home/ubuntu/xbpneus/backend/transportador/epis/views.py: Warning [FichaEPIViewSet]: could not derive type of path parameter "id" because it is untyped and obtaining queryset from the viewset failed. Consider adding a type to the path (e.g. <int:id>) or annotating the parameter type with @extend_schema. Defaulting to "string".
/home/ubuntu/xbpneus/backend/transportador/epis/views.py: Warning [TipoEPIViewSet]: Failed to obtain model through view's queryset due to raised exception. Prevent this either by setting "queryset = Model.objects.none()" on the view, checking for "getattr(self, "swagger_fake_view", False)" in get_queryset() or by simply using @extend_schema. (Exception: 'AnonymousUser' object has no attribute 'empresa')
/home/ubuntu/xbpneus/backend/transportador/epis/views.py: Warning [TipoEPIViewSet]: could not derive type of path parameter "id" because it is untyped and obtaining queryset from the viewset failed. Consider adding a type to the path (e.g. <int:id>) or annotating the parameter type with @extend_schema. Defaulting to "string".
/home/ubuntu/xbpneus/backend/transportador/estoque/views.py: Warning [CategoriaProdutoViewSet]: Failed to obtain model through view's queryset due to raised exception. Prevent this either by setting "queryset = Model.objects.none()" on the view, checking for "getattr(self, "swagger_fake_view", False)" in get_queryset() or by simply using @extend_schema. (Exception: 'AnonymousUser' object has no attribute 'empresa')
/home/ubuntu/xbpneus/backend/transportador/estoque/views.py: Warning [CategoriaProdutoViewSet]: could not derive type of path parameter "id" because it is untyped and obtaining queryset from the viewset failed. Consider adding a type to the path (e.g. <int:id>) or annotating the parameter type with @extend_schema. Defaulting to "string".
/home/ubuntu/xbpneus/backend/transportador/estoque/views.py: Warning [CurvaABCViewSet]: Failed to obtain model through view's queryset due to raised exception. Prevent this either by setting "queryset = Model.objects.none()" on the view, checking for "getattr(self, "swagger_fake_view", False)" in get_queryset() or by simply using @extend_schema. (Exception: 'AnonymousUser' object has no attribute 'empresa')
/home/ubuntu/xbpneus/backend/transportador/estoque/views.py: Warning [CurvaABCViewSet]: could not derive type of path parameter "id" because it is untyped and obtaining queryset from the viewset failed. Consider adding a type to the path (e.g. <int:id>) or annotating the parameter type with @extend_schema. Defaulting to "string".
/home/ubuntu/xbpneus/backend/transportador/estoque/views.py: Warning [MovimentacaoEstoqueViewSet]: Failed to obtain model through view's queryset due to raised exception. Prevent this either by setting "queryset = Model.objects.none()" on the view, checking for "getattr(self, "swagger_fake_view", False)" in get_queryset() or by simply using @extend_schema. (Exception: 'AnonymousUser' object has no attribute 'empresa')
/home/ubuntu/xbpneus/backend/transportador/estoque/views.py: Warning [MovimentacaoEstoqueViewSet]: could not derive type of path parameter "id" because it is untyped and obtaining queryset from the viewset failed. Consider adding a type to the path (e.g. <int:id>) or annotating the parameter type with @extend_schema. Defaulting to "string".
/home/ubuntu/xbpneus/backend/transportador/estoque/views.py: Warning [PrevisaoDemandaViewSet]: Failed to obtain model through view's queryset due to raised exception. Prevent this either by setting "queryset = Model.objects.none()" on the view, checking for "getattr(self, "swagger_fake_view", False)" in get_queryset() or by simply using @extend_schema. (Exception: 'AnonymousUser' object has no attribute 'empresa')
/home/ubuntu/xbpneus/backend/transportador/estoque/serializers.py: Warning [PrevisaoDemandaViewSet > PrevisaoDemandaSerializer]: unable to resolve type hint for function "acuracia". Consider using a type hint or @extend_schema_field. Defaulting to string.
/home/ubuntu/xbpneus/backend/transportador/estoque/views.py: Warning [PrevisaoDemandaViewSet]: could not derive type of path parameter "id" because it is untyped and obtaining queryset from the viewset failed. Consider adding a type to the path (e.g. <int:id>) or annotating the parameter type with @extend_schema. Defaulting to "string".
/home/ubuntu/xbpneus/backend/transportador/estoque/views.py: Warning [ProdutoViewSet]: Failed to obtain model through view's queryset due to raised exception. Prevent this either by setting "queryset = Model.objects.none()" on the view, checking for "getattr(self, "swagger_fake_view", False)" in get_queryset() or by simply using @extend_schema. (Exception: 'AnonymousUser' object has no attribute 'empresa')
/home/ubuntu/xbpneus/backend/transportador/estoque/serializers.py: Warning [ProdutoViewSet > ProdutoSerializer]: unable to resolve type hint for function "estoque_atual". Consider using a type hint or @extend_schema_field. Defaulting to string.
/home/ubuntu/xbpneus/backend/transportador/estoque/serializers.py: Warning [ProdutoViewSet > ProdutoSerializer]: unable to resolve type hint for function "necessita_reposicao". Consider using a type hint or @extend_schema_field. Defaulting to string.
/home/ubuntu/xbpneus/backend/transportador/estoque/views.py: Warning [ProdutoViewSet]: could not derive type of path parameter "id" because it is untyped and obtaining queryset from the viewset failed. Consider adding a type to the path (e.g. <int:id>) or annotating the parameter type with @extend_schema. Defaulting to "string".
/home/ubuntu/xbpneus/backend/transportador/estoque/views.py: Warning [SaldoEstoqueViewSet]: Failed to obtain model through view's queryset due to raised exception. Prevent this either by setting "queryset = Model.objects.none()" on the view, checking for "getattr(self, "swagger_fake_view", False)" in get_queryset() or by simply using @extend_schema. (Exception: 'AnonymousUser' object has no attribute 'empresa')
/home/ubuntu/xbpneus/backend/transportador/estoque/views.py: Warning [SaldoEstoqueViewSet]: could not derive type of path parameter "id" because it is untyped and obtaining queryset from the viewset failed. Consider adding a type to the path (e.g. <int:id>) or annotating the parameter type with @extend_schema. Defaulting to "string".
/home/ubuntu/xbpneus/backend/transportador/ferramentas/views.py: Warning [CalibracaoFerramentaViewSet]: Failed to obtain model through view's queryset due to raised exception. Prevent this either by setting "queryset = Model.objects.none()" on the view, checking for "getattr(self, "swagger_fake_view", False)" in get_queryset() or by simply using @extend_schema. (Exception: 'AnonymousUser' object has no attribute 'empresa')
/home/ubuntu/xbpneus/backend/transportador/ferramentas/views.py: Warning [CalibracaoFerramentaViewSet]: could not derive type of path parameter "id" because it is untyped and obtaining queryset from the viewset failed. Consider adding a type to the path (e.g. <int:id>) or annotating the parameter type with @extend_schema. Defaulting to "string".
/home/ubuntu/xbpneus/backend/transportador/ferramentas/views.py: Warning [EmprestimoFerramentaViewSet]: Failed to obtain model through view's queryset due to raised exception. Prevent this either by setting "queryset = Model.objects.none()" on the view, checking for "getattr(self, "swagger_fake_view", False)" in get_queryset() or by simply using @extend_schema. (Exception: 'AnonymousUser' object has no attribute 'empresa')
/home/ubuntu/xbpneus/backend/transportador/ferramentas/views.py: Warning [EmprestimoFerramentaViewSet]: could not derive type of path parameter "id" because it is untyped and obtaining queryset from the viewset failed. Consider adding a type to the path (e.g. <int:id>) or annotating the parameter type with @extend_schema. Defaulting to "string".
/home/ubuntu/xbpneus/backend/transportador/ferramentas/views.py: Warning [FerramentaViewSet]: Failed to obtain model through view's queryset due to raised exception. Prevent this either by setting "queryset = Model.objects.none()" on the view, checking for "getattr(self, "swagger_fake_view", False)" in get_queryset() or by simply using @extend_schema. (Exception: 'AnonymousUser' object has no attribute 'empresa')
/home/ubuntu/xbpneus/backend/transportador/ferramentas/views.py: Warning [FerramentaViewSet]: could not derive type of path parameter "id" because it is untyped and obtaining queryset from the viewset failed. Consider adding a type to the path (e.g. <int:id>) or annotating the parameter type with @extend_schema. Defaulting to "string".
/home/ubuntu/xbpneus/backend/transportador/ferramentas/views.py: Warning [ManutencaoFerramentaViewSet]: Failed to obtain model through view's queryset due to raised exception. Prevent this either by setting "queryset = Model.objects.none()" on the view, checking for "getattr(self, "swagger_fake_view", False)" in get_queryset() or by simply using @extend_schema. (Exception: 'AnonymousUser' object has no attribute 'empresa')
/home/ubuntu/xbpneus/backend/transportador/ferramentas/views.py: Warning [ManutencaoFerramentaViewSet]: could not derive type of path parameter "id" because it is untyped and obtaining queryset from the viewset failed. Consider adding a type to the path (e.g. <int:id>) or annotating the parameter type with @extend_schema. Defaulting to "string".
/home/ubuntu/xbpneus/backend/transportador/transportador_financeiro/views.py: Error [DespesaViewSet]: unable to guess serializer. This is graceful fallback handling for APIViews. Consider using GenericAPIView as view base class, if view is under your control. Either way you may want to add a serializer_class (or method). Ignoring view for now.
/home/ubuntu/xbpneus/backend/transportador/transportador_financeiro/views.py: Error [LancamentoViewSet]: unable to guess serializer. This is graceful fallback handling for APIViews. Consider using GenericAPIView as view base class, if view is under your control. Either way you may want to add a serializer_class (or method). Ignoring view for now.
/home/ubuntu/xbpneus/backend/transportador/garantias/views.py: Error [GarantiaViewSet]: unable to guess serializer. This is graceful fallback handling for APIViews. Consider using GenericAPIView as view base class, if view is under your control. Either way you may want to add a serializer_class (or method). Ignoring view for now.
/home/ubuntu/xbpneus/backend/transportador/implemento/views.py: Error [ImplementoViewSet]: unable to guess serializer. This is graceful fallback handling for APIViews. Consider using GenericAPIView as view base class, if view is under your control. Either way you may want to add a serializer_class (or method). Ignoring view for now.
/home/ubuntu/xbpneus/backend/transportador/integracoes/views.py: Warning [APICredentialViewSet]: Failed to obtain model through view's queryset due to raised exception. Prevent this either by setting "queryset = Model.objects.none()" on the view, checking for "getattr(self, "swagger_fake_view", False)" in get_queryset() or by simply using @extend_schema. (Exception: 'AnonymousUser' object has no attribute 'empresa')
/home/ubuntu/xbpneus/backend/transportador/integracoes/views.py: Warning [APICredentialViewSet]: could not derive type of path parameter "id" because it is untyped and obtaining queryset from the viewset failed. Consider adding a type to the path (e.g. <int:id>) or annotating the parameter type with @extend_schema. Defaulting to "string".
/home/ubuntu/xbpneus/backend/transportador/integracoes/views.py: Warning [IntegracaoExternaViewSet]: Failed to obtain model through view's queryset due to raised exception. Prevent this either by setting "queryset = Model.objects.none()" on the view, checking for "getattr(self, "swagger_fake_view", False)" in get_queryset() or by simply using @extend_schema. (Exception: 'AnonymousUser' object has no attribute 'empresa')
/home/ubuntu/xbpneus/backend/transportador/integracoes/views.py: Warning [IntegracaoExternaViewSet]: could not derive type of path parameter "id" because it is untyped and obtaining queryset from the viewset failed. Consider adding a type to the path (e.g. <int:id>) or annotating the parameter type with @extend_schema. Defaulting to "string".
/home/ubuntu/xbpneus/backend/transportador/integracoes/views.py: Warning [LogIntegracaoViewSet]: Failed to obtain model through view's queryset due to raised exception. Prevent this either by setting "queryset = Model.objects.none()" on the view, checking for "getattr(self, "swagger_fake_view", False)" in get_queryset() or by simply using @extend_schema. (Exception: 'AnonymousUser' object has no attribute 'empresa')
/home/ubuntu/xbpneus/backend/transportador/integracoes/views.py: Warning [LogIntegracaoViewSet]: could not derive type of path parameter "id" because it is untyped and obtaining queryset from the viewset failed. Consider adding a type to the path (e.g. <int:id>) or annotating the parameter type with @extend_schema. Defaulting to "string".
/home/ubuntu/xbpneus/backend/transportador/integracoes/views.py: Warning [WebhookConfigViewSet]: Failed to obtain model through view's queryset due to raised exception. Prevent this either by setting "queryset = Model.objects.none()" on the view, checking for "getattr(self, "swagger_fake_view", False)" in get_queryset() or by simply using @extend_schema. (Exception: 'AnonymousUser' object has no attribute 'empresa')
/home/ubuntu/xbpneus/backend/transportador/integracoes/views.py: Warning [WebhookConfigViewSet]: could not derive type of path parameter "id" because it is untyped and obtaining queryset from the viewset failed. Consider adding a type to the path (e.g. <int:id>) or annotating the parameter type with @extend_schema. Defaulting to "string".
/home/ubuntu/xbpneus/backend/transportador/views.py: Error [login_transportador]: unable to guess serializer. This is graceful fallback handling for APIViews. Consider using GenericAPIView as view base class, if view is under your control. Either way you may want to add a serializer_class (or method). Ignoring view for now.
/home/ubuntu/xbpneus/backend/transportador/views.py: Error [logout_transportador]: unable to guess serializer. This is graceful fallback handling for APIViews. Consider using GenericAPIView as view base class, if view is under your control. Either way you may want to add a serializer_class (or method). Ignoring view for now.
/home/ubuntu/xbpneus/backend/transportador/loja/serializers.py: Warning [CategoriaProdutoViewSet > CategoriaProdutoSerializer]: Encountered 2 components with identical names "CategoriaProduto" and different classes <class 'backend.transportador.loja.serializers.CategoriaProdutoSerializer'> and <class 'backend.transportador.estoque.serializers.CategoriaProdutoSerializer'>. This will very likely result in an incorrect schema. Try renaming one.
/home/ubuntu/xbpneus/backend/transportador/loja/views.py: Warning [CategoriaProdutoViewSet]: Encountered 2 components with identical names "PaginatedCategoriaProdutoList" and different classes <class 'backend.transportador.loja.serializers.CategoriaProdutoSerializer'> and <class 'backend.transportador.estoque.serializers.CategoriaProdutoSerializer'>. This will very likely result in an incorrect schema. Try renaming one.
/home/ubuntu/xbpneus/backend/transportador/loja/serializers.py: Warning [CategoriaProdutoViewSet > CategoriaProdutoSerializer]: Encountered 2 components with identical names "PatchedCategoriaProduto" and different classes <class 'backend.transportador.loja.serializers.CategoriaProdutoSerializer'> and <class 'backend.transportador.estoque.serializers.CategoriaProdutoSerializer'>. This will very likely result in an incorrect schema. Try renaming one.
/home/ubuntu/xbpneus/backend/transportador/loja/serializers.py: Warning [ProdutoViewSet > ProdutoSerializer]: Encountered 2 components with identical names "Produto" and different classes <class 'backend.transportador.loja.serializers.ProdutoSerializer'> and <class 'backend.transportador.estoque.serializers.ProdutoSerializer'>. This will very likely result in an incorrect schema. Try renaming one.
/home/ubuntu/xbpneus/backend/transportador/loja/views.py: Warning [ProdutoViewSet]: Encountered 2 components with identical names "PaginatedProdutoList" and different classes <class 'backend.transportador.loja.serializers.ProdutoSerializer'> and <class 'backend.transportador.estoque.serializers.ProdutoSerializer'>. This will very likely result in an incorrect schema. Try renaming one.
/home/ubuntu/xbpneus/backend/transportador/loja/serializers.py: Warning [ProdutoViewSet > ProdutoSerializer]: Encountered 2 components with identical names "PatchedProduto" and different classes <class 'backend.transportador.loja.serializers.ProdutoSerializer'> and <class 'backend.transportador.estoque.serializers.ProdutoSerializer'>. This will very likely result in an incorrect schema. Try renaming one.
/home/ubuntu/xbpneus/backend/transportador/manutencao/serializers.py: Warning [ChecklistManutencaoViewSet > ChecklistManutencaoSerializer]: unable to resolve type hint for function "percentual_conclusao". Consider using a type hint or @extend_schema_field. Defaulting to string.
/home/ubuntu/xbpneus/backend/transportador/manutencao/serializers.py: Warning [OrdemServicoViewSet > OrdemServicoSerializer]: unable to resolve type hint for function "tempo_execucao". Consider using a type hint or @extend_schema_field. Defaulting to string.
/home/ubuntu/xbpneus/backend/transportador/manutencao/serializers.py: Warning [OrdemServicoViewSet > OrdemServicoSerializer]: unable to resolve type hint for function "esta_atrasada". Consider using a type hint or @extend_schema_field. Defaulting to string.
/home/ubuntu/xbpneus/backend/transportador/dashboard_views.py: Error [me_view]: unable to guess serializer. This is graceful fallback handling for APIViews. Consider using GenericAPIView as view base class, if view is under your control. Either way you may want to add a serializer_class (or method). Ignoring view for now.
/home/ubuntu/xbpneus/backend/transportador/transportador_motorista/views.py: Error [MotoristaTransportadorViewSet]: unable to guess serializer. This is graceful fallback handling for APIViews. Consider using GenericAPIView as view base class, if view is under your control. Either way you may want to add a serializer_class (or method). Ignoring view for now.
/home/ubuntu/xbpneus/backend/transportador/notas_fiscais/views.py: Warning [AnexoNotaFiscalViewSet]: Failed to obtain model through view's queryset due to raised exception. Prevent this either by setting "queryset = Model.objects.none()" on the view, checking for "getattr(self, "swagger_fake_view", False)" in get_queryset() or by simply using @extend_schema. (Exception: 'AnonymousUser' object has no attribute 'empresa')
/home/ubuntu/xbpneus/backend/transportador/notas_fiscais/views.py: Warning [AnexoNotaFiscalViewSet]: could not derive type of path parameter "id" because it is untyped and obtaining queryset from the viewset failed. Consider adding a type to the path (e.g. <int:id>) or annotating the parameter type with @extend_schema. Defaulting to "string".
/home/ubuntu/xbpneus/backend/transportador/notas_fiscais/views.py: Warning [ImpostoNotaFiscalViewSet]: Failed to obtain model through view's queryset due to raised exception. Prevent this either by setting "queryset = Model.objects.none()" on the view, checking for "getattr(self, "swagger_fake_view", False)" in get_queryset() or by simply using @extend_schema. (Exception: 'AnonymousUser' object has no attribute 'empresa')
/home/ubuntu/xbpneus/backend/transportador/notas_fiscais/views.py: Warning [ImpostoNotaFiscalViewSet]: could not derive type of path parameter "id" because it is untyped and obtaining queryset from the viewset failed. Consider adding a type to the path (e.g. <int:id>) or annotating the parameter type with @extend_schema. Defaulting to "string".
/home/ubuntu/xbpneus/backend/transportador/notas_fiscais/views.py: Warning [ItemNotaFiscalViewSet]: Failed to obtain model through view's queryset due to raised exception. Prevent this either by setting "queryset = Model.objects.none()" on the view, checking for "getattr(self, "swagger_fake_view", False)" in get_queryset() or by simply using @extend_schema. (Exception: 'AnonymousUser' object has no attribute 'empresa')
/home/ubuntu/xbpneus/backend/transportador/notas_fiscais/views.py: Warning [ItemNotaFiscalViewSet]: could not derive type of path parameter "id" because it is untyped and obtaining queryset from the viewset failed. Consider adding a type to the path (e.g. <int:id>) or annotating the parameter type with @extend_schema. Defaulting to "string".
/home/ubuntu/xbpneus/backend/transportador/notas_fiscais/views.py: Warning [NotaFiscalViewSet]: Failed to obtain model through view's queryset due to raised exception. Prevent this either by setting "queryset = Model.objects.none()" on the view, checking for "getattr(self, "swagger_fake_view", False)" in get_queryset() or by simply using @extend_schema. (Exception: 'AnonymousUser' object has no attribute 'empresa')
/home/ubuntu/xbpneus/backend/transportador/notas_fiscais/views.py: Warning [NotaFiscalViewSet]: could not derive type of path parameter "id" because it is untyped and obtaining queryset from the viewset failed. Consider adding a type to the path (e.g. <int:id>) or annotating the parameter type with @extend_schema. Defaulting to "string".
/home/ubuntu/xbpneus/backend/transportador/pecas/views.py: Warning [CategoriaPecaViewSet]: Failed to obtain model through view's queryset due to raised exception. Prevent this either by setting "queryset = Model.objects.none()" on the view, checking for "getattr(self, "swagger_fake_view", False)" in get_queryset() or by simply using @extend_schema. (Exception: 'AnonymousUser' object has no attribute 'empresa')
/home/ubuntu/xbpneus/backend/transportador/pecas/views.py: Warning [CategoriaPecaViewSet]: could not derive type of path parameter "id" because it is untyped and obtaining queryset from the viewset failed. Consider adding a type to the path (e.g. <int:id>) or annotating the parameter type with @extend_schema. Defaulting to "string".
/home/ubuntu/xbpneus/backend/transportador/pecas/views.py: Warning [EstoquePecaViewSet]: Failed to obtain model through view's queryset due to raised exception. Prevent this either by setting "queryset = Model.objects.none()" on the view, checking for "getattr(self, "swagger_fake_view", False)" in get_queryset() or by simply using @extend_schema. (Exception: 'AnonymousUser' object has no attribute 'empresa')
/home/ubuntu/xbpneus/backend/transportador/pecas/views.py: Warning [EstoquePecaViewSet]: could not derive type of path parameter "id" because it is untyped and obtaining queryset from the viewset failed. Consider adding a type to the path (e.g. <int:id>) or annotating the parameter type with @extend_schema. Defaulting to "string".
/home/ubuntu/xbpneus/backend/transportador/pecas/views.py: Warning [FornecedorPecaViewSet]: Failed to obtain model through view's queryset due to raised exception. Prevent this either by setting "queryset = Model.objects.none()" on the view, checking for "getattr(self, "swagger_fake_view", False)" in get_queryset() or by simply using @extend_schema. (Exception: 'AnonymousUser' object has no attribute 'empresa')
/home/ubuntu/xbpneus/backend/transportador/pecas/views.py: Warning [FornecedorPecaViewSet]: could not derive type of path parameter "id" because it is untyped and obtaining queryset from the viewset failed. Consider adding a type to the path (e.g. <int:id>) or annotating the parameter type with @extend_schema. Defaulting to "string".
/home/ubuntu/xbpneus/backend/transportador/pecas/views.py: Warning [MovimentacaoPecaViewSet]: Failed to obtain model through view's queryset due to raised exception. Prevent this either by setting "queryset = Model.objects.none()" on the view, checking for "getattr(self, "swagger_fake_view", False)" in get_queryset() or by simply using @extend_schema. (Exception: 'AnonymousUser' object has no attribute 'empresa')
/home/ubuntu/xbpneus/backend/transportador/pecas/views.py: Warning [MovimentacaoPecaViewSet]: could not derive type of path parameter "id" because it is untyped and obtaining queryset from the viewset failed. Consider adding a type to the path (e.g. <int:id>) or annotating the parameter type with @extend_schema. Defaulting to "string".
/home/ubuntu/xbpneus/backend/transportador/pecas/views.py: Warning [PecaViewSet]: Failed to obtain model through view's queryset due to raised exception. Prevent this either by setting "queryset = Model.objects.none()" on the view, checking for "getattr(self, "swagger_fake_view", False)" in get_queryset() or by simply using @extend_schema. (Exception: 'AnonymousUser' object has no attribute 'empresa')
/home/ubuntu/xbpneus/backend/transportador/pecas/views.py: Warning [PecaViewSet]: could not derive type of path parameter "id" because it is untyped and obtaining queryset from the viewset failed. Consider adding a type to the path (e.g. <int:id>) or annotating the parameter type with @extend_schema. Defaulting to "string".
/home/ubuntu/xbpneus/backend/transportador/views.py: Error [perfil_transportador]: unable to guess serializer. This is graceful fallback handling for APIViews. Consider using GenericAPIView as view base class, if view is under your control. Either way you may want to add a serializer_class (or method). Ignoring view for now.
/home/ubuntu/xbpneus/backend/transportador/pneus/serializers.py: Warning [TireViewSet > TireSerializer]: unable to resolve type hint for function "get_vida_util_percentual". Consider using a type hint or @extend_schema_field. Defaulting to string.
/home/ubuntu/xbpneus/backend/transportador/pneus/serializers.py: Warning [TireViewSet > TireSerializer]: unable to resolve type hint for function "get_precisa_inspecao". Consider using a type hint or @extend_schema_field. Defaulting to string.
/home/ubuntu/xbpneus/backend/transportador/dashboard_views.py: Error [profile_view]: unable to guess serializer. This is graceful fallback handling for APIViews. Consider using GenericAPIView as view base class, if view is under your control. Either way you may want to add a serializer_class (or method). Ignoring view for now.
/home/ubuntu/xbpneus/backend/transportador/views.py: Error [registro_transportador]: unable to guess serializer. This is graceful fallback handling for APIViews. Consider using GenericAPIView as view base class, if view is under your control. Either way you may want to add a serializer_class (or method). Ignoring view for now.
/home/ubuntu/xbpneus/backend/transportador/relatorios/views.py: Warning [DashboardPersonalizadoViewSet]: Failed to obtain model through view's queryset due to raised exception. Prevent this either by setting "queryset = Model.objects.none()" on the view, checking for "getattr(self, "swagger_fake_view", False)" in get_queryset() or by simply using @extend_schema. (Exception: 'AnonymousUser' object has no attribute 'empresa')
/home/ubuntu/xbpneus/backend/transportador/relatorios/views.py: Warning [DashboardPersonalizadoViewSet]: could not derive type of path parameter "id" because it is untyped and obtaining queryset from the viewset failed. Consider adding a type to the path (e.g. <int:id>) or annotating the parameter type with @extend_schema. Defaulting to "string".
/home/ubuntu/xbpneus/backend/transportador/relatorios/views.py: Warning [RelatorioAgendadoViewSet]: Failed to obtain model through view's queryset due to raised exception. Prevent this either by setting "queryset = Model.objects.none()" on the view, checking for "getattr(self, "swagger_fake_view", False)" in get_queryset() or by simply using @extend_schema. (Exception: 'AnonymousUser' object has no attribute 'empresa')
/home/ubuntu/xbpneus/backend/transportador/relatorios/views.py: Warning [RelatorioAgendadoViewSet]: could not derive type of path parameter "id" because it is untyped and obtaining queryset from the viewset failed. Consider adding a type to the path (e.g. <int:id>) or annotating the parameter type with @extend_schema. Defaulting to "string".
/home/ubuntu/xbpneus/backend/transportador/relatorios/views.py: Warning [RelatorioGeradoViewSet]: Failed to obtain model through view's queryset due to raised exception. Prevent this either by setting "queryset = Model.objects.none()" on the view, checking for "getattr(self, "swagger_fake_view", False)" in get_queryset() or by simply using @extend_schema. (Exception: 'AnonymousUser' object has no attribute 'empresa')
/home/ubuntu/xbpneus/backend/transportador/relatorios/views.py: Warning [RelatorioGeradoViewSet]: could not derive type of path parameter "id" because it is untyped and obtaining queryset from the viewset failed. Consider adding a type to the path (e.g. <int:id>) or annotating the parameter type with @extend_schema. Defaulting to "string".
/home/ubuntu/xbpneus/backend/transportador/relatorios/views.py: Warning [RelatorioTemplateViewSet]: Failed to obtain model through view's queryset due to raised exception. Prevent this either by setting "queryset = Model.objects.none()" on the view, checking for "getattr(self, "swagger_fake_view", False)" in get_queryset() or by simply using @extend_schema. (Exception: 'AnonymousUser' object has no attribute 'empresa')
/home/ubuntu/xbpneus/backend/transportador/relatorios/views.py: Warning [RelatorioTemplateViewSet]: could not derive type of path parameter "id" because it is untyped and obtaining queryset from the viewset failed. Consider adding a type to the path (e.g. <int:id>) or annotating the parameter type with @extend_schema. Defaulting to "string".
/home/ubuntu/xbpneus/backend/transportador/transportador_relatorios/views.py: Error [RelatorioTransportadorViewSet]: unable to guess serializer. This is graceful fallback handling for APIViews. Consider using GenericAPIView as view base class, if view is under your control. Either way you may want to add a serializer_class (or method). Ignoring view for now.
/home/ubuntu/xbpneus/backend/transportador/telemetria/serializers.py: Warning [AlertaViewSet > AlertaSerializer]: Encountered 2 components with identical names "Alerta" and different classes <class 'backend.transportador.telemetria.serializers.AlertaSerializer'> and <class 'backend.transportador.alertas.serializers.AlertaSerializer'>. This will very likely result in an incorrect schema. Try renaming one.
/home/ubuntu/xbpneus/backend/transportador/telemetria/views.py: Warning [AlertaViewSet]: Encountered 2 components with identical names "PaginatedAlertaList" and different classes <class 'backend.transportador.telemetria.serializers.AlertaSerializer'> and <class 'backend.transportador.alertas.serializers.AlertaSerializer'>. This will very likely result in an incorrect schema. Try renaming one.
/home/ubuntu/xbpneus/backend/transportador/telemetria/serializers.py: Warning [AlertaViewSet > AlertaSerializer]: Encountered 2 components with identical names "PatchedAlerta" and different classes <class 'backend.transportador.telemetria.serializers.AlertaSerializer'> and <class 'backend.transportador.alertas.serializers.AlertaSerializer'>. This will very likely result in an incorrect schema. Try renaming one.
/home/ubuntu/xbpneus/backend/transportador/transportador_tr/views.py: Error [TRViewSet]: unable to guess serializer. This is graceful fallback handling for APIViews. Consider using GenericAPIView as view base class, if view is under your control. Either way you may want to add a serializer_class (or method). Ignoring view for now.
/home/ubuntu/xbpneus/backend/transportador/treinamentos/views.py: Warning [CertificadoTreinamentoViewSet]: Failed to obtain model through view's queryset due to raised exception. Prevent this either by setting "queryset = Model.objects.none()" on the view, checking for "getattr(self, "swagger_fake_view", False)" in get_queryset() or by simply using @extend_schema. (Exception: 'AnonymousUser' object has no attribute 'empresa')
/home/ubuntu/xbpneus/backend/transportador/treinamentos/views.py: Warning [CertificadoTreinamentoViewSet]: could not derive type of path parameter "id" because it is untyped and obtaining queryset from the viewset failed. Consider adding a type to the path (e.g. <int:id>) or annotating the parameter type with @extend_schema. Defaulting to "string".
/home/ubuntu/xbpneus/backend/transportador/treinamentos/views.py: Warning [CursoTreinamentoViewSet]: Failed to obtain model through view's queryset due to raised exception. Prevent this either by setting "queryset = Model.objects.none()" on the view, checking for "getattr(self, "swagger_fake_view", False)" in get_queryset() or by simply using @extend_schema. (Exception: 'AnonymousUser' object has no attribute 'empresa')
/home/ubuntu/xbpneus/backend/transportador/treinamentos/views.py: Warning [CursoTreinamentoViewSet]: could not derive type of path parameter "id" because it is untyped and obtaining queryset from the viewset failed. Consider adding a type to the path (e.g. <int:id>) or annotating the parameter type with @extend_schema. Defaulting to "string".
/home/ubuntu/xbpneus/backend/transportador/treinamentos/views.py: Warning [InstrutorTreinamentoViewSet]: Failed to obtain model through view's queryset due to raised exception. Prevent this either by setting "queryset = Model.objects.none()" on the view, checking for "getattr(self, "swagger_fake_view", False)" in get_queryset() or by simply using @extend_schema. (Exception: 'AnonymousUser' object has no attribute 'empresa')
/home/ubuntu/xbpneus/backend/transportador/treinamentos/views.py: Warning [InstrutorTreinamentoViewSet]: could not derive type of path parameter "id" because it is untyped and obtaining queryset from the viewset failed. Consider adding a type to the path (e.g. <int:id>) or annotating the parameter type with @extend_schema. Defaulting to "string".
/home/ubuntu/xbpneus/backend/transportador/treinamentos/views.py: Warning [TreinamentoRealizadoViewSet]: Failed to obtain model through view's queryset due to raised exception. Prevent this either by setting "queryset = Model.objects.none()" on the view, checking for "getattr(self, "swagger_fake_view", False)" in get_queryset() or by simply using @extend_schema. (Exception: 'AnonymousUser' object has no attribute 'empresa')
/home/ubuntu/xbpneus/backend/transportador/treinamentos/views.py: Warning [TreinamentoRealizadoViewSet]: could not derive type of path parameter "id" because it is untyped and obtaining queryset from the viewset failed. Consider adding a type to the path (e.g. <int:id>) or annotating the parameter type with @extend_schema. Defaulting to "string".
/home/ubuntu/xbpneus/backend/transportador/viagens/serializers.py: Warning [CargaViewSet > CargaSerializer]: Encountered 2 components with identical names "Carga" and different classes <class 'backend.transportador.viagens.serializers.CargaSerializer'> and <class 'backend.transportador.cargas.serializers.CargaSerializer'>. This will very likely result in an incorrect schema. Try renaming one.
/home/ubuntu/xbpneus/backend/transportador/viagens/views.py: Warning [CargaViewSet]: Encountered 2 components with identical names "PaginatedCargaList" and different classes <class 'backend.transportador.viagens.serializers.CargaSerializer'> and <class 'backend.transportador.cargas.serializers.CargaSerializer'>. This will very likely result in an incorrect schema. Try renaming one.
/home/ubuntu/xbpneus/backend/transportador/viagens/serializers.py: Warning [CargaViewSet > CargaSerializer]: Encountered 2 components with identical names "PatchedCarga" and different classes <class 'backend.transportador.viagens.serializers.CargaSerializer'> and <class 'backend.transportador.cargas.serializers.CargaSerializer'>. This will very likely result in an incorrect schema. Try renaming one.
/home/ubuntu/xbpneus/backend/transportador/viagens/serializers.py: Warning [ViagemViewSet > ViagemSerializer > CargaSerializer]: Encountered 2 components with identical names "Carga" and different classes <class 'backend.transportador.viagens.serializers.CargaSerializer'> and <class 'backend.transportador.cargas.serializers.CargaSerializer'>. This will very likely result in an incorrect schema. Try renaming one.
/home/ubuntu/xbpneus/backend/common/register_views.py: Error [register_full_view]: unable to guess serializer. This is graceful fallback handling for APIViews. Consider using GenericAPIView as view base class, if view is under your control. Either way you may want to add a serializer_class (or method). Ignoring view for now.
Warning: enum naming encountered a non-optimally resolvable collision for fields named "tipo". The same name has been used for multiple choice sets in multiple components. The collision was resolved with "Tipo24eEnum". add an entry to ENUM_NAME_OVERRIDES to fix the naming.
Warning: enum naming encountered a non-optimally resolvable collision for fields named "tipo". The same name has been used for multiple choice sets in multiple components. The collision was resolved with "TipoFf8Enum". add an entry to ENUM_NAME_OVERRIDES to fix the naming.
Warning: enum naming encountered a non-optimally resolvable collision for fields named "tipo". The same name has been used for multiple choice sets in multiple components. The collision was resolved with "Tipo25aEnum". add an entry to ENUM_NAME_OVERRIDES to fix the naming.
Warning: enum naming encountered a non-optimally resolvable collision for fields named "tipo". The same name has been used for multiple choice sets in multiple components. The collision was resolved with "Tipo2a6Enum". add an entry to ENUM_NAME_OVERRIDES to fix the naming.
Warning: enum naming encountered a non-optimally resolvable collision for fields named "tipo". The same name has been used for multiple choice sets in multiple components. The collision was resolved with "Tipo964Enum". add an entry to ENUM_NAME_OVERRIDES to fix the naming.
Warning: enum naming encountered a non-optimally resolvable collision for fields named "status". The same name has been used for multiple choice sets in multiple components. The collision was resolved with "Status99bEnum". add an entry to ENUM_NAME_OVERRIDES to fix the naming.
Warning: enum naming encountered a non-optimally resolvable collision for fields named "status". The same name has been used for multiple choice sets in multiple components. The collision was resolved with "Status3aaEnum". add an entry to ENUM_NAME_OVERRIDES to fix the naming.
Warning: enum naming encountered a non-optimally resolvable collision for fields named "status". The same name has been used for multiple choice sets in multiple components. The collision was resolved with "Status3edEnum". add an entry to ENUM_NAME_OVERRIDES to fix the naming.
{"message": "\"GET /api/schema/ HTTP/1.1\" 200 1232501", "request": "<socket.socket fd=6, family=2, type=1, proto=0, laddr=('127.0.0.1', 8000), raddr=('127.0.0.1', 50196)>", "server_time": "23/Oct/2025 08:56:16", "status_code": 200}
{"message": "\"GET /api/docs/ HTTP/1.1\" 200 4453", "request": "<socket.socket fd=5, family=2, type=1, proto=0, laddr=('127.0.0.1', 8000), raddr=('127.0.0.1', 50204)>", "server_time": "23/Oct/2025 08:56:16", "status_code": 200}
{"message": "Method Not Allowed: /api/token/", "status_code": 405, "request": "<WSGIRequest: GET '/api/token/'>"}
{"message": "\"GET /api/token/ HTTP/1.1\" 405 47", "request": "<socket.socket fd=6, family=2, type=1, proto=0, laddr=('127.0.0.1', 8000), raddr=('127.0.0.1', 50218)>", "server_time": "23/Oct/2025 08:56:16", "status_code": 405}
{"message": "Method Not Allowed: /api/token/refresh/", "status_code": 405, "request": "<WSGIRequest: GET '/api/token/refresh/'>"}
{"message": "\"GET /api/token/refresh/ HTTP/1.1\" 405 47", "request": "<socket.socket fd=5, family=2, type=1, proto=0, laddr=('127.0.0.1', 8000), raddr=('127.0.0.1', 50224)>", "server_time": "23/Oct/2025 08:56:16", "status_code": 405}
{"message": "Method Not Allowed: /api/token/verify/", "status_code": 405, "request": "<WSGIRequest: GET '/api/token/verify/'>"}
{"message": "\"GET /api/token/verify/ HTTP/1.1\" 405 47", "request": "<socket.socket fd=6, family=2, type=1, proto=0, laddr=('127.0.0.1', 8000), raddr=('127.0.0.1', 50236)>", "server_time": "23/Oct/2025 08:56:16", "status_code": 405}
{"message": "Unauthorized: /api/auth/logout/", "status_code": 401, "request": "<WSGIRequest: GET '/api/auth/logout/'>"}
{"message": "\"GET /api/auth/logout/ HTTP/1.1\" 401 68", "request": "<socket.socket fd=5, family=2, type=1, proto=0, laddr=('127.0.0.1', 8000), raddr=('127.0.0.1', 50248)>", "server_time": "23/Oct/2025 08:56:16", "status_code": 401}
{"message": "Unauthorized: /api/auth/me/", "status_code": 401, "request": "<WSGIRequest: GET '/api/auth/me/'>"}
{"message": "\"GET /api/auth/me/ HTTP/1.1\" 401 68", "request": "<socket.socket fd=6, family=2, type=1, proto=0, laddr=('127.0.0.1', 8000), raddr=('127.0.0.1', 50262)>", "server_time": "23/Oct/2025 08:56:16", "status_code": 401}
{"message": "Method Not Allowed: /api/users/register_full/", "status_code": 405, "request": "<WSGIRequest: GET '/api/users/register_full/'>"}
{"message": "\"GET /api/users/register_full/ HTTP/1.1\" 405 47", "request": "<socket.socket fd=5, family=2, type=1, proto=0, laddr=('127.0.0.1', 8000), raddr=('127.0.0.1', 50266)>", "server_time": "23/Oct/2025 08:56:16", "status_code": 405}
{"message": "Not Found: /api/approve/", "status_code": 404, "request": "<WSGIRequest: GET '/api/approve/'>"}
{"message": "\"GET /api/approve/ HTTP/1.1\" 404 11063", "request": "<socket.socket fd=6, family=2, type=1, proto=0, laddr=('127.0.0.1', 8000), raddr=('127.0.0.1', 50270)>", "server_time": "23/Oct/2025 08:56:16", "status_code": 404}
{"message": "Not Found: /api/transportador/", "status_code": 404, "request": "<WSGIRequest: GET '/api/transportador/'>"}
{"message": "\"GET /api/transportador/ HTTP/1.1\" 404 20879", "request": "<socket.socket fd=5, family=2, type=1, proto=0, laddr=('127.0.0.1', 8000), raddr=('127.0.0.1', 50282)>", "server_time": "23/Oct/2025 08:56:16", "status_code": 404}
{"message": "Not Found: /api/motorista/", "status_code": 404, "request": "<WSGIRequest: GET '/api/motorista/'>"}
{"message": "\"GET /api/motorista/ HTTP/1.1\" 404 11705", "request": "<socket.socket fd=6, family=2, type=1, proto=0, laddr=('127.0.0.1', 8000), raddr=('127.0.0.1', 50288)>", "server_time": "23/Oct/2025 08:56:16", "status_code": 404}
{"message": "Not Found: /api/borracharia/", "status_code": 404, "request": "<WSGIRequest: GET '/api/borracharia/'>"}
{"message": "\"GET /api/borracharia/ HTTP/1.1\" 404 11552", "request": "<socket.socket fd=5, family=2, type=1, proto=0, laddr=('127.0.0.1', 8000), raddr=('127.0.0.1', 50294)>", "server_time": "23/Oct/2025 08:56:17", "status_code": 404}
{"message": "Not Found: /api/revenda/", "status_code": 404, "request": "<WSGIRequest: GET '/api/revenda/'>"}
{"message": "\"GET /api/revenda/ HTTP/1.1\" 404 11520", "request": "<socket.socket fd=6, family=2, type=1, proto=0, laddr=('127.0.0.1', 8000), raddr=('127.0.0.1', 50308)>", "server_time": "23/Oct/2025 08:56:17", "status_code": 404}
{"message": "Not Found: /api/recapagem/", "status_code": 404, "request": "<WSGIRequest: GET '/api/recapagem/'>"}
{"message": "\"GET /api/recapagem/ HTTP/1.1\" 404 11536", "request": "<socket.socket fd=5, family=2, type=1, proto=0, laddr=('127.0.0.1', 8000), raddr=('127.0.0.1', 50312)>", "server_time": "23/Oct/2025 08:56:17", "status_code": 404}
{"message": "\"GET /api/transportador/motorista/ HTTP/1.1\" 200 78", "request": "<socket.socket fd=6, family=2, type=1, proto=0, laddr=('127.0.0.1', 8000), raddr=('127.0.0.1', 50314)>", "server_time": "23/Oct/2025 08:56:17", "status_code": 200}
{"message": "\"GET /api/transportador/frota/ HTTP/1.1\" 200 146", "request": "<socket.socket fd=5, family=2, type=1, proto=0, laddr=('127.0.0.1', 8000), raddr=('127.0.0.1', 50318)>", "server_time": "23/Oct/2025 08:56:17", "status_code": 200}
{"message": "\"GET /api/transportador/pneus/ HTTP/1.1\" 200 137", "request": "<socket.socket fd=6, family=2, type=1, proto=0, laddr=('127.0.0.1', 8000), raddr=('127.0.0.1', 50330)>", "server_time": "23/Oct/2025 08:56:17", "status_code": 200}
{"message": "\"GET /api/transportador/manutencao/ HTTP/1.1\" 200 541", "request": "<socket.socket fd=5, family=2, type=1, proto=0, laddr=('127.0.0.1', 8000), raddr=('127.0.0.1', 50336)>", "server_time": "23/Oct/2025 08:56:17", "status_code": 200}
{"message": "\"GET /api/transportador/estoque/ HTTP/1.1\" 200 454", "request": "<socket.socket fd=6, family=2, type=1, proto=0, laddr=('127.0.0.1', 8000), raddr=('127.0.0.1', 50344)>", "server_time": "23/Oct/2025 08:56:17", "status_code": 200}
{"message": "\"GET /api/transportador/loja/ HTTP/1.1\" 200 371", "request": "<socket.socket fd=5, family=2, type=1, proto=0, laddr=('127.0.0.1', 8000), raddr=('127.0.0.1', 50356)>", "server_time": "23/Oct/2025 08:56:17", "status_code": 200}
{"message": "\"GET /api/transportador/custos/ HTTP/1.1\" 200 219", "request": "<socket.socket fd=6, family=2, type=1, proto=0, laddr=('127.0.0.1', 8000), raddr=('127.0.0.1', 50360)>", "server_time": "23/Oct/2025 08:56:17", "status_code": 200}
{"message": "\"GET /api/transportador/combustivel/ HTTP/1.1\" 200 246", "request": "<socket.socket fd=5, family=2, type=1, proto=0, laddr=('127.0.0.1', 8000), raddr=('127.0.0.1', 50370)>", "server_time": "23/Oct/2025 08:56:17", "status_code": 200}
{"message": "\"GET /api/transportador/multas/ HTTP/1.1\" 200 217", "request": "<socket.socket fd=6, family=2, type=1, proto=0, laddr=('127.0.0.1', 8000), raddr=('127.0.0.1', 50384)>", "server_time": "23/Oct/2025 08:56:17", "status_code": 200}
{"message": "\"GET /api/transportador/documentos/ HTTP/1.1\" 200 79", "request": "<socket.socket fd=5, family=2, type=1, proto=0, laddr=('127.0.0.1', 8000), raddr=('127.0.0.1', 50388)>", "server_time": "23/Oct/2025 08:56:17", "status_code": 200}
{"message": "\"GET /api/transportador/viagens/ HTTP/1.1\" 200 205", "request": "<socket.socket fd=6, family=2, type=1, proto=0, laddr=('127.0.0.1', 8000), raddr=('127.0.0.1', 50394)>", "server_time": "23/Oct/2025 08:56:17", "status_code": 200}
{"message": "\"GET /api/transportador/clientes/ HTTP/1.1\" 200 149", "request": "<socket.socket fd=5, family=2, type=1, proto=0, laddr=('127.0.0.1', 8000), raddr=('127.0.0.1', 50406)>", "server_time": "23/Oct/2025 08:56:17", "status_code": 200}
{"message": "\"GET /api/transportador/fornecedores/ HTTP/1.1\" 200 161", "request": "<socket.socket fd=6, family=2, type=1, proto=0, laddr=('127.0.0.1', 8000), raddr=('127.0.0.1', 50416)>", "server_time": "23/Oct/2025 08:56:17", "status_code": 200}
{"message": "\"GET /api/transportador/seguros/ HTTP/1.1\" 200 222", "request": "<socket.socket fd=5, family=2, type=1, proto=0, laddr=('127.0.0.1', 8000), raddr=('127.0.0.1', 50428)>", "server_time": "23/Oct/2025 08:56:17", "status_code": 200}
{"message": "\"GET /api/transportador/contratos/ HTTP/1.1\" 200 149", "request": "<socket.socket fd=6, family=2, type=1, proto=0, laddr=('127.0.0.1', 8000), raddr=('127.0.0.1', 50444)>", "server_time": "23/Oct/2025 08:56:17", "status_code": 200}
{"message": "\"GET /api/transportador/faturamento/ HTTP/1.1\" 200 228", "request": "<socket.socket fd=5, family=2, type=1, proto=0, laddr=('127.0.0.1', 8000), raddr=('127.0.0.1', 50450)>", "server_time": "23/Oct/2025 08:56:17", "status_code": 200}
{"message": "\"GET /api/transportador/pagamentos/ HTTP/1.1\" 200 247", "request": "<socket.socket fd=6, family=2, type=1, proto=0, laddr=('127.0.0.1', 8000), raddr=('127.0.0.1', 50466)>", "server_time": "23/Oct/2025 08:56:17", "status_code": 200}
{"message": "\"GET /api/transportador/telemetria/ HTTP/1.1\" 200 226", "request": "<socket.socket fd=5, family=2, type=1, proto=0, laddr=('127.0.0.1', 8000), raddr=('127.0.0.1', 50476)>", "server_time": "23/Oct/2025 08:56:17", "status_code": 200}
{"message": "\"GET /api/transportador/rastreamento/ HTTP/1.1\" 200 305", "request": "<socket.socket fd=6, family=2, type=1, proto=0, laddr=('127.0.0.1', 8000), raddr=('127.0.0.1', 50482)>", "server_time": "23/Oct/2025 08:56:17", "status_code": 200}
{"message": "\"GET /api/transportador/rotas/ HTTP/1.1\" 200 202", "request": "<socket.socket fd=5, family=2, type=1, proto=0, laddr=('127.0.0.1', 8000), raddr=('127.0.0.1', 50492)>", "server_time": "23/Oct/2025 08:56:17", "status_code": 200}
{"message": "\"GET /api/transportador/entregas/ HTTP/1.1\" 200 291", "request": "<socket.socket fd=6, family=2, type=1, proto=0, laddr=('127.0.0.1', 8000), raddr=('127.0.0.1', 50498)>", "server_time": "23/Oct/2025 08:56:17", "status_code": 200}
{"message": "\"GET /api/transportador/dashboards/ HTTP/1.1\" 200 217", "request": "<socket.socket fd=5, family=2, type=1, proto=0, laddr=('127.0.0.1', 8000), raddr=('127.0.0.1', 50500)>", "server_time": "23/Oct/2025 08:56:17", "status_code": 200}
{"message": "\"GET /api/transportador/notificacoes/ HTTP/1.1\" 200 319", "request": "<socket.socket fd=6, family=2, type=1, proto=0, laddr=('127.0.0.1', 8000), raddr=('127.0.0.1', 50512)>", "server_time": "23/Oct/2025 08:56:17", "status_code": 200}
{"message": "\"GET /api/transportador/almoxarifado/ HTTP/1.1\" 200 609", "request": "<socket.socket fd=5, family=2, type=1, proto=0, laddr=('127.0.0.1', 8000), raddr=('127.0.0.1', 50516)>", "server_time": "23/Oct/2025 08:56:17", "status_code": 200}
{"message": "\"GET /api/transportador/relatorios/ HTTP/1.1\" 200 383", "request": "<socket.socket fd=6, family=2, type=1, proto=0, laddr=('127.0.0.1', 8000), raddr=('127.0.0.1', 50528)>", "server_time": "23/Oct/2025 08:56:17", "status_code": 200}
{"message": "\"GET /api/transportador/cargas/ HTTP/1.1\" 200 389", "request": "<socket.socket fd=5, family=2, type=1, proto=0, laddr=('127.0.0.1', 8000), raddr=('127.0.0.1', 50540)>", "server_time": "23/Oct/2025 08:56:17", "status_code": 200}
{"message": "\"GET /api/transportador/pecas/ HTTP/1.1\" 200 392", "request": "<socket.socket fd=6, family=2, type=1, proto=0, laddr=('127.0.0.1', 8000), raddr=('127.0.0.1', 50548)>", "server_time": "23/Oct/2025 08:56:17", "status_code": 200}
{"message": "\"GET /api/transportador/ferramentas/ HTTP/1.1\" 200 385", "request": "<socket.socket fd=5, family=2, type=1, proto=0, laddr=('127.0.0.1', 8000), raddr=('127.0.0.1', 50562)>", "server_time": "23/Oct/2025 08:56:17", "status_code": 200}
{"message": "\"GET /api/transportador/epis/ HTTP/1.1\" 200 273", "request": "<socket.socket fd=6, family=2, type=1, proto=0, laddr=('127.0.0.1', 8000), raddr=('127.0.0.1', 50570)>", "server_time": "23/Oct/2025 08:56:17", "status_code": 200}
{"message": "\"GET /api/transportador/treinamentos/ HTTP/1.1\" 200 405", "request": "<socket.socket fd=5, family=2, type=1, proto=0, laddr=('127.0.0.1', 8000), raddr=('127.0.0.1', 50586)>", "server_time": "23/Oct/2025 08:56:17", "status_code": 200}
{"message": "\"GET /api/transportador/compliance/ HTTP/1.1\" 200 377", "request": "<socket.socket fd=6, family=2, type=1, proto=0, laddr=('127.0.0.1', 8000), raddr=('127.0.0.1', 50602)>", "server_time": "23/Oct/2025 08:56:17", "status_code": 200}
{"message": "\"GET /api/transportador/alertas/ HTTP/1.1\" 200 327", "request": "<socket.socket fd=5, family=2, type=1, proto=0, laddr=('127.0.0.1', 8000), raddr=('127.0.0.1', 50612)>", "server_time": "23/Oct/2025 08:56:17", "status_code": 200}
{"message": "\"GET /api/transportador/integracoes/ HTTP/1.1\" 200 357", "request": "<socket.socket fd=6, family=2, type=1, proto=0, laddr=('127.0.0.1', 8000), raddr=('127.0.0.1', 50624)>", "server_time": "23/Oct/2025 08:56:17", "status_code": 200}
{"message": "\"GET /api/transportador/configuracoes/ HTTP/1.1\" 200 1007", "request": "<socket.socket fd=5, family=2, type=1, proto=0, laddr=('127.0.0.1', 8000), raddr=('127.0.0.1', 50634)>", "server_time": "23/Oct/2025 08:56:17", "status_code": 200}
{"message": "\"GET /api/transportador/empresas/ HTTP/1.1\" 200 143", "request": "<socket.socket fd=6, family=2, type=1, proto=0, laddr=('127.0.0.1', 8000), raddr=('127.0.0.1', 50642)>", "server_time": "23/Oct/2025 08:56:17", "status_code": 200}
{"message": "\"GET /api/transportador/financeiro/ HTTP/1.1\" 200 155", "request": "<socket.socket fd=5, family=2, type=1, proto=0, laddr=('127.0.0.1', 8000), raddr=('127.0.0.1', 50646)>", "server_time": "23/Oct/2025 08:56:17", "status_code": 200}
{"message": "\"GET /api/transportador/motorista/ HTTP/1.1\" 200 78", "request": "<socket.socket fd=6, family=2, type=1, proto=0, laddr=('127.0.0.1', 8000), raddr=('127.0.0.1', 50648)>", "server_time": "23/Oct/2025 08:56:17", "status_code": 200}
{"message": "\"GET /api/transportador/relatorios_transportador/ HTTP/1.1\" 200 93", "request": "<socket.socket fd=5, family=2, type=1, proto=0, laddr=('127.0.0.1', 8000), raddr=('127.0.0.1', 50658)>", "server_time": "23/Oct/2025 08:56:17", "status_code": 200}
{"message": "\"GET /api/transportador/tr/ HTTP/1.1\" 200 55", "request": "<socket.socket fd=6, family=2, type=1, proto=0, laddr=('127.0.0.1', 8000), raddr=('127.0.0.1', 50660)>", "server_time": "23/Oct/2025 08:56:17", "status_code": 200}
{"message": "\"GET /api/transportador/implemento/ HTTP/1.1\" 200 81", "request": "<socket.socket fd=5, family=2, type=1, proto=0, laddr=('127.0.0.1', 8000), raddr=('127.0.0.1', 50676)>", "server_time": "23/Oct/2025 08:56:17", "status_code": 200}
{"message": "\"GET /api/transportador/analise_pneus/ HTTP/1.1\" 200 76", "request": "<socket.socket fd=6, family=2, type=1, proto=0, laddr=('127.0.0.1', 8000), raddr=('127.0.0.1', 50690)>", "server_time": "23/Oct/2025 08:56:17", "status_code": 200}
{"message": "\"GET /api/transportador/garantias/ HTTP/1.1\" 200 76", "request": "<socket.socket fd=5, family=2, type=1, proto=0, laddr=('127.0.0.1', 8000), raddr=('127.0.0.1', 50692)>", "server_time": "23/Oct/2025 08:56:17", "status_code": 200}
{"message": "\"GET /api/transportador/auditoria/ HTTP/1.1\" 200 404", "request": "<socket.socket fd=6, family=2, type=1, proto=0, laddr=('127.0.0.1', 8000), raddr=('127.0.0.1', 50700)>", "server_time": "23/Oct/2025 08:56:17", "status_code": 200}
{"message": "\"GET /api/transportador/notas_fiscais/ HTTP/1.1\" 200 309", "request": "<socket.socket fd=5, family=2, type=1, proto=0, laddr=('127.0.0.1', 8000), raddr=('127.0.0.1', 50702)>", "server_time": "23/Oct/2025 08:56:17", "status_code": 200}
{"message": "\"GET /api/transportador/ia/ HTTP/1.1\" 200 207", "request": "<socket.socket fd=6, family=2, type=1, proto=0, laddr=('127.0.0.1', 8000), raddr=('127.0.0.1', 50716)>", "server_time": "23/Oct/2025 08:56:17", "status_code": 200}
{"message": "Not Found: /api/reports/", "status_code": 404, "request": "<WSGIRequest: GET '/api/reports/'>"}
{"message": "\"GET /api/reports/ HTTP/1.1\" 404 11682", "request": "<socket.socket fd=5, family=2, type=1, proto=0, laddr=('127.0.0.1', 8000), raddr=('127.0.0.1', 50718)>", "server_time": "23/Oct/2025 08:56:17", "status_code": 404}
{"message": "Not Found: /api/jobs/", "status_code": 404, "request": "<WSGIRequest: GET '/api/jobs/'>"}
{"message": "\"GET /api/jobs/ HTTP/1.1\" 404 11467", "request": "<socket.socket fd=6, family=2, type=1, proto=0, laddr=('127.0.0.1', 8000), raddr=('127.0.0.1', 50724)>", "server_time": "23/Oct/2025 08:56:17", "status_code": 404}
{"message": "Not Found: /", "status_code": 404, "request": "<WSGIRequest: GET '/'>"}
{"message": "\"GET / HTTP/1.1\" 404 11009", "request": "<socket.socket fd=6, family=2, type=1, proto=0, laddr=('127.0.0.1', 8000), raddr=('127.0.0.1', 51774)>", "server_time": "23/Oct/2025 10:43:58", "status_code": 404}
/home/ubuntu/xbpneus/config/temp_approval_views.py: Error [approve_motorista_externo]: unable to guess serializer. This is graceful fallback handling for APIViews. Consider using GenericAPIView as view base class, if view is under your control. Either way you may want to add a serializer_class (or method). Ignoring view for now.
/home/ubuntu/xbpneus/backend/common/auth_views.py: Error [logout_view]: unable to guess serializer. This is graceful fallback handling for APIViews. Consider using GenericAPIView as view base class, if view is under your control. Either way you may want to add a serializer_class (or method). Ignoring view for now.
/home/ubuntu/xbpneus/backend/common/auth_views.py: Error [me_view]: unable to guess serializer. This is graceful fallback handling for APIViews. Consider using GenericAPIView as view base class, if view is under your control. Either way you may want to add a serializer_class (or method). Ignoring view for now.
/home/ubuntu/xbpneus/backend/borracharia/views.py: Error [login_borracharia]: unable to guess serializer. This is graceful fallback handling for APIViews. Consider using GenericAPIView as view base class, if view is under your control. Either way you may want to add a serializer_class (or method). Ignoring view for now.
/home/ubuntu/xbpneus/backend/borracharia/views.py: Error [perfil_borracharia]: unable to guess serializer. This is graceful fallback handling for APIViews. Consider using GenericAPIView as view base class, if view is under your control. Either way you may want to add a serializer_class (or method). Ignoring view for now.
/home/ubuntu/xbpneus/backend/borracharia/views.py: Error [registro_borracharia]: unable to guess serializer. This is graceful fallback handling for APIViews. Consider using GenericAPIView as view base class, if view is under your control. Either way you may want to add a serializer_class (or method). Ignoring view for now.
/home/ubuntu/xbpneus/config/temp_user_creation_views.py: Error [create_superuser_temp]: unable to guess serializer. This is graceful fallback handling for APIViews. Consider using GenericAPIView as view base class, if view is under your control. Either way you may want to add a serializer_class (or method). Ignoring view for now.
/home/ubuntu/xbpneus/config/temp_user_creation_views.py: Error [create_test_users_temp]: unable to guess serializer. This is graceful fallback handling for APIViews. Consider using GenericAPIView as view base class, if view is under your control. Either way you may want to add a serializer_class (or method). Ignoring view for now.
/home/ubuntu/xbpneus/backend/jobs/views.py: Error [ExportJobStatusApi]: unable to guess serializer. This is graceful fallback handling for APIViews. Consider using GenericAPIView as view base class, if view is under your control. Either way you may want to add a serializer_class (or method). Ignoring view for now.
/home/ubuntu/xbpneus/backend/jobs/views.py: Error [ExportJobDownloadApi]: unable to guess serializer. This is graceful fallback handling for APIViews. Consider using GenericAPIView as view base class, if view is under your control. Either way you may want to add a serializer_class (or method). Ignoring view for now.
/home/ubuntu/xbpneus/backend/jobs/views.py: Error [ExportJobApi]: unable to guess serializer. This is graceful fallback handling for APIViews. Consider using GenericAPIView as view base class, if view is under your control. Either way you may want to add a serializer_class (or method). Ignoring view for now.
/home/ubuntu/xbpneus/backend/motorista/motorista_externo_views.py: Warning [MotoristaExternoActionViewSet]: could not derive type of path parameter "id" because it is untyped and obtaining queryset from the viewset failed. Consider adding a type to the path (e.g. <int:id>) or annotating the parameter type with @extend_schema. Defaulting to "string".
/home/ubuntu/xbpneus/backend/motorista/motorista_externo_views.py: Error [MotoristaExternoActionViewSet]: unable to guess serializer. This is graceful fallback handling for APIViews. Consider using GenericAPIView as view base class, if view is under your control. Either way you may want to add a serializer_class (or method). Ignoring view for now.
/home/ubuntu/xbpneus/backend/motorista/motorista_externo_views.py: Error [motorista_externo_dashboard]: unable to guess serializer. This is graceful fallback handling for APIViews. Consider using GenericAPIView as view base class, if view is under your control. Either way you may want to add a serializer_class (or method). Ignoring view for now.
/home/ubuntu/xbpneus/backend/motorista/motorista_externo_views.py: Error [motorista_externo_me]: unable to guess serializer. This is graceful fallback handling for APIViews. Consider using GenericAPIView as view base class, if view is under your control. Either way you may want to add a serializer_class (or method). Ignoring view for now.
/home/ubuntu/xbpneus/backend/motorista/views.py: Error [login_motorista]: unable to guess serializer. This is graceful fallback handling for APIViews. Consider using GenericAPIView as view base class, if view is under your control. Either way you may want to add a serializer_class (or method). Ignoring view for now.
/home/ubuntu/xbpneus/backend/motorista/views.py: Error [perfil_motorista]: unable to guess serializer. This is graceful fallback handling for APIViews. Consider using GenericAPIView as view base class, if view is under your control. Either way you may want to add a serializer_class (or method). Ignoring view for now.
/home/ubuntu/xbpneus/backend/motorista/views.py: Error [registro_motorista]: unable to guess serializer. This is graceful fallback handling for APIViews. Consider using GenericAPIView as view base class, if view is under your control. Either way you may want to add a serializer_class (or method). Ignoring view for now.
/home/ubuntu/xbpneus/backend/recapagem/views.py: Error [login_recapagem]: unable to guess serializer. This is graceful fallback handling for APIViews. Consider using GenericAPIView as view base class, if view is under your control. Either way you may want to add a serializer_class (or method). Ignoring view for now.
/home/ubuntu/xbpneus/backend/recapagem/views.py: Error [perfil_recapagem]: unable to guess serializer. This is graceful fallback handling for APIViews. Consider using GenericAPIView as view base class, if view is under your control. Either way you may want to add a serializer_class (or method). Ignoring view for now.
/home/ubuntu/xbpneus/backend/recapagem/views.py: Error [registro_recapagem]: unable to guess serializer. This is graceful fallback handling for APIViews. Consider using GenericAPIView as view base class, if view is under your control. Either way you may want to add a serializer_class (or method). Ignoring view for now.
/home/ubuntu/xbpneus/backend/reports/views.py: Error [GiroEstoque]: unable to guess serializer. This is graceful fallback handling for APIViews. Consider using GenericAPIView as view base class, if view is under your control. Either way you may want to add a serializer_class (or method). Ignoring view for now.
/home/ubuntu/xbpneus/backend/reports/views.py: Error [CustosPorOS]: unable to guess serializer. This is graceful fallback handling for APIViews. Consider using GenericAPIView as view base class, if view is under your control. Either way you may want to add a serializer_class (or method). Ignoring view for now.
/home/ubuntu/xbpneus/backend/reports/views.py: Error [CustosPorPosicao]: unable to guess serializer. This is graceful fallback handling for APIViews. Consider using GenericAPIView as view base class, if view is under your control. Either way you may want to add a serializer_class (or method). Ignoring view for now.
/home/ubuntu/xbpneus/backend/reports/views.py: Error [MedicoesPorPosicao]: unable to guess serializer. This is graceful fallback handling for APIViews. Consider using GenericAPIView as view base class, if view is under your control. Either way you may want to add a serializer_class (or method). Ignoring view for now.
/home/ubuntu/xbpneus/backend/revenda/views.py: Error [login_revenda]: unable to guess serializer. This is graceful fallback handling for APIViews. Consider using GenericAPIView as view base class, if view is under your control. Either way you may want to add a serializer_class (or method). Ignoring view for now.
/home/ubuntu/xbpneus/backend/revenda/views.py: Error [perfil_revenda]: unable to guess serializer. This is graceful fallback handling for APIViews. Consider using GenericAPIView as view base class, if view is under your control. Either way you may want to add a serializer_class (or method). Ignoring view for now.
/home/ubuntu/xbpneus/backend/revenda/views.py: Error [registro_revenda]: unable to guess serializer. This is graceful fallback handling for APIViews. Consider using GenericAPIView as view base class, if view is under your control. Either way you may want to add a serializer_class (or method). Ignoring view for now.
/home/ubuntu/xbpneus/backend/transportador/alertas/views.py: Warning [AlertaViewSet]: Failed to obtain model through view's queryset due to raised exception. Prevent this either by setting "queryset = Model.objects.none()" on the view, checking for "getattr(self, "swagger_fake_view", False)" in get_queryset() or by simply using @extend_schema. (Exception: 'AnonymousUser' object has no attribute 'empresa')
/home/ubuntu/xbpneus/backend/transportador/alertas/views.py: Warning [AlertaViewSet]: could not derive type of path parameter "id" because it is untyped and obtaining queryset from the viewset failed. Consider adding a type to the path (e.g. <int:id>) or annotating the parameter type with @extend_schema. Defaulting to "string".
/home/ubuntu/xbpneus/backend/transportador/alertas/views.py: Warning [ConfiguracaoAlertaViewSet]: Failed to obtain model through view's queryset due to raised exception. Prevent this either by setting "queryset = Model.objects.none()" on the view, checking for "getattr(self, "swagger_fake_view", False)" in get_queryset() or by simply using @extend_schema. (Exception: 'AnonymousUser' object has no attribute 'empresa')
/home/ubuntu/xbpneus/backend/transportador/alertas/views.py: Warning [ConfiguracaoAlertaViewSet]: could not derive type of path parameter "id" because it is untyped and obtaining queryset from the viewset failed. Consider adding a type to the path (e.g. <int:id>) or annotating the parameter type with @extend_schema. Defaulting to "string".
/home/ubuntu/xbpneus/backend/transportador/alertas/views.py: Warning [HistoricoAlertaViewSet]: Failed to obtain model through view's queryset due to raised exception. Prevent this either by setting "queryset = Model.objects.none()" on the view, checking for "getattr(self, "swagger_fake_view", False)" in get_queryset() or by simply using @extend_schema. (Exception: 'AnonymousUser' object has no attribute 'empresa')
/home/ubuntu/xbpneus/backend/transportador/alertas/views.py: Warning [HistoricoAlertaViewSet]: could not derive type of path parameter "id" because it is untyped and obtaining queryset from the viewset failed. Consider adding a type to the path (e.g. <int:id>) or annotating the parameter type with @extend_schema. Defaulting to "string".
/home/ubuntu/xbpneus/backend/transportador/alertas/views.py: Warning [TipoAlertaViewSet]: Failed to obtain model through view's queryset due to raised exception. Prevent this either by setting "queryset = Model.objects.none()" on the view, checking for "getattr(self, "swagger_fake_view", False)" in get_queryset() or by simply using @extend_schema. (Exception: 'AnonymousUser' object has no attribute 'empresa')
/home/ubuntu/xbpneus/backend/transportador/alertas/views.py: Warning [TipoAlertaViewSet]: could not derive type of path parameter "id" because it is untyped and obtaining queryset from the viewset failed. Consider adding a type to the path (e.g. <int:id>) or annotating the parameter type with @extend_schema. Defaulting to "string".
/home/ubuntu/xbpneus/backend/transportador/almoxarifado/views.py: Warning [AlmoxarifadoViewSet]: Failed to obtain model through view's queryset due to raised exception. Prevent this either by setting "queryset = Model.objects.none()" on the view, checking for "getattr(self, "swagger_fake_view", False)" in get_queryset() or by simply using @extend_schema. (Exception: 'AnonymousUser' object has no attribute 'empresa')
/home/ubuntu/xbpneus/backend/transportador/almoxarifado/views.py: Warning [AlmoxarifadoViewSet]: could not derive type of path parameter "id" because it is untyped and obtaining queryset from the viewset failed. Consider adding a type to the path (e.g. <int:id>) or annotating the parameter type with @extend_schema. Defaulting to "string".
/home/ubuntu/xbpneus/backend/transportador/almoxarifado/views.py: Warning [InventarioAlmoxarifadoViewSet]: Failed to obtain model through view's queryset due to raised exception. Prevent this either by setting "queryset = Model.objects.none()" on the view, checking for "getattr(self, "swagger_fake_view", False)" in get_queryset() or by simply using @extend_schema. (Exception: 'AnonymousUser' object has no attribute 'empresa')
/home/ubuntu/xbpneus/backend/transportador/almoxarifado/views.py: Warning [InventarioAlmoxarifadoViewSet]: could not derive type of path parameter "id" because it is untyped and obtaining queryset from the viewset failed. Consider adding a type to the path (e.g. <int:id>) or annotating the parameter type with @extend_schema. Defaulting to "string".
/home/ubuntu/xbpneus/backend/transportador/almoxarifado/views.py: Warning [ItemInventarioViewSet]: Failed to obtain model through view's queryset due to raised exception. Prevent this either by setting "queryset = Model.objects.none()" on the view, checking for "getattr(self, "swagger_fake_view", False)" in get_queryset() or by simply using @extend_schema. (Exception: 'AnonymousUser' object has no attribute 'empresa')
/home/ubuntu/xbpneus/backend/transportador/almoxarifado/views.py: Warning [ItemInventarioViewSet]: could not derive type of path parameter "id" because it is untyped and obtaining queryset from the viewset failed. Consider adding a type to the path (e.g. <int:id>) or annotating the parameter type with @extend_schema. Defaulting to "string".
/home/ubuntu/xbpneus/backend/transportador/almoxarifado/views.py: Warning [ItemRequisicaoViewSet]: Failed to obtain model through view's queryset due to raised exception. Prevent this either by setting "queryset = Model.objects.none()" on the view, checking for "getattr(self, "swagger_fake_view", False)" in get_queryset() or by simply using @extend_schema. (Exception: 'AnonymousUser' object has no attribute 'empresa')
/home/ubuntu/xbpneus/backend/transportador/almoxarifado/views.py: Warning [ItemRequisicaoViewSet]: could not derive type of path parameter "id" because it is untyped and obtaining queryset from the viewset failed. Consider adding a type to the path (e.g. <int:id>) or annotating the parameter type with @extend_schema. Defaulting to "string".
/home/ubuntu/xbpneus/backend/transportador/almoxarifado/views.py: Warning [LocalEstoqueViewSet]: Failed to obtain model through view's queryset due to raised exception. Prevent this either by setting "queryset = Model.objects.none()" on the view, checking for "getattr(self, "swagger_fake_view", False)" in get_queryset() or by simply using @extend_schema. (Exception: 'AnonymousUser' object has no attribute 'empresa')
/home/ubuntu/xbpneus/backend/transportador/almoxarifado/views.py: Warning [LocalEstoqueViewSet]: could not derive type of path parameter "id" because it is untyped and obtaining queryset from the viewset failed. Consider adding a type to the path (e.g. <int:id>) or annotating the parameter type with @extend_schema. Defaulting to "string".
/home/ubuntu/xbpneus/backend/transportador/almoxarifado/views.py: Warning [MovimentacaoAlmoxarifadoViewSet]: Failed to obtain model through view's queryset due to raised exception. Prevent this either by setting "queryset = Model.objects.none()" on the view, checking for "getattr(self, "swagger_fake_view", False)" in get_queryset() or by simply using @extend_schema. (Exception: 'AnonymousUser' object has no attribute 'empresa')
/home/ubuntu/xbpneus/backend/transportador/almoxarifado/views.py: Warning [MovimentacaoAlmoxarifadoViewSet]: could not derive type of path parameter "id" because it is untyped and obtaining queryset from the viewset failed. Consider adding a type to the path (e.g. <int:id>) or annotating the parameter type with @extend_schema. Defaulting to "string".
/home/ubuntu/xbpneus/backend/transportador/almoxarifado/views.py: Warning [RequisicaoMaterialViewSet]: Failed to obtain model through view's queryset due to raised exception. Prevent this either by setting "queryset = Model.objects.none()" on the view, checking for "getattr(self, "swagger_fake_view", False)" in get_queryset() or by simply using @extend_schema. (Exception: 'AnonymousUser' object has no attribute 'empresa')
/home/ubuntu/xbpneus/backend/transportador/almoxarifado/views.py: Warning [RequisicaoMaterialViewSet]: could not derive type of path parameter "id" because it is untyped and obtaining queryset from the viewset failed. Consider adding a type to the path (e.g. <int:id>) or annotating the parameter type with @extend_schema. Defaulting to "string".
/home/ubuntu/xbpneus/backend/transportador/analise_pneus/views.py: Error [AnalisePneusViewSet]: unable to guess serializer. This is graceful fallback handling for APIViews. Consider using GenericAPIView as view base class, if view is under your control. Either way you may want to add a serializer_class (or method). Ignoring view for now.
/home/ubuntu/xbpneus/backend/transportador/auditoria/views.py: Warning [LogAlteracaoViewSet]: Failed to obtain model through view's queryset due to raised exception. Prevent this either by setting "queryset = Model.objects.none()" on the view, checking for "getattr(self, "swagger_fake_view", False)" in get_queryset() or by simply using @extend_schema. (Exception: 'AnonymousUser' object has no attribute 'empresa')
/home/ubuntu/xbpneus/backend/transportador/auditoria/views.py: Warning [LogAlteracaoViewSet]: could not derive type of path parameter "id" because it is untyped and obtaining queryset from the viewset failed. Consider adding a type to the path (e.g. <int:id>) or annotating the parameter type with @extend_schema. Defaulting to "string".
/home/ubuntu/xbpneus/backend/transportador/auditoria/views.py: Warning [LogAuditoriaViewSet]: Failed to obtain model through view's queryset due to raised exception. Prevent this either by setting "queryset = Model.objects.none()" on the view, checking for "getattr(self, "swagger_fake_view", False)" in get_queryset() or by simply using @extend_schema. (Exception: 'AnonymousUser' object has no attribute 'empresa')
/home/ubuntu/xbpneus/backend/transportador/auditoria/serializers.py: Warning [LogAuditoriaViewSet > LogAuditoriaSerializer]: unable to resolve type hint for function "alteracoes". Consider using a type hint or @extend_schema_field. Defaulting to string.
/home/ubuntu/xbpneus/backend/transportador/auditoria/views.py: Warning [LogAuditoriaViewSet]: could not derive type of path parameter "id" because it is untyped and obtaining queryset from the viewset failed. Consider adding a type to the path (e.g. <int:id>) or annotating the parameter type with @extend_schema. Defaulting to "string".
/home/ubuntu/xbpneus/backend/transportador/auditoria/serializers.py: Warning [SessaoUsuarioViewSet > SessaoUsuarioSerializer]: unable to resolve type hint for function "duracao". Consider using a type hint or @extend_schema_field. Defaulting to string.
/home/ubuntu/xbpneus/backend/transportador/cargas/views.py: Warning [CargaViewSet]: Failed to obtain model through view's queryset due to raised exception. Prevent this either by setting "queryset = Model.objects.none()" on the view, checking for "getattr(self, "swagger_fake_view", False)" in get_queryset() or by simply using @extend_schema. (Exception: 'AnonymousUser' object has no attribute 'empresa')
/home/ubuntu/xbpneus/backend/transportador/cargas/views.py: Warning [CargaViewSet]: could not derive type of path parameter "id" because it is untyped and obtaining queryset from the viewset failed. Consider adding a type to the path (e.g. <int:id>) or annotating the parameter type with @extend_schema. Defaulting to "string".
/home/ubuntu/xbpneus/backend/transportador/cargas/views.py: Warning [ItemCargaViewSet]: Failed to obtain model through view's queryset due to raised exception. Prevent this either by setting "queryset = Model.objects.none()" on the view, checking for "getattr(self, "swagger_fake_view", False)" in get_queryset() or by simply using @extend_schema. (Exception: 'AnonymousUser' object has no attribute 'empresa')
/home/ubuntu/xbpneus/backend/transportador/cargas/views.py: Warning [ItemCargaViewSet]: could not derive type of path parameter "id" because it is untyped and obtaining queryset from the viewset failed. Consider adding a type to the path (e.g. <int:id>) or annotating the parameter type with @extend_schema. Defaulting to "string".
/home/ubuntu/xbpneus/backend/transportador/cargas/views.py: Warning [ManifestoCargaViewSet]: Failed to obtain model through view's queryset due to raised exception. Prevent this either by setting "queryset = Model.objects.none()" on the view, checking for "getattr(self, "swagger_fake_view", False)" in get_queryset() or by simply using @extend_schema. (Exception: 'AnonymousUser' object has no attribute 'empresa')
/home/ubuntu/xbpneus/backend/transportador/cargas/views.py: Warning [ManifestoCargaViewSet]: could not derive type of path parameter "id" because it is untyped and obtaining queryset from the viewset failed. Consider adding a type to the path (e.g. <int:id>) or annotating the parameter type with @extend_schema. Defaulting to "string".
/home/ubuntu/xbpneus/backend/transportador/cargas/views.py: Warning [RastreamentoCargaViewSet]: Failed to obtain model through view's queryset due to raised exception. Prevent this either by setting "queryset = Model.objects.none()" on the view, checking for "getattr(self, "swagger_fake_view", False)" in get_queryset() or by simply using @extend_schema. (Exception: 'AnonymousUser' object has no attribute 'empresa')
/home/ubuntu/xbpneus/backend/transportador/cargas/views.py: Warning [RastreamentoCargaViewSet]: could not derive type of path parameter "id" because it is untyped and obtaining queryset from the viewset failed. Consider adding a type to the path (e.g. <int:id>) or annotating the parameter type with @extend_schema. Defaulting to "string".
/home/ubuntu/xbpneus/backend/transportador/cargas/views.py: Warning [TipoCargaViewSet]: Failed to obtain model through view's queryset due to raised exception. Prevent this either by setting "queryset = Model.objects.none()" on the view, checking for "getattr(self, "swagger_fake_view", False)" in get_queryset() or by simply using @extend_schema. (Exception: 'AnonymousUser' object has no attribute 'empresa')
/home/ubuntu/xbpneus/backend/transportador/cargas/views.py: Warning [TipoCargaViewSet]: could not derive type of path parameter "id" because it is untyped and obtaining queryset from the viewset failed. Consider adding a type to the path (e.g. <int:id>) or annotating the parameter type with @extend_schema. Defaulting to "string".
/home/ubuntu/xbpneus/backend/transportador/compliance/views.py: Warning [AuditoriaComplianceViewSet]: Failed to obtain model through view's queryset due to raised exception. Prevent this either by setting "queryset = Model.objects.none()" on the view, checking for "getattr(self, "swagger_fake_view", False)" in get_queryset() or by simply using @extend_schema. (Exception: 'AnonymousUser' object has no attribute 'empresa')
/home/ubuntu/xbpneus/backend/transportador/compliance/views.py: Warning [AuditoriaComplianceViewSet]: could not derive type of path parameter "id" because it is untyped and obtaining queryset from the viewset failed. Consider adding a type to the path (e.g. <int:id>) or annotating the parameter type with @extend_schema. Defaulting to "string".
/home/ubuntu/xbpneus/backend/transportador/compliance/views.py: Warning [NaoConformidadeViewSet]: Failed to obtain model through view's queryset due to raised exception. Prevent this either by setting "queryset = Model.objects.none()" on the view, checking for "getattr(self, "swagger_fake_view", False)" in get_queryset() or by simply using @extend_schema. (Exception: 'AnonymousUser' object has no attribute 'empresa')
/home/ubuntu/xbpneus/backend/transportador/compliance/views.py: Warning [NaoConformidadeViewSet]: could not derive type of path parameter "id" because it is untyped and obtaining queryset from the viewset failed. Consider adding a type to the path (e.g. <int:id>) or annotating the parameter type with @extend_schema. Defaulting to "string".
/home/ubuntu/xbpneus/backend/transportador/compliance/views.py: Warning [NormaComplianceViewSet]: Failed to obtain model through view's queryset due to raised exception. Prevent this either by setting "queryset = Model.objects.none()" on the view, checking for "getattr(self, "swagger_fake_view", False)" in get_queryset() or by simply using @extend_schema. (Exception: 'AnonymousUser' object has no attribute 'empresa')
/home/ubuntu/xbpneus/backend/transportador/compliance/views.py: Warning [NormaComplianceViewSet]: could not derive type of path parameter "id" because it is untyped and obtaining queryset from the viewset failed. Consider adding a type to the path (e.g. <int:id>) or annotating the parameter type with @extend_schema. Defaulting to "string".
/home/ubuntu/xbpneus/backend/transportador/compliance/views.py: Warning [PlanoAcaoComplianceViewSet]: Failed to obtain model through view's queryset due to raised exception. Prevent this either by setting "queryset = Model.objects.none()" on the view, checking for "getattr(self, "swagger_fake_view", False)" in get_queryset() or by simply using @extend_schema. (Exception: 'AnonymousUser' object has no attribute 'empresa')
/home/ubuntu/xbpneus/backend/transportador/compliance/views.py: Warning [PlanoAcaoComplianceViewSet]: could not derive type of path parameter "id" because it is untyped and obtaining queryset from the viewset failed. Consider adding a type to the path (e.g. <int:id>) or annotating the parameter type with @extend_schema. Defaulting to "string".
/home/ubuntu/xbpneus/backend/transportador/configuracoes/views.py: Warning [ConfiguracaoSistemaViewSet]: Failed to obtain model through view's queryset due to raised exception. Prevent this either by setting "queryset = Model.objects.none()" on the view, checking for "getattr(self, "swagger_fake_view", False)" in get_queryset() or by simply using @extend_schema. (Exception: 'AnonymousUser' object has no attribute 'empresa')
/home/ubuntu/xbpneus/backend/transportador/configuracoes/views.py: Warning [ConfiguracaoSistemaViewSet]: could not derive type of path parameter "id" because it is untyped and obtaining queryset from the viewset failed. Consider adding a type to the path (e.g. <int:id>) or annotating the parameter type with @extend_schema. Defaulting to "string".
/home/ubuntu/xbpneus/backend/transportador/configuracoes/views.py: Warning [ParametroEmpresaViewSet]: Failed to obtain model through view's queryset due to raised exception. Prevent this either by setting "queryset = Model.objects.none()" on the view, checking for "getattr(self, "swagger_fake_view", False)" in get_queryset() or by simply using @extend_schema. (Exception: 'AnonymousUser' object has no attribute 'empresa')
/home/ubuntu/xbpneus/backend/transportador/configuracoes/views.py: Warning [ParametroEmpresaViewSet]: could not derive type of path parameter "id" because it is untyped and obtaining queryset from the viewset failed. Consider adding a type to the path (e.g. <int:id>) or annotating the parameter type with @extend_schema. Defaulting to "string".
/home/ubuntu/xbpneus/backend/transportador/configuracoes/views.py: Warning [PerfilUsuarioViewSet]: Failed to obtain model through view's queryset due to raised exception. Prevent this either by setting "queryset = Model.objects.none()" on the view, checking for "getattr(self, "swagger_fake_view", False)" in get_queryset() or by simply using @extend_schema. (Exception: 'AnonymousUser' object has no attribute 'empresa')
/home/ubuntu/xbpneus/backend/transportador/configuracoes/views.py: Warning [PerfilUsuarioViewSet]: could not derive type of path parameter "id" because it is untyped and obtaining queryset from the viewset failed. Consider adding a type to the path (e.g. <int:id>) or annotating the parameter type with @extend_schema. Defaulting to "string".
/home/ubuntu/xbpneus/backend/transportador/configuracoes/views.py: Warning [PermissaoCustomizadaViewSet]: Failed to obtain model through view's queryset due to raised exception. Prevent this either by setting "queryset = Model.objects.none()" on the view, checking for "getattr(self, "swagger_fake_view", False)" in get_queryset() or by simply using @extend_schema. (Exception: 'AnonymousUser' object has no attribute 'empresa')
/home/ubuntu/xbpneus/backend/transportador/configuracoes/views.py: Warning [PermissaoCustomizadaViewSet]: could not derive type of path parameter "id" because it is untyped and obtaining queryset from the viewset failed. Consider adding a type to the path (e.g. <int:id>) or annotating the parameter type with @extend_schema. Defaulting to "string".
/home/ubuntu/xbpneus/backend/transportador/dashboard_views.py: Error [dashboard_view]: unable to guess serializer. This is graceful fallback handling for APIViews. Consider using GenericAPIView as view base class, if view is under your control. Either way you may want to add a serializer_class (or method). Ignoring view for now.
/home/ubuntu/xbpneus/backend/transportador/dashboard/views.py: Error [MetricsView]: unable to guess serializer. This is graceful fallback handling for APIViews. Consider using GenericAPIView as view base class, if view is under your control. Either way you may want to add a serializer_class (or method). Ignoring view for now.
/home/ubuntu/xbpneus/backend/transportador/dashboard_views.py: Error [dashboard_stats_view]: unable to guess serializer. This is graceful fallback handling for APIViews. Consider using GenericAPIView as view base class, if view is under your control. Either way you may want to add a serializer_class (or method). Ignoring view for now.
/home/ubuntu/xbpneus/backend/transportador/empresas/serializers.py: Warning [EmpresaViewSet > EmpresaListSerializer]: unable to resolve type hint for function "get_total_filiais". Consider using a type hint or @extend_schema_field. Defaulting to string.
/home/ubuntu/xbpneus/backend/transportador/empresas/serializers.py: Warning [EmpresaViewSet > EmpresaSerializer]: unable to resolve type hint for function "get_total_filiais". Consider using a type hint or @extend_schema_field. Defaulting to string.
/home/ubuntu/xbpneus/backend/transportador/empresas/views.py: Error [register_transportador]: unable to guess serializer. This is graceful fallback handling for APIViews. Consider using GenericAPIView as view base class, if view is under your control. Either way you may want to add a serializer_class (or method). Ignoring view for now.
/home/ubuntu/xbpneus/backend/transportador/epis/views.py: Warning [EntregaEPIViewSet]: Failed to obtain model through view's queryset due to raised exception. Prevent this either by setting "queryset = Model.objects.none()" on the view, checking for "getattr(self, "swagger_fake_view", False)" in get_queryset() or by simply using @extend_schema. (Exception: 'AnonymousUser' object has no attribute 'empresa')
/home/ubuntu/xbpneus/backend/transportador/epis/views.py: Warning [EntregaEPIViewSet]: could not derive type of path parameter "id" because it is untyped and obtaining queryset from the viewset failed. Consider adding a type to the path (e.g. <int:id>) or annotating the parameter type with @extend_schema. Defaulting to "string".
/home/ubuntu/xbpneus/backend/transportador/epis/views.py: Warning [EPIViewSet]: Failed to obtain model through view's queryset due to raised exception. Prevent this either by setting "queryset = Model.objects.none()" on the view, checking for "getattr(self, "swagger_fake_view", False)" in get_queryset() or by simply using @extend_schema. (Exception: 'AnonymousUser' object has no attribute 'empresa')
/home/ubuntu/xbpneus/backend/transportador/epis/views.py: Warning [EPIViewSet]: could not derive type of path parameter "id" because it is untyped and obtaining queryset from the viewset failed. Consider adding a type to the path (e.g. <int:id>) or annotating the parameter type with @extend_schema. Defaulting to "string".
/home/ubuntu/xbpneus/backend/transportador/epis/views.py: Warning [FichaEPIViewSet]: Failed to obtain model through view's queryset due to raised exception. Prevent this either by setting "queryset = Model.objects.none()" on the view, checking for "getattr(self, "swagger_fake_view", False)" in get_queryset() or by simply using @extend_schema. (Exception: 'AnonymousUser' object has no attribute 'empresa')
/home/ubuntu/xbpneus/backend/transportador/epis/views.py: Warning [FichaEPIViewSet]: could not derive type of path parameter "id" because it is untyped and obtaining queryset from the viewset failed. Consider adding a type to the path (e.g. <int:id>) or annotating the parameter type with @extend_schema. Defaulting to "string".
/home/ubuntu/xbpneus/backend/transportador/epis/views.py: Warning [TipoEPIViewSet]: Failed to obtain model through view's queryset due to raised exception. Prevent this either by setting "queryset = Model.objects.none()" on the view, checking for "getattr(self, "swagger_fake_view", False)" in get_queryset() or by simply using @extend_schema. (Exception: 'AnonymousUser' object has no attribute 'empresa')
/home/ubuntu/xbpneus/backend/transportador/epis/views.py: Warning [TipoEPIViewSet]: could not derive type of path parameter "id" because it is untyped and obtaining queryset from the viewset failed. Consider adding a type to the path (e.g. <int:id>) or annotating the parameter type with @extend_schema. Defaulting to "string".
/home/ubuntu/xbpneus/backend/transportador/estoque/views.py: Warning [CategoriaProdutoViewSet]: Failed to obtain model through view's queryset due to raised exception. Prevent this either by setting "queryset = Model.objects.none()" on the view, checking for "getattr(self, "swagger_fake_view", False)" in get_queryset() or by simply using @extend_schema. (Exception: 'AnonymousUser' object has no attribute 'empresa')
/home/ubuntu/xbpneus/backend/transportador/estoque/views.py: Warning [CategoriaProdutoViewSet]: could not derive type of path parameter "id" because it is untyped and obtaining queryset from the viewset failed. Consider adding a type to the path (e.g. <int:id>) or annotating the parameter type with @extend_schema. Defaulting to "string".
/home/ubuntu/xbpneus/backend/transportador/estoque/views.py: Warning [CurvaABCViewSet]: Failed to obtain model through view's queryset due to raised exception. Prevent this either by setting "queryset = Model.objects.none()" on the view, checking for "getattr(self, "swagger_fake_view", False)" in get_queryset() or by simply using @extend_schema. (Exception: 'AnonymousUser' object has no attribute 'empresa')
/home/ubuntu/xbpneus/backend/transportador/estoque/views.py: Warning [CurvaABCViewSet]: could not derive type of path parameter "id" because it is untyped and obtaining queryset from the viewset failed. Consider adding a type to the path (e.g. <int:id>) or annotating the parameter type with @extend_schema. Defaulting to "string".
/home/ubuntu/xbpneus/backend/transportador/estoque/views.py: Warning [MovimentacaoEstoqueViewSet]: Failed to obtain model through view's queryset due to raised exception. Prevent this either by setting "queryset = Model.objects.none()" on the view, checking for "getattr(self, "swagger_fake_view", False)" in get_queryset() or by simply using @extend_schema. (Exception: 'AnonymousUser' object has no attribute 'empresa')
/home/ubuntu/xbpneus/backend/transportador/estoque/views.py: Warning [MovimentacaoEstoqueViewSet]: could not derive type of path parameter "id" because it is untyped and obtaining queryset from the viewset failed. Consider adding a type to the path (e.g. <int:id>) or annotating the parameter type with @extend_schema. Defaulting to "string".
/home/ubuntu/xbpneus/backend/transportador/estoque/views.py: Warning [PrevisaoDemandaViewSet]: Failed to obtain model through view's queryset due to raised exception. Prevent this either by setting "queryset = Model.objects.none()" on the view, checking for "getattr(self, "swagger_fake_view", False)" in get_queryset() or by simply using @extend_schema. (Exception: 'AnonymousUser' object has no attribute 'empresa')
/home/ubuntu/xbpneus/backend/transportador/estoque/serializers.py: Warning [PrevisaoDemandaViewSet > PrevisaoDemandaSerializer]: unable to resolve type hint for function "acuracia". Consider using a type hint or @extend_schema_field. Defaulting to string.
/home/ubuntu/xbpneus/backend/transportador/estoque/views.py: Warning [PrevisaoDemandaViewSet]: could not derive type of path parameter "id" because it is untyped and obtaining queryset from the viewset failed. Consider adding a type to the path (e.g. <int:id>) or annotating the parameter type with @extend_schema. Defaulting to "string".
/home/ubuntu/xbpneus/backend/transportador/estoque/views.py: Warning [ProdutoViewSet]: Failed to obtain model through view's queryset due to raised exception. Prevent this either by setting "queryset = Model.objects.none()" on the view, checking for "getattr(self, "swagger_fake_view", False)" in get_queryset() or by simply using @extend_schema. (Exception: 'AnonymousUser' object has no attribute 'empresa')
/home/ubuntu/xbpneus/backend/transportador/estoque/serializers.py: Warning [ProdutoViewSet > ProdutoSerializer]: unable to resolve type hint for function "estoque_atual". Consider using a type hint or @extend_schema_field. Defaulting to string.
/home/ubuntu/xbpneus/backend/transportador/estoque/serializers.py: Warning [ProdutoViewSet > ProdutoSerializer]: unable to resolve type hint for function "necessita_reposicao". Consider using a type hint or @extend_schema_field. Defaulting to string.
/home/ubuntu/xbpneus/backend/transportador/estoque/views.py: Warning [ProdutoViewSet]: could not derive type of path parameter "id" because it is untyped and obtaining queryset from the viewset failed. Consider adding a type to the path (e.g. <int:id>) or annotating the parameter type with @extend_schema. Defaulting to "string".
/home/ubuntu/xbpneus/backend/transportador/estoque/views.py: Warning [SaldoEstoqueViewSet]: Failed to obtain model through view's queryset due to raised exception. Prevent this either by setting "queryset = Model.objects.none()" on the view, checking for "getattr(self, "swagger_fake_view", False)" in get_queryset() or by simply using @extend_schema. (Exception: 'AnonymousUser' object has no attribute 'empresa')
/home/ubuntu/xbpneus/backend/transportador/estoque/views.py: Warning [SaldoEstoqueViewSet]: could not derive type of path parameter "id" because it is untyped and obtaining queryset from the viewset failed. Consider adding a type to the path (e.g. <int:id>) or annotating the parameter type with @extend_schema. Defaulting to "string".
/home/ubuntu/xbpneus/backend/transportador/ferramentas/views.py: Warning [CalibracaoFerramentaViewSet]: Failed to obtain model through view's queryset due to raised exception. Prevent this either by setting "queryset = Model.objects.none()" on the view, checking for "getattr(self, "swagger_fake_view", False)" in get_queryset() or by simply using @extend_schema. (Exception: 'AnonymousUser' object has no attribute 'empresa')
/home/ubuntu/xbpneus/backend/transportador/ferramentas/views.py: Warning [CalibracaoFerramentaViewSet]: could not derive type of path parameter "id" because it is untyped and obtaining queryset from the viewset failed. Consider adding a type to the path (e.g. <int:id>) or annotating the parameter type with @extend_schema. Defaulting to "string".
/home/ubuntu/xbpneus/backend/transportador/ferramentas/views.py: Warning [EmprestimoFerramentaViewSet]: Failed to obtain model through view's queryset due to raised exception. Prevent this either by setting "queryset = Model.objects.none()" on the view, checking for "getattr(self, "swagger_fake_view", False)" in get_queryset() or by simply using @extend_schema. (Exception: 'AnonymousUser' object has no attribute 'empresa')
/home/ubuntu/xbpneus/backend/transportador/ferramentas/views.py: Warning [EmprestimoFerramentaViewSet]: could not derive type of path parameter "id" because it is untyped and obtaining queryset from the viewset failed. Consider adding a type to the path (e.g. <int:id>) or annotating the parameter type with @extend_schema. Defaulting to "string".
/home/ubuntu/xbpneus/backend/transportador/ferramentas/views.py: Warning [FerramentaViewSet]: Failed to obtain model through view's queryset due to raised exception. Prevent this either by setting "queryset = Model.objects.none()" on the view, checking for "getattr(self, "swagger_fake_view", False)" in get_queryset() or by simply using @extend_schema. (Exception: 'AnonymousUser' object has no attribute 'empresa')
/home/ubuntu/xbpneus/backend/transportador/ferramentas/views.py: Warning [FerramentaViewSet]: could not derive type of path parameter "id" because it is untyped and obtaining queryset from the viewset failed. Consider adding a type to the path (e.g. <int:id>) or annotating the parameter type with @extend_schema. Defaulting to "string".
/home/ubuntu/xbpneus/backend/transportador/ferramentas/views.py: Warning [ManutencaoFerramentaViewSet]: Failed to obtain model through view's queryset due to raised exception. Prevent this either by setting "queryset = Model.objects.none()" on the view, checking for "getattr(self, "swagger_fake_view", False)" in get_queryset() or by simply using @extend_schema. (Exception: 'AnonymousUser' object has no attribute 'empresa')
/home/ubuntu/xbpneus/backend/transportador/ferramentas/views.py: Warning [ManutencaoFerramentaViewSet]: could not derive type of path parameter "id" because it is untyped and obtaining queryset from the viewset failed. Consider adding a type to the path (e.g. <int:id>) or annotating the parameter type with @extend_schema. Defaulting to "string".
/home/ubuntu/xbpneus/backend/transportador/transportador_financeiro/views.py: Error [DespesaViewSet]: unable to guess serializer. This is graceful fallback handling for APIViews. Consider using GenericAPIView as view base class, if view is under your control. Either way you may want to add a serializer_class (or method). Ignoring view for now.
/home/ubuntu/xbpneus/backend/transportador/transportador_financeiro/views.py: Error [LancamentoViewSet]: unable to guess serializer. This is graceful fallback handling for APIViews. Consider using GenericAPIView as view base class, if view is under your control. Either way you may want to add a serializer_class (or method). Ignoring view for now.
/home/ubuntu/xbpneus/backend/transportador/garantias/views.py: Error [GarantiaViewSet]: unable to guess serializer. This is graceful fallback handling for APIViews. Consider using GenericAPIView as view base class, if view is under your control. Either way you may want to add a serializer_class (or method). Ignoring view for now.
/home/ubuntu/xbpneus/backend/transportador/implemento/views.py: Error [ImplementoViewSet]: unable to guess serializer. This is graceful fallback handling for APIViews. Consider using GenericAPIView as view base class, if view is under your control. Either way you may want to add a serializer_class (or method). Ignoring view for now.
/home/ubuntu/xbpneus/backend/transportador/integracoes/views.py: Warning [APICredentialViewSet]: Failed to obtain model through view's queryset due to raised exception. Prevent this either by setting "queryset = Model.objects.none()" on the view, checking for "getattr(self, "swagger_fake_view", False)" in get_queryset() or by simply using @extend_schema. (Exception: 'AnonymousUser' object has no attribute 'empresa')
/home/ubuntu/xbpneus/backend/transportador/integracoes/views.py: Warning [APICredentialViewSet]: could not derive type of path parameter "id" because it is untyped and obtaining queryset from the viewset failed. Consider adding a type to the path (e.g. <int:id>) or annotating the parameter type with @extend_schema. Defaulting to "string".
/home/ubuntu/xbpneus/backend/transportador/integracoes/views.py: Warning [IntegracaoExternaViewSet]: Failed to obtain model through view's queryset due to raised exception. Prevent this either by setting "queryset = Model.objects.none()" on the view, checking for "getattr(self, "swagger_fake_view", False)" in get_queryset() or by simply using @extend_schema. (Exception: 'AnonymousUser' object has no attribute 'empresa')
/home/ubuntu/xbpneus/backend/transportador/integracoes/views.py: Warning [IntegracaoExternaViewSet]: could not derive type of path parameter "id" because it is untyped and obtaining queryset from the viewset failed. Consider adding a type to the path (e.g. <int:id>) or annotating the parameter type with @extend_schema. Defaulting to "string".
/home/ubuntu/xbpneus/backend/transportador/integracoes/views.py: Warning [LogIntegracaoViewSet]: Failed to obtain model through view's queryset due to raised exception. Prevent this either by setting "queryset = Model.objects.none()" on the view, checking for "getattr(self, "swagger_fake_view", False)" in get_queryset() or by simply using @extend_schema. (Exception: 'AnonymousUser' object has no attribute 'empresa')
/home/ubuntu/xbpneus/backend/transportador/integracoes/views.py: Warning [LogIntegracaoViewSet]: could not derive type of path parameter "id" because it is untyped and obtaining queryset from the viewset failed. Consider adding a type to the path (e.g. <int:id>) or annotating the parameter type with @extend_schema. Defaulting to "string".
/home/ubuntu/xbpneus/backend/transportador/integracoes/views.py: Warning [WebhookConfigViewSet]: Failed to obtain model through view's queryset due to raised exception. Prevent this either by setting "queryset = Model.objects.none()" on the view, checking for "getattr(self, "swagger_fake_view", False)" in get_queryset() or by simply using @extend_schema. (Exception: 'AnonymousUser' object has no attribute 'empresa')
/home/ubuntu/xbpneus/backend/transportador/integracoes/views.py: Warning [WebhookConfigViewSet]: could not derive type of path parameter "id" because it is untyped and obtaining queryset from the viewset failed. Consider adding a type to the path (e.g. <int:id>) or annotating the parameter type with @extend_schema. Defaulting to "string".
/home/ubuntu/xbpneus/backend/transportador/views.py: Error [login_transportador]: unable to guess serializer. This is graceful fallback handling for APIViews. Consider using GenericAPIView as view base class, if view is under your control. Either way you may want to add a serializer_class (or method). Ignoring view for now.
/home/ubuntu/xbpneus/backend/transportador/views.py: Error [logout_transportador]: unable to guess serializer. This is graceful fallback handling for APIViews. Consider using GenericAPIView as view base class, if view is under your control. Either way you may want to add a serializer_class (or method). Ignoring view for now.
/home/ubuntu/xbpneus/backend/transportador/loja/serializers.py: Warning [CategoriaProdutoViewSet > CategoriaProdutoSerializer]: Encountered 2 components with identical names "CategoriaProduto" and different classes <class 'backend.transportador.loja.serializers.CategoriaProdutoSerializer'> and <class 'backend.transportador.estoque.serializers.CategoriaProdutoSerializer'>. This will very likely result in an incorrect schema. Try renaming one.
/home/ubuntu/xbpneus/backend/transportador/loja/views.py: Warning [CategoriaProdutoViewSet]: Encountered 2 components with identical names "PaginatedCategoriaProdutoList" and different classes <class 'backend.transportador.loja.serializers.CategoriaProdutoSerializer'> and <class 'backend.transportador.estoque.serializers.CategoriaProdutoSerializer'>. This will very likely result in an incorrect schema. Try renaming one.
/home/ubuntu/xbpneus/backend/transportador/loja/serializers.py: Warning [CategoriaProdutoViewSet > CategoriaProdutoSerializer]: Encountered 2 components with identical names "PatchedCategoriaProduto" and different classes <class 'backend.transportador.loja.serializers.CategoriaProdutoSerializer'> and <class 'backend.transportador.estoque.serializers.CategoriaProdutoSerializer'>. This will very likely result in an incorrect schema. Try renaming one.
/home/ubuntu/xbpneus/backend/transportador/loja/serializers.py: Warning [ProdutoViewSet > ProdutoSerializer]: Encountered 2 components with identical names "Produto" and different classes <class 'backend.transportador.loja.serializers.ProdutoSerializer'> and <class 'backend.transportador.estoque.serializers.ProdutoSerializer'>. This will very likely result in an incorrect schema. Try renaming one.
/home/ubuntu/xbpneus/backend/transportador/loja/views.py: Warning [ProdutoViewSet]: Encountered 2 components with identical names "PaginatedProdutoList" and different classes <class 'backend.transportador.loja.serializers.ProdutoSerializer'> and <class 'backend.transportador.estoque.serializers.ProdutoSerializer'>. This will very likely result in an incorrect schema. Try renaming one.
/home/ubuntu/xbpneus/backend/transportador/loja/serializers.py: Warning [ProdutoViewSet > ProdutoSerializer]: Encountered 2 components with identical names "PatchedProduto" and different classes <class 'backend.transportador.loja.serializers.ProdutoSerializer'> and <class 'backend.transportador.estoque.serializers.ProdutoSerializer'>. This will very likely result in an incorrect schema. Try renaming one.
/home/ubuntu/xbpneus/backend/transportador/manutencao/serializers.py: Warning [ChecklistManutencaoViewSet > ChecklistManutencaoSerializer]: unable to resolve type hint for function "percentual_conclusao". Consider using a type hint or @extend_schema_field. Defaulting to string.
/home/ubuntu/xbpneus/backend/transportador/manutencao/serializers.py: Warning [OrdemServicoViewSet > OrdemServicoSerializer]: unable to resolve type hint for function "tempo_execucao". Consider using a type hint or @extend_schema_field. Defaulting to string.
/home/ubuntu/xbpneus/backend/transportador/manutencao/serializers.py: Warning [OrdemServicoViewSet > OrdemServicoSerializer]: unable to resolve type hint for function "esta_atrasada". Consider using a type hint or @extend_schema_field. Defaulting to string.
/home/ubuntu/xbpneus/backend/transportador/dashboard_views.py: Error [me_view]: unable to guess serializer. This is graceful fallback handling for APIViews. Consider using GenericAPIView as view base class, if view is under your control. Either way you may want to add a serializer_class (or method). Ignoring view for now.
/home/ubuntu/xbpneus/backend/transportador/transportador_motorista/views.py: Error [MotoristaTransportadorViewSet]: unable to guess serializer. This is graceful fallback handling for APIViews. Consider using GenericAPIView as view base class, if view is under your control. Either way you may want to add a serializer_class (or method). Ignoring view for now.
/home/ubuntu/xbpneus/backend/transportador/notas_fiscais/views.py: Warning [AnexoNotaFiscalViewSet]: Failed to obtain model through view's queryset due to raised exception. Prevent this either by setting "queryset = Model.objects.none()" on the view, checking for "getattr(self, "swagger_fake_view", False)" in get_queryset() or by simply using @extend_schema. (Exception: 'AnonymousUser' object has no attribute 'empresa')
/home/ubuntu/xbpneus/backend/transportador/notas_fiscais/views.py: Warning [AnexoNotaFiscalViewSet]: could not derive type of path parameter "id" because it is untyped and obtaining queryset from the viewset failed. Consider adding a type to the path (e.g. <int:id>) or annotating the parameter type with @extend_schema. Defaulting to "string".
/home/ubuntu/xbpneus/backend/transportador/notas_fiscais/views.py: Warning [ImpostoNotaFiscalViewSet]: Failed to obtain model through view's queryset due to raised exception. Prevent this either by setting "queryset = Model.objects.none()" on the view, checking for "getattr(self, "swagger_fake_view", False)" in get_queryset() or by simply using @extend_schema. (Exception: 'AnonymousUser' object has no attribute 'empresa')
/home/ubuntu/xbpneus/backend/transportador/notas_fiscais/views.py: Warning [ImpostoNotaFiscalViewSet]: could not derive type of path parameter "id" because it is untyped and obtaining queryset from the viewset failed. Consider adding a type to the path (e.g. <int:id>) or annotating the parameter type with @extend_schema. Defaulting to "string".
/home/ubuntu/xbpneus/backend/transportador/notas_fiscais/views.py: Warning [ItemNotaFiscalViewSet]: Failed to obtain model through view's queryset due to raised exception. Prevent this either by setting "queryset = Model.objects.none()" on the view, checking for "getattr(self, "swagger_fake_view", False)" in get_queryset() or by simply using @extend_schema. (Exception: 'AnonymousUser' object has no attribute 'empresa')
/home/ubuntu/xbpneus/backend/transportador/notas_fiscais/views.py: Warning [ItemNotaFiscalViewSet]: could not derive type of path parameter "id" because it is untyped and obtaining queryset from the viewset failed. Consider adding a type to the path (e.g. <int:id>) or annotating the parameter type with @extend_schema. Defaulting to "string".
/home/ubuntu/xbpneus/backend/transportador/notas_fiscais/views.py: Warning [NotaFiscalViewSet]: Failed to obtain model through view's queryset due to raised exception. Prevent this either by setting "queryset = Model.objects.none()" on the view, checking for "getattr(self, "swagger_fake_view", False)" in get_queryset() or by simply using @extend_schema. (Exception: 'AnonymousUser' object has no attribute 'empresa')
/home/ubuntu/xbpneus/backend/transportador/notas_fiscais/views.py: Warning [NotaFiscalViewSet]: could not derive type of path parameter "id" because it is untyped and obtaining queryset from the viewset failed. Consider adding a type to the path (e.g. <int:id>) or annotating the parameter type with @extend_schema. Defaulting to "string".
/home/ubuntu/xbpneus/backend/transportador/pecas/views.py: Warning [CategoriaPecaViewSet]: Failed to obtain model through view's queryset due to raised exception. Prevent this either by setting "queryset = Model.objects.none()" on the view, checking for "getattr(self, "swagger_fake_view", False)" in get_queryset() or by simply using @extend_schema. (Exception: 'AnonymousUser' object has no attribute 'empresa')
/home/ubuntu/xbpneus/backend/transportador/pecas/views.py: Warning [CategoriaPecaViewSet]: could not derive type of path parameter "id" because it is untyped and obtaining queryset from the viewset failed. Consider adding a type to the path (e.g. <int:id>) or annotating the parameter type with @extend_schema. Defaulting to "string".
/home/ubuntu/xbpneus/backend/transportador/pecas/views.py: Warning [EstoquePecaViewSet]: Failed to obtain model through view's queryset due to raised exception. Prevent this either by setting "queryset = Model.objects.none()" on the view, checking for "getattr(self, "swagger_fake_view", False)" in get_queryset() or by simply using @extend_schema. (Exception: 'AnonymousUser' object has no attribute 'empresa')
/home/ubuntu/xbpneus/backend/transportador/pecas/views.py: Warning [EstoquePecaViewSet]: could not derive type of path parameter "id" because it is untyped and obtaining queryset from the viewset failed. Consider adding a type to the path (e.g. <int:id>) or annotating the parameter type with @extend_schema. Defaulting to "string".
/home/ubuntu/xbpneus/backend/transportador/pecas/views.py: Warning [FornecedorPecaViewSet]: Failed to obtain model through view's queryset due to raised exception. Prevent this either by setting "queryset = Model.objects.none()" on the view, checking for "getattr(self, "swagger_fake_view", False)" in get_queryset() or by simply using @extend_schema. (Exception: 'AnonymousUser' object has no attribute 'empresa')
/home/ubuntu/xbpneus/backend/transportador/pecas/views.py: Warning [FornecedorPecaViewSet]: could not derive type of path parameter "id" because it is untyped and obtaining queryset from the viewset failed. Consider adding a type to the path (e.g. <int:id>) or annotating the parameter type with @extend_schema. Defaulting to "string".
/home/ubuntu/xbpneus/backend/transportador/pecas/views.py: Warning [MovimentacaoPecaViewSet]: Failed to obtain model through view's queryset due to raised exception. Prevent this either by setting "queryset = Model.objects.none()" on the view, checking for "getattr(self, "swagger_fake_view", False)" in get_queryset() or by simply using @extend_schema. (Exception: 'AnonymousUser' object has no attribute 'empresa')
/home/ubuntu/xbpneus/backend/transportador/pecas/views.py: Warning [MovimentacaoPecaViewSet]: could not derive type of path parameter "id" because it is untyped and obtaining queryset from the viewset failed. Consider adding a type to the path (e.g. <int:id>) or annotating the parameter type with @extend_schema. Defaulting to "string".
/home/ubuntu/xbpneus/backend/transportador/pecas/views.py: Warning [PecaViewSet]: Failed to obtain model through view's queryset due to raised exception. Prevent this either by setting "queryset = Model.objects.none()" on the view, checking for "getattr(self, "swagger_fake_view", False)" in get_queryset() or by simply using @extend_schema. (Exception: 'AnonymousUser' object has no attribute 'empresa')
/home/ubuntu/xbpneus/backend/transportador/pecas/views.py: Warning [PecaViewSet]: could not derive type of path parameter "id" because it is untyped and obtaining queryset from the viewset failed. Consider adding a type to the path (e.g. <int:id>) or annotating the parameter type with @extend_schema. Defaulting to "string".
/home/ubuntu/xbpneus/backend/transportador/views.py: Error [perfil_transportador]: unable to guess serializer. This is graceful fallback handling for APIViews. Consider using GenericAPIView as view base class, if view is under your control. Either way you may want to add a serializer_class (or method). Ignoring view for now.
/home/ubuntu/xbpneus/backend/transportador/pneus/serializers.py: Warning [TireViewSet > TireSerializer]: unable to resolve type hint for function "get_vida_util_percentual". Consider using a type hint or @extend_schema_field. Defaulting to string.
/home/ubuntu/xbpneus/backend/transportador/pneus/serializers.py: Warning [TireViewSet > TireSerializer]: unable to resolve type hint for function "get_precisa_inspecao". Consider using a type hint or @extend_schema_field. Defaulting to string.
/home/ubuntu/xbpneus/backend/transportador/dashboard_views.py: Error [profile_view]: unable to guess serializer. This is graceful fallback handling for APIViews. Consider using GenericAPIView as view base class, if view is under your control. Either way you may want to add a serializer_class (or method). Ignoring view for now.
/home/ubuntu/xbpneus/backend/transportador/views.py: Error [registro_transportador]: unable to guess serializer. This is graceful fallback handling for APIViews. Consider using GenericAPIView as view base class, if view is under your control. Either way you may want to add a serializer_class (or method). Ignoring view for now.
/home/ubuntu/xbpneus/backend/transportador/relatorios/views.py: Warning [DashboardPersonalizadoViewSet]: Failed to obtain model through view's queryset due to raised exception. Prevent this either by setting "queryset = Model.objects.none()" on the view, checking for "getattr(self, "swagger_fake_view", False)" in get_queryset() or by simply using @extend_schema. (Exception: 'AnonymousUser' object has no attribute 'empresa')
/home/ubuntu/xbpneus/backend/transportador/relatorios/views.py: Warning [DashboardPersonalizadoViewSet]: could not derive type of path parameter "id" because it is untyped and obtaining queryset from the viewset failed. Consider adding a type to the path (e.g. <int:id>) or annotating the parameter type with @extend_schema. Defaulting to "string".
/home/ubuntu/xbpneus/backend/transportador/relatorios/views.py: Warning [RelatorioAgendadoViewSet]: Failed to obtain model through view's queryset due to raised exception. Prevent this either by setting "queryset = Model.objects.none()" on the view, checking for "getattr(self, "swagger_fake_view", False)" in get_queryset() or by simply using @extend_schema. (Exception: 'AnonymousUser' object has no attribute 'empresa')
/home/ubuntu/xbpneus/backend/transportador/relatorios/views.py: Warning [RelatorioAgendadoViewSet]: could not derive type of path parameter "id" because it is untyped and obtaining queryset from the viewset failed. Consider adding a type to the path (e.g. <int:id>) or annotating the parameter type with @extend_schema. Defaulting to "string".
/home/ubuntu/xbpneus/backend/transportador/relatorios/views.py: Warning [RelatorioGeradoViewSet]: Failed to obtain model through view's queryset due to raised exception. Prevent this either by setting "queryset = Model.objects.none()" on the view, checking for "getattr(self, "swagger_fake_view", False)" in get_queryset() or by simply using @extend_schema. (Exception: 'AnonymousUser' object has no attribute 'empresa')
/home/ubuntu/xbpneus/backend/transportador/relatorios/views.py: Warning [RelatorioGeradoViewSet]: could not derive type of path parameter "id" because it is untyped and obtaining queryset from the viewset failed. Consider adding a type to the path (e.g. <int:id>) or annotating the parameter type with @extend_schema. Defaulting to "string".
/home/ubuntu/xbpneus/backend/transportador/relatorios/views.py: Warning [RelatorioTemplateViewSet]: Failed to obtain model through view's queryset due to raised exception. Prevent this either by setting "queryset = Model.objects.none()" on the view, checking for "getattr(self, "swagger_fake_view", False)" in get_queryset() or by simply using @extend_schema. (Exception: 'AnonymousUser' object has no attribute 'empresa')
/home/ubuntu/xbpneus/backend/transportador/relatorios/views.py: Warning [RelatorioTemplateViewSet]: could not derive type of path parameter "id" because it is untyped and obtaining queryset from the viewset failed. Consider adding a type to the path (e.g. <int:id>) or annotating the parameter type with @extend_schema. Defaulting to "string".
/home/ubuntu/xbpneus/backend/transportador/transportador_relatorios/views.py: Error [RelatorioTransportadorViewSet]: unable to guess serializer. This is graceful fallback handling for APIViews. Consider using GenericAPIView as view base class, if view is under your control. Either way you may want to add a serializer_class (or method). Ignoring view for now.
/home/ubuntu/xbpneus/backend/transportador/telemetria/serializers.py: Warning [AlertaViewSet > AlertaSerializer]: Encountered 2 components with identical names "Alerta" and different classes <class 'backend.transportador.telemetria.serializers.AlertaSerializer'> and <class 'backend.transportador.alertas.serializers.AlertaSerializer'>. This will very likely result in an incorrect schema. Try renaming one.
/home/ubuntu/xbpneus/backend/transportador/telemetria/views.py: Warning [AlertaViewSet]: Encountered 2 components with identical names "PaginatedAlertaList" and different classes <class 'backend.transportador.telemetria.serializers.AlertaSerializer'> and <class 'backend.transportador.alertas.serializers.AlertaSerializer'>. This will very likely result in an incorrect schema. Try renaming one.
/home/ubuntu/xbpneus/backend/transportador/telemetria/serializers.py: Warning [AlertaViewSet > AlertaSerializer]: Encountered 2 components with identical names "PatchedAlerta" and different classes <class 'backend.transportador.telemetria.serializers.AlertaSerializer'> and <class 'backend.transportador.alertas.serializers.AlertaSerializer'>. This will very likely result in an incorrect schema. Try renaming one.
/home/ubuntu/xbpneus/backend/transportador/transportador_tr/views.py: Error [TRViewSet]: unable to guess serializer. This is graceful fallback handling for APIViews. Consider using GenericAPIView as view base class, if view is under your control. Either way you may want to add a serializer_class (or method). Ignoring view for now.
/home/ubuntu/xbpneus/backend/transportador/treinamentos/views.py: Warning [CertificadoTreinamentoViewSet]: Failed to obtain model through view's queryset due to raised exception. Prevent this either by setting "queryset = Model.objects.none()" on the view, checking for "getattr(self, "swagger_fake_view", False)" in get_queryset() or by simply using @extend_schema. (Exception: 'AnonymousUser' object has no attribute 'empresa')
/home/ubuntu/xbpneus/backend/transportador/treinamentos/views.py: Warning [CertificadoTreinamentoViewSet]: could not derive type of path parameter "id" because it is untyped and obtaining queryset from the viewset failed. Consider adding a type to the path (e.g. <int:id>) or annotating the parameter type with @extend_schema. Defaulting to "string".
/home/ubuntu/xbpneus/backend/transportador/treinamentos/views.py: Warning [CursoTreinamentoViewSet]: Failed to obtain model through view's queryset due to raised exception. Prevent this either by setting "queryset = Model.objects.none()" on the view, checking for "getattr(self, "swagger_fake_view", False)" in get_queryset() or by simply using @extend_schema. (Exception: 'AnonymousUser' object has no attribute 'empresa')
/home/ubuntu/xbpneus/backend/transportador/treinamentos/views.py: Warning [CursoTreinamentoViewSet]: could not derive type of path parameter "id" because it is untyped and obtaining queryset from the viewset failed. Consider adding a type to the path (e.g. <int:id>) or annotating the parameter type with @extend_schema. Defaulting to "string".
/home/ubuntu/xbpneus/backend/transportador/treinamentos/views.py: Warning [InstrutorTreinamentoViewSet]: Failed to obtain model through view's queryset due to raised exception. Prevent this either by setting "queryset = Model.objects.none()" on the view, checking for "getattr(self, "swagger_fake_view", False)" in get_queryset() or by simply using @extend_schema. (Exception: 'AnonymousUser' object has no attribute 'empresa')
/home/ubuntu/xbpneus/backend/transportador/treinamentos/views.py: Warning [InstrutorTreinamentoViewSet]: could not derive type of path parameter "id" because it is untyped and obtaining queryset from the viewset failed. Consider adding a type to the path (e.g. <int:id>) or annotating the parameter type with @extend_schema. Defaulting to "string".
/home/ubuntu/xbpneus/backend/transportador/treinamentos/views.py: Warning [TreinamentoRealizadoViewSet]: Failed to obtain model through view's queryset due to raised exception. Prevent this either by setting "queryset = Model.objects.none()" on the view, checking for "getattr(self, "swagger_fake_view", False)" in get_queryset() or by simply using @extend_schema. (Exception: 'AnonymousUser' object has no attribute 'empresa')
/home/ubuntu/xbpneus/backend/transportador/treinamentos/views.py: Warning [TreinamentoRealizadoViewSet]: could not derive type of path parameter "id" because it is untyped and obtaining queryset from the viewset failed. Consider adding a type to the path (e.g. <int:id>) or annotating the parameter type with @extend_schema. Defaulting to "string".
/home/ubuntu/xbpneus/backend/transportador/viagens/serializers.py: Warning [CargaViewSet > CargaSerializer]: Encountered 2 components with identical names "Carga" and different classes <class 'backend.transportador.viagens.serializers.CargaSerializer'> and <class 'backend.transportador.cargas.serializers.CargaSerializer'>. This will very likely result in an incorrect schema. Try renaming one.
/home/ubuntu/xbpneus/backend/transportador/viagens/views.py: Warning [CargaViewSet]: Encountered 2 components with identical names "PaginatedCargaList" and different classes <class 'backend.transportador.viagens.serializers.CargaSerializer'> and <class 'backend.transportador.cargas.serializers.CargaSerializer'>. This will very likely result in an incorrect schema. Try renaming one.
/home/ubuntu/xbpneus/backend/transportador/viagens/serializers.py: Warning [CargaViewSet > CargaSerializer]: Encountered 2 components with identical names "PatchedCarga" and different classes <class 'backend.transportador.viagens.serializers.CargaSerializer'> and <class 'backend.transportador.cargas.serializers.CargaSerializer'>. This will very likely result in an incorrect schema. Try renaming one.
/home/ubuntu/xbpneus/backend/transportador/viagens/serializers.py: Warning [ViagemViewSet > ViagemSerializer > CargaSerializer]: Encountered 2 components with identical names "Carga" and different classes <class 'backend.transportador.viagens.serializers.CargaSerializer'> and <class 'backend.transportador.cargas.serializers.CargaSerializer'>. This will very likely result in an incorrect schema. Try renaming one.
/home/ubuntu/xbpneus/backend/common/register_views.py: Error [register_full_view]: unable to guess serializer. This is graceful fallback handling for APIViews. Consider using GenericAPIView as view base class, if view is under your control. Either way you may want to add a serializer_class (or method). Ignoring view for now.
Warning: enum naming encountered a non-optimally resolvable collision for fields named "tipo". The same name has been used for multiple choice sets in multiple components. The collision was resolved with "Tipo24eEnum". add an entry to ENUM_NAME_OVERRIDES to fix the naming.
Warning: enum naming encountered a non-optimally resolvable collision for fields named "tipo". The same name has been used for multiple choice sets in multiple components. The collision was resolved with "TipoFf8Enum". add an entry to ENUM_NAME_OVERRIDES to fix the naming.
Warning: enum naming encountered a non-optimally resolvable collision for fields named "tipo". The same name has been used for multiple choice sets in multiple components. The collision was resolved with "Tipo25aEnum". add an entry to ENUM_NAME_OVERRIDES to fix the naming.
Warning: enum naming encountered a non-optimally resolvable collision for fields named "tipo". The same name has been used for multiple choice sets in multiple components. The collision was resolved with "Tipo2a6Enum". add an entry to ENUM_NAME_OVERRIDES to fix the naming.
Warning: enum naming encountered a non-optimally resolvable collision for fields named "tipo". The same name has been used for multiple choice sets in multiple components. The collision was resolved with "Tipo964Enum". add an entry to ENUM_NAME_OVERRIDES to fix the naming.
Warning: enum naming encountered a non-optimally resolvable collision for fields named "status". The same name has been used for multiple choice sets in multiple components. The collision was resolved with "Status99bEnum". add an entry to ENUM_NAME_OVERRIDES to fix the naming.
Warning: enum naming encountered a non-optimally resolvable collision for fields named "status". The same name has been used for multiple choice sets in multiple components. The collision was resolved with "Status3aaEnum". add an entry to ENUM_NAME_OVERRIDES to fix the naming.
Warning: enum naming encountered a non-optimally resolvable collision for fields named "status". The same name has been used for multiple choice sets in multiple components. The collision was resolved with "Status3edEnum". add an entry to ENUM_NAME_OVERRIDES to fix the naming.
{"message": "\"GET /api/schema/ HTTP/1.1\" 200 1232501", "request": "<socket.socket fd=7, family=2, type=1, proto=0, laddr=('127.0.0.1', 8000), raddr=('127.0.0.1', 51790)>", "server_time": "23/Oct/2025 10:44:01", "status_code": 200}
{"message": "\"GET /api/docs/ HTTP/1.1\" 200 4453", "request": "<socket.socket fd=7, family=2, type=1, proto=0, laddr=('127.0.0.1', 8000), raddr=('127.0.0.1', 51800)>", "server_time": "23/Oct/2025 10:44:01", "status_code": 200}
{"message": "Bad Request: /api/users/register_full/", "status_code": 400, "request": "<WSGIRequest: POST '/api/users/register_full/'>"}
{"message": "\"POST /api/users/register_full/ HTTP/1.1\" 400 146", "request": "<socket.socket fd=7, family=2, type=1, proto=0, laddr=('127.0.0.1', 8000), raddr=('127.0.0.1', 51810)>", "server_time": "23/Oct/2025 10:44:01", "status_code": 400}
{"message": "Bad Request: /api/token/", "status_code": 400, "request": "<WSGIRequest: POST '/api/token/'>"}
{"message": "\"POST /api/token/ HTTP/1.1\" 400 41", "request": "<socket.socket fd=8, family=2, type=1, proto=0, laddr=('127.0.0.1', 8000), raddr=('127.0.0.1', 51812)>", "server_time": "23/Oct/2025 10:44:01", "status_code": 400}
{"message": "\"GET /api/transportador/motorista/ HTTP/1.1\" 200 78", "request": "<socket.socket fd=8, family=2, type=1, proto=0, laddr=('127.0.0.1', 8000), raddr=('127.0.0.1', 51828)>", "server_time": "23/Oct/2025 10:44:01", "status_code": 200}
{"message": "\"GET /api/transportador/frota/ HTTP/1.1\" 200 146", "request": "<socket.socket fd=8, family=2, type=1, proto=0, laddr=('127.0.0.1', 8000), raddr=('127.0.0.1', 51838)>", "server_time": "23/Oct/2025 10:44:01", "status_code": 200}
{"message": "\"GET /api/transportador/pneus/ HTTP/1.1\" 200 137", "request": "<socket.socket fd=8, family=2, type=1, proto=0, laddr=('127.0.0.1', 8000), raddr=('127.0.0.1', 51854)>", "server_time": "23/Oct/2025 10:44:01", "status_code": 200}
{"message": "\"GET /api/transportador/manutencao/ HTTP/1.1\" 200 541", "request": "<socket.socket fd=7, family=2, type=1, proto=0, laddr=('127.0.0.1', 8000), raddr=('127.0.0.1', 51870)>", "server_time": "23/Oct/2025 10:44:01", "status_code": 200}
{"message": "\"GET /api/transportador/estoque/ HTTP/1.1\" 200 454", "request": "<socket.socket fd=7, family=2, type=1, proto=0, laddr=('127.0.0.1', 8000), raddr=('127.0.0.1', 51884)>", "server_time": "23/Oct/2025 10:44:01", "status_code": 200}
{"message": "\"GET /api/transportador/loja/ HTTP/1.1\" 200 371", "request": "<socket.socket fd=7, family=2, type=1, proto=0, laddr=('127.0.0.1', 8000), raddr=('127.0.0.1', 51896)>", "server_time": "23/Oct/2025 10:44:01", "status_code": 200}
{"message": "\"GET /api/transportador/custos/ HTTP/1.1\" 200 219", "request": "<socket.socket fd=7, family=2, type=1, proto=0, laddr=('127.0.0.1', 8000), raddr=('127.0.0.1', 51906)>", "server_time": "23/Oct/2025 10:44:01", "status_code": 200}
{"message": "\"GET /api/transportador/combustivel/ HTTP/1.1\" 200 246", "request": "<socket.socket fd=7, family=2, type=1, proto=0, laddr=('127.0.0.1', 8000), raddr=('127.0.0.1', 51920)>", "server_time": "23/Oct/2025 10:44:01", "status_code": 200}
{"message": "\"GET /api/transportador/multas/ HTTP/1.1\" 200 217", "request": "<socket.socket fd=7, family=2, type=1, proto=0, laddr=('127.0.0.1', 8000), raddr=('127.0.0.1', 51936)>", "server_time": "23/Oct/2025 10:44:01", "status_code": 200}
{"message": "\"GET /api/transportador/documentos/ HTTP/1.1\" 200 79", "request": "<socket.socket fd=7, family=2, type=1, proto=0, laddr=('127.0.0.1', 8000), raddr=('127.0.0.1', 51942)>", "server_time": "23/Oct/2025 10:44:01", "status_code": 200}
{"message": "\"GET /api/transportador/viagens/ HTTP/1.1\" 200 205", "request": "<socket.socket fd=7, family=2, type=1, proto=0, laddr=('127.0.0.1', 8000), raddr=('127.0.0.1', 51954)>", "server_time": "23/Oct/2025 10:44:01", "status_code": 200}
{"message": "\"GET /api/transportador/clientes/ HTTP/1.1\" 200 149", "request": "<socket.socket fd=7, family=2, type=1, proto=0, laddr=('127.0.0.1', 8000), raddr=('127.0.0.1', 51964)>", "server_time": "23/Oct/2025 10:44:01", "status_code": 200}
{"message": "\"GET /api/transportador/fornecedores/ HTTP/1.1\" 200 161", "request": "<socket.socket fd=7, family=2, type=1, proto=0, laddr=('127.0.0.1', 8000), raddr=('127.0.0.1', 51978)>", "server_time": "23/Oct/2025 10:44:01", "status_code": 200}
{"message": "\"GET /api/transportador/seguros/ HTTP/1.1\" 200 222", "request": "<socket.socket fd=7, family=2, type=1, proto=0, laddr=('127.0.0.1', 8000), raddr=('127.0.0.1', 51986)>", "server_time": "23/Oct/2025 10:44:01", "status_code": 200}
{"message": "\"GET /api/transportador/contratos/ HTTP/1.1\" 200 149", "request": "<socket.socket fd=7, family=2, type=1, proto=0, laddr=('127.0.0.1', 8000), raddr=('127.0.0.1', 51992)>", "server_time": "23/Oct/2025 10:44:01", "status_code": 200}
{"message": "\"GET /api/transportador/faturamento/ HTTP/1.1\" 200 228", "request": "<socket.socket fd=7, family=2, type=1, proto=0, laddr=('127.0.0.1', 8000), raddr=('127.0.0.1', 51996)>", "server_time": "23/Oct/2025 10:44:01", "status_code": 200}
{"message": "\"GET /api/transportador/pagamentos/ HTTP/1.1\" 200 247", "request": "<socket.socket fd=7, family=2, type=1, proto=0, laddr=('127.0.0.1', 8000), raddr=('127.0.0.1', 52012)>", "server_time": "23/Oct/2025 10:44:01", "status_code": 200}
{"message": "\"GET /api/transportador/telemetria/ HTTP/1.1\" 200 226", "request": "<socket.socket fd=7, family=2, type=1, proto=0, laddr=('127.0.0.1', 8000), raddr=('127.0.0.1', 52016)>", "server_time": "23/Oct/2025 10:44:01", "status_code": 200}
{"message": "\"GET /api/transportador/rastreamento/ HTTP/1.1\" 200 305", "request": "<socket.socket fd=7, family=2, type=1, proto=0, laddr=('127.0.0.1', 8000), raddr=('127.0.0.1', 52022)>", "server_time": "23/Oct/2025 10:44:01", "status_code": 200}
{"message": "\"GET /api/transportador/rotas/ HTTP/1.1\" 200 202", "request": "<socket.socket fd=7, family=2, type=1, proto=0, laddr=('127.0.0.1', 8000), raddr=('127.0.0.1', 52034)>", "server_time": "23/Oct/2025 10:44:01", "status_code": 200}
{"message": "\"GET /api/transportador/entregas/ HTTP/1.1\" 200 291", "request": "<socket.socket fd=7, family=2, type=1, proto=0, laddr=('127.0.0.1', 8000), raddr=('127.0.0.1', 52050)>", "server_time": "23/Oct/2025 10:44:01", "status_code": 200}
{"message": "\"GET /api/transportador/dashboards/ HTTP/1.1\" 200 217", "request": "<socket.socket fd=7, family=2, type=1, proto=0, laddr=('127.0.0.1', 8000), raddr=('127.0.0.1', 52058)>", "server_time": "23/Oct/2025 10:44:01", "status_code": 200}
{"message": "\"GET /api/transportador/notificacoes/ HTTP/1.1\" 200 319", "request": "<socket.socket fd=7, family=2, type=1, proto=0, laddr=('127.0.0.1', 8000), raddr=('127.0.0.1', 52068)>", "server_time": "23/Oct/2025 10:44:01", "status_code": 200}
{"message": "\"GET /api/transportador/almoxarifado/ HTTP/1.1\" 200 609", "request": "<socket.socket fd=7, family=2, type=1, proto=0, laddr=('127.0.0.1', 8000), raddr=('127.0.0.1', 52082)>", "server_time": "23/Oct/2025 10:44:01", "status_code": 200}
{"message": "\"GET /api/transportador/relatorios/ HTTP/1.1\" 200 383", "request": "<socket.socket fd=7, family=2, type=1, proto=0, laddr=('127.0.0.1', 8000), raddr=('127.0.0.1', 52094)>", "server_time": "23/Oct/2025 10:44:01", "status_code": 200}
{"message": "\"GET /api/transportador/cargas/ HTTP/1.1\" 200 389", "request": "<socket.socket fd=7, family=2, type=1, proto=0, laddr=('127.0.0.1', 8000), raddr=('127.0.0.1', 52108)>", "server_time": "23/Oct/2025 10:44:01", "status_code": 200}
{"message": "\"GET /api/transportador/pecas/ HTTP/1.1\" 200 392", "request": "<socket.socket fd=7, family=2, type=1, proto=0, laddr=('127.0.0.1', 8000), raddr=('127.0.0.1', 52110)>", "server_time": "23/Oct/2025 10:44:01", "status_code": 200}
{"message": "\"GET /api/transportador/ferramentas/ HTTP/1.1\" 200 385", "request": "<socket.socket fd=7, family=2, type=1, proto=0, laddr=('127.0.0.1', 8000), raddr=('127.0.0.1', 52118)>", "server_time": "23/Oct/2025 10:44:01", "status_code": 200}
{"message": "\"GET /api/transportador/epis/ HTTP/1.1\" 200 273", "request": "<socket.socket fd=7, family=2, type=1, proto=0, laddr=('127.0.0.1', 8000), raddr=('127.0.0.1', 52124)>", "server_time": "23/Oct/2025 10:44:01", "status_code": 200}
{"message": "\"GET /api/transportador/treinamentos/ HTTP/1.1\" 200 405", "request": "<socket.socket fd=7, family=2, type=1, proto=0, laddr=('127.0.0.1', 8000), raddr=('127.0.0.1', 52140)>", "server_time": "23/Oct/2025 10:44:01", "status_code": 200}
{"message": "\"GET /api/transportador/compliance/ HTTP/1.1\" 200 377", "request": "<socket.socket fd=7, family=2, type=1, proto=0, laddr=('127.0.0.1', 8000), raddr=('127.0.0.1', 52146)>", "server_time": "23/Oct/2025 10:44:01", "status_code": 200}
{"message": "\"GET /api/transportador/alertas/ HTTP/1.1\" 200 327", "request": "<socket.socket fd=7, family=2, type=1, proto=0, laddr=('127.0.0.1', 8000), raddr=('127.0.0.1', 52160)>", "server_time": "23/Oct/2025 10:44:01", "status_code": 200}
{"message": "\"GET /api/transportador/integracoes/ HTTP/1.1\" 200 357", "request": "<socket.socket fd=7, family=2, type=1, proto=0, laddr=('127.0.0.1', 8000), raddr=('127.0.0.1', 52174)>", "server_time": "23/Oct/2025 10:44:01", "status_code": 200}
{"message": "\"GET /api/transportador/configuracoes/ HTTP/1.1\" 200 1007", "request": "<socket.socket fd=7, family=2, type=1, proto=0, laddr=('127.0.0.1', 8000), raddr=('127.0.0.1', 52184)>", "server_time": "23/Oct/2025 10:44:01", "status_code": 200}
{"message": "\"GET /api/transportador/empresas/ HTTP/1.1\" 200 143", "request": "<socket.socket fd=7, family=2, type=1, proto=0, laddr=('127.0.0.1', 8000), raddr=('127.0.0.1', 52196)>", "server_time": "23/Oct/2025 10:44:01", "status_code": 200}
{"message": "\"GET /api/transportador/financeiro/ HTTP/1.1\" 200 155", "request": "<socket.socket fd=7, family=2, type=1, proto=0, laddr=('127.0.0.1', 8000), raddr=('127.0.0.1', 52204)>", "server_time": "23/Oct/2025 10:44:01", "status_code": 200}
{"message": "\"GET /api/transportador/relatorios_transportador/ HTTP/1.1\" 200 93", "request": "<socket.socket fd=7, family=2, type=1, proto=0, laddr=('127.0.0.1', 8000), raddr=('127.0.0.1', 52206)>", "server_time": "23/Oct/2025 10:44:01", "status_code": 200}
{"message": "\"GET /api/transportador/tr/ HTTP/1.1\" 200 55", "request": "<socket.socket fd=7, family=2, type=1, proto=0, laddr=('127.0.0.1', 8000), raddr=('127.0.0.1', 52220)>", "server_time": "23/Oct/2025 10:44:01", "status_code": 200}
{"message": "\"GET /api/transportador/implemento/ HTTP/1.1\" 200 81", "request": "<socket.socket fd=7, family=2, type=1, proto=0, laddr=('127.0.0.1', 8000), raddr=('127.0.0.1', 52228)>", "server_time": "23/Oct/2025 10:44:01", "status_code": 200}
{"message": "\"GET /api/transportador/analise_pneus/ HTTP/1.1\" 200 76", "request": "<socket.socket fd=7, family=2, type=1, proto=0, laddr=('127.0.0.1', 8000), raddr=('127.0.0.1', 52244)>", "server_time": "23/Oct/2025 10:44:01", "status_code": 200}
{"message": "\"GET /api/transportador/garantias/ HTTP/1.1\" 200 76", "request": "<socket.socket fd=7, family=2, type=1, proto=0, laddr=('127.0.0.1', 8000), raddr=('127.0.0.1', 52248)>", "server_time": "23/Oct/2025 10:44:01", "status_code": 200}
{"message": "\"GET /api/transportador/auditoria/ HTTP/1.1\" 200 404", "request": "<socket.socket fd=7, family=2, type=1, proto=0, laddr=('127.0.0.1', 8000), raddr=('127.0.0.1', 52252)>", "server_time": "23/Oct/2025 10:44:01", "status_code": 200}
{"message": "\"GET /api/transportador/notas_fiscais/ HTTP/1.1\" 200 309", "request": "<socket.socket fd=7, family=2, type=1, proto=0, laddr=('127.0.0.1', 8000), raddr=('127.0.0.1', 52254)>", "server_time": "23/Oct/2025 10:44:01", "status_code": 200}
{"message": "\"GET /api/transportador/ia/ HTTP/1.1\" 200 207", "request": "<socket.socket fd=7, family=2, type=1, proto=0, laddr=('127.0.0.1', 8000), raddr=('127.0.0.1', 52268)>", "server_time": "23/Oct/2025 10:44:01", "status_code": 200}
{"message": "Not Found: /api/approve/", "status_code": 404, "request": "<WSGIRequest: GET '/api/approve/'>"}
{"message": "\"GET /api/approve/ HTTP/1.1\" 404 11063", "request": "<socket.socket fd=7, family=2, type=1, proto=0, laddr=('127.0.0.1', 8000), raddr=('127.0.0.1', 52270)>", "server_time": "23/Oct/2025 10:44:01", "status_code": 404}
{"message": "Not Found: /api/motorista/", "status_code": 404, "request": "<WSGIRequest: GET '/api/motorista/'>"}
{"message": "\"GET /api/motorista/ HTTP/1.1\" 404 11705", "request": "<socket.socket fd=7, family=2, type=1, proto=0, laddr=('127.0.0.1', 8000), raddr=('127.0.0.1', 52282)>", "server_time": "23/Oct/2025 10:44:01", "status_code": 404}
{"message": "Not Found: /api/borracharia/", "status_code": 404, "request": "<WSGIRequest: GET '/api/borracharia/'>"}
{"message": "\"GET /api/borracharia/ HTTP/1.1\" 404 11552", "request": "<socket.socket fd=7, family=2, type=1, proto=0, laddr=('127.0.0.1', 8000), raddr=('127.0.0.1', 52294)>", "server_time": "23/Oct/2025 10:44:01", "status_code": 404}
{"message": "Not Found: /api/revenda/", "status_code": 404, "request": "<WSGIRequest: GET '/api/revenda/'>"}
{"message": "\"GET /api/revenda/ HTTP/1.1\" 404 11520", "request": "<socket.socket fd=7, family=2, type=1, proto=0, laddr=('127.0.0.1', 8000), raddr=('127.0.0.1', 52296)>", "server_time": "23/Oct/2025 10:44:01", "status_code": 404}
{"message": "Not Found: /api/recapagem/", "status_code": 404, "request": "<WSGIRequest: GET '/api/recapagem/'>"}
{"message": "\"GET /api/recapagem/ HTTP/1.1\" 404 11536", "request": "<socket.socket fd=7, family=2, type=1, proto=0, laddr=('127.0.0.1', 8000), raddr=('127.0.0.1', 52304)>", "server_time": "23/Oct/2025 10:44:01", "status_code": 404}
{"message": "Not Found: /api/reports/", "status_code": 404, "request": "<WSGIRequest: GET '/api/reports/'>"}
{"message": "\"GET /api/reports/ HTTP/1.1\" 404 11682", "request": "<socket.socket fd=7, family=2, type=1, proto=0, laddr=('127.0.0.1', 8000), raddr=('127.0.0.1', 52320)>", "server_time": "23/Oct/2025 10:44:01", "status_code": 404}
{"message": "Not Found: /api/jobs/", "status_code": 404, "request": "<WSGIRequest: GET '/api/jobs/'>"}
{"message": "\"GET /api/jobs/ HTTP/1.1\" 404 11467", "request": "<socket.socket fd=7, family=2, type=1, proto=0, laddr=('127.0.0.1', 8000), raddr=('127.0.0.1', 52328)>", "server_time": "23/Oct/2025 10:44:01", "status_code": 404}
{"message": "Not Found: /api/schema/swagger/", "status_code": 404, "request": "<WSGIRequest: GET '/api/schema/swagger/'>"}
{"message": "\"GET /api/schema/swagger/ HTTP/1.1\" 404 11084", "request": "<socket.socket fd=7, family=2, type=1, proto=0, laddr=('127.0.0.1', 8000), raddr=('127.0.0.1', 52334)>", "server_time": "23/Oct/2025 10:44:01", "status_code": 404}
{"message": "Not Found: /", "status_code": 404, "request": "<WSGIRequest: GET '/'>"}
{"message": "\"GET / HTTP/1.1\" 404 11009", "request": "<socket.socket fd=6, family=2, type=1, proto=0, laddr=('127.0.0.1', 8000), raddr=('127.0.0.1', 52344)>", "server_time": "23/Oct/2025 10:44:05", "status_code": 404}
/home/ubuntu/xbpneus/config/temp_approval_views.py: Error [approve_motorista_externo]: unable to guess serializer. This is graceful fallback handling for APIViews. Consider using GenericAPIView as view base class, if view is under your control. Either way you may want to add a serializer_class (or method). Ignoring view for now.
/home/ubuntu/xbpneus/backend/common/auth_views.py: Error [logout_view]: unable to guess serializer. This is graceful fallback handling for APIViews. Consider using GenericAPIView as view base class, if view is under your control. Either way you may want to add a serializer_class (or method). Ignoring view for now.
/home/ubuntu/xbpneus/backend/common/auth_views.py: Error [me_view]: unable to guess serializer. This is graceful fallback handling for APIViews. Consider using GenericAPIView as view base class, if view is under your control. Either way you may want to add a serializer_class (or method). Ignoring view for now.
/home/ubuntu/xbpneus/backend/borracharia/views.py: Error [login_borracharia]: unable to guess serializer. This is graceful fallback handling for APIViews. Consider using GenericAPIView as view base class, if view is under your control. Either way you may want to add a serializer_class (or method). Ignoring view for now.
/home/ubuntu/xbpneus/backend/borracharia/views.py: Error [perfil_borracharia]: unable to guess serializer. This is graceful fallback handling for APIViews. Consider using GenericAPIView as view base class, if view is under your control. Either way you may want to add a serializer_class (or method). Ignoring view for now.
/home/ubuntu/xbpneus/backend/borracharia/views.py: Error [registro_borracharia]: unable to guess serializer. This is graceful fallback handling for APIViews. Consider using GenericAPIView as view base class, if view is under your control. Either way you may want to add a serializer_class (or method). Ignoring view for now.
/home/ubuntu/xbpneus/config/temp_user_creation_views.py: Error [create_superuser_temp]: unable to guess serializer. This is graceful fallback handling for APIViews. Consider using GenericAPIView as view base class, if view is under your control. Either way you may want to add a serializer_class (or method). Ignoring view for now.
/home/ubuntu/xbpneus/config/temp_user_creation_views.py: Error [create_test_users_temp]: unable to guess serializer. This is graceful fallback handling for APIViews. Consider using GenericAPIView as view base class, if view is under your control. Either way you may want to add a serializer_class (or method). Ignoring view for now.
/home/ubuntu/xbpneus/backend/jobs/views.py: Error [ExportJobStatusApi]: unable to guess serializer. This is graceful fallback handling for APIViews. Consider using GenericAPIView as view base class, if view is under your control. Either way you may want to add a serializer_class (or method). Ignoring view for now.
/home/ubuntu/xbpneus/backend/jobs/views.py: Error [ExportJobDownloadApi]: unable to guess serializer. This is graceful fallback handling for APIViews. Consider using GenericAPIView as view base class, if view is under your control. Either way you may want to add a serializer_class (or method). Ignoring view for now.
/home/ubuntu/xbpneus/backend/jobs/views.py: Error [ExportJobApi]: unable to guess serializer. This is graceful fallback handling for APIViews. Consider using GenericAPIView as view base class, if view is under your control. Either way you may want to add a serializer_class (or method). Ignoring view for now.
/home/ubuntu/xbpneus/backend/motorista/motorista_externo_views.py: Warning [MotoristaExternoActionViewSet]: could not derive type of path parameter "id" because it is untyped and obtaining queryset from the viewset failed. Consider adding a type to the path (e.g. <int:id>) or annotating the parameter type with @extend_schema. Defaulting to "string".
/home/ubuntu/xbpneus/backend/motorista/motorista_externo_views.py: Error [MotoristaExternoActionViewSet]: unable to guess serializer. This is graceful fallback handling for APIViews. Consider using GenericAPIView as view base class, if view is under your control. Either way you may want to add a serializer_class (or method). Ignoring view for now.
/home/ubuntu/xbpneus/backend/motorista/motorista_externo_views.py: Error [motorista_externo_dashboard]: unable to guess serializer. This is graceful fallback handling for APIViews. Consider using GenericAPIView as view base class, if view is under your control. Either way you may want to add a serializer_class (or method). Ignoring view for now.
/home/ubuntu/xbpneus/backend/motorista/motorista_externo_views.py: Error [motorista_externo_me]: unable to guess serializer. This is graceful fallback handling for APIViews. Consider using GenericAPIView as view base class, if view is under your control. Either way you may want to add a serializer_class (or method). Ignoring view for now.
/home/ubuntu/xbpneus/backend/motorista/views.py: Error [login_motorista]: unable to guess serializer. This is graceful fallback handling for APIViews. Consider using GenericAPIView as view base class, if view is under your control. Either way you may want to add a serializer_class (or method). Ignoring view for now.
/home/ubuntu/xbpneus/backend/motorista/views.py: Error [perfil_motorista]: unable to guess serializer. This is graceful fallback handling for APIViews. Consider using GenericAPIView as view base class, if view is under your control. Either way you may want to add a serializer_class (or method). Ignoring view for now.
/home/ubuntu/xbpneus/backend/motorista/views.py: Error [registro_motorista]: unable to guess serializer. This is graceful fallback handling for APIViews. Consider using GenericAPIView as view base class, if view is under your control. Either way you may want to add a serializer_class (or method). Ignoring view for now.
/home/ubuntu/xbpneus/backend/recapagem/views.py: Error [login_recapagem]: unable to guess serializer. This is graceful fallback handling for APIViews. Consider using GenericAPIView as view base class, if view is under your control. Either way you may want to add a serializer_class (or method). Ignoring view for now.
/home/ubuntu/xbpneus/backend/recapagem/views.py: Error [perfil_recapagem]: unable to guess serializer. This is graceful fallback handling for APIViews. Consider using GenericAPIView as view base class, if view is under your control. Either way you may want to add a serializer_class (or method). Ignoring view for now.
/home/ubuntu/xbpneus/backend/recapagem/views.py: Error [registro_recapagem]: unable to guess serializer. This is graceful fallback handling for APIViews. Consider using GenericAPIView as view base class, if view is under your control. Either way you may want to add a serializer_class (or method). Ignoring view for now.
/home/ubuntu/xbpneus/backend/reports/views.py: Error [GiroEstoque]: unable to guess serializer. This is graceful fallback handling for APIViews. Consider using GenericAPIView as view base class, if view is under your control. Either way you may want to add a serializer_class (or method). Ignoring view for now.
/home/ubuntu/xbpneus/backend/reports/views.py: Error [CustosPorOS]: unable to guess serializer. This is graceful fallback handling for APIViews. Consider using GenericAPIView as view base class, if view is under your control. Either way you may want to add a serializer_class (or method). Ignoring view for now.
/home/ubuntu/xbpneus/backend/reports/views.py: Error [CustosPorPosicao]: unable to guess serializer. This is graceful fallback handling for APIViews. Consider using GenericAPIView as view base class, if view is under your control. Either way you may want to add a serializer_class (or method). Ignoring view for now.
/home/ubuntu/xbpneus/backend/reports/views.py: Error [MedicoesPorPosicao]: unable to guess serializer. This is graceful fallback handling for APIViews. Consider using GenericAPIView as view base class, if view is under your control. Either way you may want to add a serializer_class (or method). Ignoring view for now.
/home/ubuntu/xbpneus/backend/revenda/views.py: Error [login_revenda]: unable to guess serializer. This is graceful fallback handling for APIViews. Consider using GenericAPIView as view base class, if view is under your control. Either way you may want to add a serializer_class (or method). Ignoring view for now.
/home/ubuntu/xbpneus/backend/revenda/views.py: Error [perfil_revenda]: unable to guess serializer. This is graceful fallback handling for APIViews. Consider using GenericAPIView as view base class, if view is under your control. Either way you may want to add a serializer_class (or method). Ignoring view for now.
/home/ubuntu/xbpneus/backend/revenda/views.py: Error [registro_revenda]: unable to guess serializer. This is graceful fallback handling for APIViews. Consider using GenericAPIView as view base class, if view is under your control. Either way you may want to add a serializer_class (or method). Ignoring view for now.
/home/ubuntu/xbpneus/backend/transportador/alertas/views.py: Warning [AlertaViewSet]: Failed to obtain model through view's queryset due to raised exception. Prevent this either by setting "queryset = Model.objects.none()" on the view, checking for "getattr(self, "swagger_fake_view", False)" in get_queryset() or by simply using @extend_schema. (Exception: 'AnonymousUser' object has no attribute 'empresa')
/home/ubuntu/xbpneus/backend/transportador/alertas/views.py: Warning [AlertaViewSet]: could not derive type of path parameter "id" because it is untyped and obtaining queryset from the viewset failed. Consider adding a type to the path (e.g. <int:id>) or annotating the parameter type with @extend_schema. Defaulting to "string".
/home/ubuntu/xbpneus/backend/transportador/alertas/views.py: Warning [ConfiguracaoAlertaViewSet]: Failed to obtain model through view's queryset due to raised exception. Prevent this either by setting "queryset = Model.objects.none()" on the view, checking for "getattr(self, "swagger_fake_view", False)" in get_queryset() or by simply using @extend_schema. (Exception: 'AnonymousUser' object has no attribute 'empresa')
/home/ubuntu/xbpneus/backend/transportador/alertas/views.py: Warning [ConfiguracaoAlertaViewSet]: could not derive type of path parameter "id" because it is untyped and obtaining queryset from the viewset failed. Consider adding a type to the path (e.g. <int:id>) or annotating the parameter type with @extend_schema. Defaulting to "string".
/home/ubuntu/xbpneus/backend/transportador/alertas/views.py: Warning [HistoricoAlertaViewSet]: Failed to obtain model through view's queryset due to raised exception. Prevent this either by setting "queryset = Model.objects.none()" on the view, checking for "getattr(self, "swagger_fake_view", False)" in get_queryset() or by simply using @extend_schema. (Exception: 'AnonymousUser' object has no attribute 'empresa')
/home/ubuntu/xbpneus/backend/transportador/alertas/views.py: Warning [HistoricoAlertaViewSet]: could not derive type of path parameter "id" because it is untyped and obtaining queryset from the viewset failed. Consider adding a type to the path (e.g. <int:id>) or annotating the parameter type with @extend_schema. Defaulting to "string".
/home/ubuntu/xbpneus/backend/transportador/alertas/views.py: Warning [TipoAlertaViewSet]: Failed to obtain model through view's queryset due to raised exception. Prevent this either by setting "queryset = Model.objects.none()" on the view, checking for "getattr(self, "swagger_fake_view", False)" in get_queryset() or by simply using @extend_schema. (Exception: 'AnonymousUser' object has no attribute 'empresa')
/home/ubuntu/xbpneus/backend/transportador/alertas/views.py: Warning [TipoAlertaViewSet]: could not derive type of path parameter "id" because it is untyped and obtaining queryset from the viewset failed. Consider adding a type to the path (e.g. <int:id>) or annotating the parameter type with @extend_schema. Defaulting to "string".
/home/ubuntu/xbpneus/backend/transportador/almoxarifado/views.py: Warning [AlmoxarifadoViewSet]: Failed to obtain model through view's queryset due to raised exception. Prevent this either by setting "queryset = Model.objects.none()" on the view, checking for "getattr(self, "swagger_fake_view", False)" in get_queryset() or by simply using @extend_schema. (Exception: 'AnonymousUser' object has no attribute 'empresa')
/home/ubuntu/xbpneus/backend/transportador/almoxarifado/views.py: Warning [AlmoxarifadoViewSet]: could not derive type of path parameter "id" because it is untyped and obtaining queryset from the viewset failed. Consider adding a type to the path (e.g. <int:id>) or annotating the parameter type with @extend_schema. Defaulting to "string".
/home/ubuntu/xbpneus/backend/transportador/almoxarifado/views.py: Warning [InventarioAlmoxarifadoViewSet]: Failed to obtain model through view's queryset due to raised exception. Prevent this either by setting "queryset = Model.objects.none()" on the view, checking for "getattr(self, "swagger_fake_view", False)" in get_queryset() or by simply using @extend_schema. (Exception: 'AnonymousUser' object has no attribute 'empresa')
/home/ubuntu/xbpneus/backend/transportador/almoxarifado/views.py: Warning [InventarioAlmoxarifadoViewSet]: could not derive type of path parameter "id" because it is untyped and obtaining queryset from the viewset failed. Consider adding a type to the path (e.g. <int:id>) or annotating the parameter type with @extend_schema. Defaulting to "string".
/home/ubuntu/xbpneus/backend/transportador/almoxarifado/views.py: Warning [ItemInventarioViewSet]: Failed to obtain model through view's queryset due to raised exception. Prevent this either by setting "queryset = Model.objects.none()" on the view, checking for "getattr(self, "swagger_fake_view", False)" in get_queryset() or by simply using @extend_schema. (Exception: 'AnonymousUser' object has no attribute 'empresa')
/home/ubuntu/xbpneus/backend/transportador/almoxarifado/views.py: Warning [ItemInventarioViewSet]: could not derive type of path parameter "id" because it is untyped and obtaining queryset from the viewset failed. Consider adding a type to the path (e.g. <int:id>) or annotating the parameter type with @extend_schema. Defaulting to "string".
/home/ubuntu/xbpneus/backend/transportador/almoxarifado/views.py: Warning [ItemRequisicaoViewSet]: Failed to obtain model through view's queryset due to raised exception. Prevent this either by setting "queryset = Model.objects.none()" on the view, checking for "getattr(self, "swagger_fake_view", False)" in get_queryset() or by simply using @extend_schema. (Exception: 'AnonymousUser' object has no attribute 'empresa')
/home/ubuntu/xbpneus/backend/transportador/almoxarifado/views.py: Warning [ItemRequisicaoViewSet]: could not derive type of path parameter "id" because it is untyped and obtaining queryset from the viewset failed. Consider adding a type to the path (e.g. <int:id>) or annotating the parameter type with @extend_schema. Defaulting to "string".
/home/ubuntu/xbpneus/backend/transportador/almoxarifado/views.py: Warning [LocalEstoqueViewSet]: Failed to obtain model through view's queryset due to raised exception. Prevent this either by setting "queryset = Model.objects.none()" on the view, checking for "getattr(self, "swagger_fake_view", False)" in get_queryset() or by simply using @extend_schema. (Exception: 'AnonymousUser' object has no attribute 'empresa')
/home/ubuntu/xbpneus/backend/transportador/almoxarifado/views.py: Warning [LocalEstoqueViewSet]: could not derive type of path parameter "id" because it is untyped and obtaining queryset from the viewset failed. Consider adding a type to the path (e.g. <int:id>) or annotating the parameter type with @extend_schema. Defaulting to "string".
/home/ubuntu/xbpneus/backend/transportador/almoxarifado/views.py: Warning [MovimentacaoAlmoxarifadoViewSet]: Failed to obtain model through view's queryset due to raised exception. Prevent this either by setting "queryset = Model.objects.none()" on the view, checking for "getattr(self, "swagger_fake_view", False)" in get_queryset() or by simply using @extend_schema. (Exception: 'AnonymousUser' object has no attribute 'empresa')
/home/ubuntu/xbpneus/backend/transportador/almoxarifado/views.py: Warning [MovimentacaoAlmoxarifadoViewSet]: could not derive type of path parameter "id" because it is untyped and obtaining queryset from the viewset failed. Consider adding a type to the path (e.g. <int:id>) or annotating the parameter type with @extend_schema. Defaulting to "string".
/home/ubuntu/xbpneus/backend/transportador/almoxarifado/views.py: Warning [RequisicaoMaterialViewSet]: Failed to obtain model through view's queryset due to raised exception. Prevent this either by setting "queryset = Model.objects.none()" on the view, checking for "getattr(self, "swagger_fake_view", False)" in get_queryset() or by simply using @extend_schema. (Exception: 'AnonymousUser' object has no attribute 'empresa')
/home/ubuntu/xbpneus/backend/transportador/almoxarifado/views.py: Warning [RequisicaoMaterialViewSet]: could not derive type of path parameter "id" because it is untyped and obtaining queryset from the viewset failed. Consider adding a type to the path (e.g. <int:id>) or annotating the parameter type with @extend_schema. Defaulting to "string".
/home/ubuntu/xbpneus/backend/transportador/analise_pneus/views.py: Error [AnalisePneusViewSet]: unable to guess serializer. This is graceful fallback handling for APIViews. Consider using GenericAPIView as view base class, if view is under your control. Either way you may want to add a serializer_class (or method). Ignoring view for now.
/home/ubuntu/xbpneus/backend/transportador/auditoria/views.py: Warning [LogAlteracaoViewSet]: Failed to obtain model through view's queryset due to raised exception. Prevent this either by setting "queryset = Model.objects.none()" on the view, checking for "getattr(self, "swagger_fake_view", False)" in get_queryset() or by simply using @extend_schema. (Exception: 'AnonymousUser' object has no attribute 'empresa')
/home/ubuntu/xbpneus/backend/transportador/auditoria/views.py: Warning [LogAlteracaoViewSet]: could not derive type of path parameter "id" because it is untyped and obtaining queryset from the viewset failed. Consider adding a type to the path (e.g. <int:id>) or annotating the parameter type with @extend_schema. Defaulting to "string".
/home/ubuntu/xbpneus/backend/transportador/auditoria/views.py: Warning [LogAuditoriaViewSet]: Failed to obtain model through view's queryset due to raised exception. Prevent this either by setting "queryset = Model.objects.none()" on the view, checking for "getattr(self, "swagger_fake_view", False)" in get_queryset() or by simply using @extend_schema. (Exception: 'AnonymousUser' object has no attribute 'empresa')
/home/ubuntu/xbpneus/backend/transportador/auditoria/serializers.py: Warning [LogAuditoriaViewSet > LogAuditoriaSerializer]: unable to resolve type hint for function "alteracoes". Consider using a type hint or @extend_schema_field. Defaulting to string.
/home/ubuntu/xbpneus/backend/transportador/auditoria/views.py: Warning [LogAuditoriaViewSet]: could not derive type of path parameter "id" because it is untyped and obtaining queryset from the viewset failed. Consider adding a type to the path (e.g. <int:id>) or annotating the parameter type with @extend_schema. Defaulting to "string".
/home/ubuntu/xbpneus/backend/transportador/auditoria/serializers.py: Warning [SessaoUsuarioViewSet > SessaoUsuarioSerializer]: unable to resolve type hint for function "duracao". Consider using a type hint or @extend_schema_field. Defaulting to string.
/home/ubuntu/xbpneus/backend/transportador/cargas/views.py: Warning [CargaViewSet]: Failed to obtain model through view's queryset due to raised exception. Prevent this either by setting "queryset = Model.objects.none()" on the view, checking for "getattr(self, "swagger_fake_view", False)" in get_queryset() or by simply using @extend_schema. (Exception: 'AnonymousUser' object has no attribute 'empresa')
/home/ubuntu/xbpneus/backend/transportador/cargas/views.py: Warning [CargaViewSet]: could not derive type of path parameter "id" because it is untyped and obtaining queryset from the viewset failed. Consider adding a type to the path (e.g. <int:id>) or annotating the parameter type with @extend_schema. Defaulting to "string".
/home/ubuntu/xbpneus/backend/transportador/cargas/views.py: Warning [ItemCargaViewSet]: Failed to obtain model through view's queryset due to raised exception. Prevent this either by setting "queryset = Model.objects.none()" on the view, checking for "getattr(self, "swagger_fake_view", False)" in get_queryset() or by simply using @extend_schema. (Exception: 'AnonymousUser' object has no attribute 'empresa')
/home/ubuntu/xbpneus/backend/transportador/cargas/views.py: Warning [ItemCargaViewSet]: could not derive type of path parameter "id" because it is untyped and obtaining queryset from the viewset failed. Consider adding a type to the path (e.g. <int:id>) or annotating the parameter type with @extend_schema. Defaulting to "string".
/home/ubuntu/xbpneus/backend/transportador/cargas/views.py: Warning [ManifestoCargaViewSet]: Failed to obtain model through view's queryset due to raised exception. Prevent this either by setting "queryset = Model.objects.none()" on the view, checking for "getattr(self, "swagger_fake_view", False)" in get_queryset() or by simply using @extend_schema. (Exception: 'AnonymousUser' object has no attribute 'empresa')
/home/ubuntu/xbpneus/backend/transportador/cargas/views.py: Warning [ManifestoCargaViewSet]: could not derive type of path parameter "id" because it is untyped and obtaining queryset from the viewset failed. Consider adding a type to the path (e.g. <int:id>) or annotating the parameter type with @extend_schema. Defaulting to "string".
/home/ubuntu/xbpneus/backend/transportador/cargas/views.py: Warning [RastreamentoCargaViewSet]: Failed to obtain model through view's queryset due to raised exception. Prevent this either by setting "queryset = Model.objects.none()" on the view, checking for "getattr(self, "swagger_fake_view", False)" in get_queryset() or by simply using @extend_schema. (Exception: 'AnonymousUser' object has no attribute 'empresa')
/home/ubuntu/xbpneus/backend/transportador/cargas/views.py: Warning [RastreamentoCargaViewSet]: could not derive type of path parameter "id" because it is untyped and obtaining queryset from the viewset failed. Consider adding a type to the path (e.g. <int:id>) or annotating the parameter type with @extend_schema. Defaulting to "string".
/home/ubuntu/xbpneus/backend/transportador/cargas/views.py: Warning [TipoCargaViewSet]: Failed to obtain model through view's queryset due to raised exception. Prevent this either by setting "queryset = Model.objects.none()" on the view, checking for "getattr(self, "swagger_fake_view", False)" in get_queryset() or by simply using @extend_schema. (Exception: 'AnonymousUser' object has no attribute 'empresa')
/home/ubuntu/xbpneus/backend/transportador/cargas/views.py: Warning [TipoCargaViewSet]: could not derive type of path parameter "id" because it is untyped and obtaining queryset from the viewset failed. Consider adding a type to the path (e.g. <int:id>) or annotating the parameter type with @extend_schema. Defaulting to "string".
/home/ubuntu/xbpneus/backend/transportador/compliance/views.py: Warning [AuditoriaComplianceViewSet]: Failed to obtain model through view's queryset due to raised exception. Prevent this either by setting "queryset = Model.objects.none()" on the view, checking for "getattr(self, "swagger_fake_view", False)" in get_queryset() or by simply using @extend_schema. (Exception: 'AnonymousUser' object has no attribute 'empresa')
/home/ubuntu/xbpneus/backend/transportador/compliance/views.py: Warning [AuditoriaComplianceViewSet]: could not derive type of path parameter "id" because it is untyped and obtaining queryset from the viewset failed. Consider adding a type to the path (e.g. <int:id>) or annotating the parameter type with @extend_schema. Defaulting to "string".
/home/ubuntu/xbpneus/backend/transportador/compliance/views.py: Warning [NaoConformidadeViewSet]: Failed to obtain model through view's queryset due to raised exception. Prevent this either by setting "queryset = Model.objects.none()" on the view, checking for "getattr(self, "swagger_fake_view", False)" in get_queryset() or by simply using @extend_schema. (Exception: 'AnonymousUser' object has no attribute 'empresa')
/home/ubuntu/xbpneus/backend/transportador/compliance/views.py: Warning [NaoConformidadeViewSet]: could not derive type of path parameter "id" because it is untyped and obtaining queryset from the viewset failed. Consider adding a type to the path (e.g. <int:id>) or annotating the parameter type with @extend_schema. Defaulting to "string".
/home/ubuntu/xbpneus/backend/transportador/compliance/views.py: Warning [NormaComplianceViewSet]: Failed to obtain model through view's queryset due to raised exception. Prevent this either by setting "queryset = Model.objects.none()" on the view, checking for "getattr(self, "swagger_fake_view", False)" in get_queryset() or by simply using @extend_schema. (Exception: 'AnonymousUser' object has no attribute 'empresa')
/home/ubuntu/xbpneus/backend/transportador/compliance/views.py: Warning [NormaComplianceViewSet]: could not derive type of path parameter "id" because it is untyped and obtaining queryset from the viewset failed. Consider adding a type to the path (e.g. <int:id>) or annotating the parameter type with @extend_schema. Defaulting to "string".
/home/ubuntu/xbpneus/backend/transportador/compliance/views.py: Warning [PlanoAcaoComplianceViewSet]: Failed to obtain model through view's queryset due to raised exception. Prevent this either by setting "queryset = Model.objects.none()" on the view, checking for "getattr(self, "swagger_fake_view", False)" in get_queryset() or by simply using @extend_schema. (Exception: 'AnonymousUser' object has no attribute 'empresa')
/home/ubuntu/xbpneus/backend/transportador/compliance/views.py: Warning [PlanoAcaoComplianceViewSet]: could not derive type of path parameter "id" because it is untyped and obtaining queryset from the viewset failed. Consider adding a type to the path (e.g. <int:id>) or annotating the parameter type with @extend_schema. Defaulting to "string".
/home/ubuntu/xbpneus/backend/transportador/configuracoes/views.py: Warning [ConfiguracaoSistemaViewSet]: Failed to obtain model through view's queryset due to raised exception. Prevent this either by setting "queryset = Model.objects.none()" on the view, checking for "getattr(self, "swagger_fake_view", False)" in get_queryset() or by simply using @extend_schema. (Exception: 'AnonymousUser' object has no attribute 'empresa')
/home/ubuntu/xbpneus/backend/transportador/configuracoes/views.py: Warning [ConfiguracaoSistemaViewSet]: could not derive type of path parameter "id" because it is untyped and obtaining queryset from the viewset failed. Consider adding a type to the path (e.g. <int:id>) or annotating the parameter type with @extend_schema. Defaulting to "string".
/home/ubuntu/xbpneus/backend/transportador/configuracoes/views.py: Warning [ParametroEmpresaViewSet]: Failed to obtain model through view's queryset due to raised exception. Prevent this either by setting "queryset = Model.objects.none()" on the view, checking for "getattr(self, "swagger_fake_view", False)" in get_queryset() or by simply using @extend_schema. (Exception: 'AnonymousUser' object has no attribute 'empresa')
/home/ubuntu/xbpneus/backend/transportador/configuracoes/views.py: Warning [ParametroEmpresaViewSet]: could not derive type of path parameter "id" because it is untyped and obtaining queryset from the viewset failed. Consider adding a type to the path (e.g. <int:id>) or annotating the parameter type with @extend_schema. Defaulting to "string".
/home/ubuntu/xbpneus/backend/transportador/configuracoes/views.py: Warning [PerfilUsuarioViewSet]: Failed to obtain model through view's queryset due to raised exception. Prevent this either by setting "queryset = Model.objects.none()" on the view, checking for "getattr(self, "swagger_fake_view", False)" in get_queryset() or by simply using @extend_schema. (Exception: 'AnonymousUser' object has no attribute 'empresa')
/home/ubuntu/xbpneus/backend/transportador/configuracoes/views.py: Warning [PerfilUsuarioViewSet]: could not derive type of path parameter "id" because it is untyped and obtaining queryset from the viewset failed. Consider adding a type to the path (e.g. <int:id>) or annotating the parameter type with @extend_schema. Defaulting to "string".
/home/ubuntu/xbpneus/backend/transportador/configuracoes/views.py: Warning [PermissaoCustomizadaViewSet]: Failed to obtain model through view's queryset due to raised exception. Prevent this either by setting "queryset = Model.objects.none()" on the view, checking for "getattr(self, "swagger_fake_view", False)" in get_queryset() or by simply using @extend_schema. (Exception: 'AnonymousUser' object has no attribute 'empresa')
/home/ubuntu/xbpneus/backend/transportador/configuracoes/views.py: Warning [PermissaoCustomizadaViewSet]: could not derive type of path parameter "id" because it is untyped and obtaining queryset from the viewset failed. Consider adding a type to the path (e.g. <int:id>) or annotating the parameter type with @extend_schema. Defaulting to "string".
/home/ubuntu/xbpneus/backend/transportador/dashboard_views.py: Error [dashboard_view]: unable to guess serializer. This is graceful fallback handling for APIViews. Consider using GenericAPIView as view base class, if view is under your control. Either way you may want to add a serializer_class (or method). Ignoring view for now.
/home/ubuntu/xbpneus/backend/transportador/dashboard/views.py: Error [MetricsView]: unable to guess serializer. This is graceful fallback handling for APIViews. Consider using GenericAPIView as view base class, if view is under your control. Either way you may want to add a serializer_class (or method). Ignoring view for now.
/home/ubuntu/xbpneus/backend/transportador/dashboard_views.py: Error [dashboard_stats_view]: unable to guess serializer. This is graceful fallback handling for APIViews. Consider using GenericAPIView as view base class, if view is under your control. Either way you may want to add a serializer_class (or method). Ignoring view for now.
/home/ubuntu/xbpneus/backend/transportador/empresas/serializers.py: Warning [EmpresaViewSet > EmpresaListSerializer]: unable to resolve type hint for function "get_total_filiais". Consider using a type hint or @extend_schema_field. Defaulting to string.
/home/ubuntu/xbpneus/backend/transportador/empresas/serializers.py: Warning [EmpresaViewSet > EmpresaSerializer]: unable to resolve type hint for function "get_total_filiais". Consider using a type hint or @extend_schema_field. Defaulting to string.
/home/ubuntu/xbpneus/backend/transportador/empresas/views.py: Error [register_transportador]: unable to guess serializer. This is graceful fallback handling for APIViews. Consider using GenericAPIView as view base class, if view is under your control. Either way you may want to add a serializer_class (or method). Ignoring view for now.
/home/ubuntu/xbpneus/backend/transportador/epis/views.py: Warning [EntregaEPIViewSet]: Failed to obtain model through view's queryset due to raised exception. Prevent this either by setting "queryset = Model.objects.none()" on the view, checking for "getattr(self, "swagger_fake_view", False)" in get_queryset() or by simply using @extend_schema. (Exception: 'AnonymousUser' object has no attribute 'empresa')
/home/ubuntu/xbpneus/backend/transportador/epis/views.py: Warning [EntregaEPIViewSet]: could not derive type of path parameter "id" because it is untyped and obtaining queryset from the viewset failed. Consider adding a type to the path (e.g. <int:id>) or annotating the parameter type with @extend_schema. Defaulting to "string".
/home/ubuntu/xbpneus/backend/transportador/epis/views.py: Warning [EPIViewSet]: Failed to obtain model through view's queryset due to raised exception. Prevent this either by setting "queryset = Model.objects.none()" on the view, checking for "getattr(self, "swagger_fake_view", False)" in get_queryset() or by simply using @extend_schema. (Exception: 'AnonymousUser' object has no attribute 'empresa')
/home/ubuntu/xbpneus/backend/transportador/epis/views.py: Warning [EPIViewSet]: could not derive type of path parameter "id" because it is untyped and obtaining queryset from the viewset failed. Consider adding a type to the path (e.g. <int:id>) or annotating the parameter type with @extend_schema. Defaulting to "string".
/home/ubuntu/xbpneus/backend/transportador/epis/views.py: Warning [FichaEPIViewSet]: Failed to obtain model through view's queryset due to raised exception. Prevent this either by setting "queryset = Model.objects.none()" on the view, checking for "getattr(self, "swagger_fake_view", False)" in get_queryset() or by simply using @extend_schema. (Exception: 'AnonymousUser' object has no attribute 'empresa')
/home/ubuntu/xbpneus/backend/transportador/epis/views.py: Warning [FichaEPIViewSet]: could not derive type of path parameter "id" because it is untyped and obtaining queryset from the viewset failed. Consider adding a type to the path (e.g. <int:id>) or annotating the parameter type with @extend_schema. Defaulting to "string".
/home/ubuntu/xbpneus/backend/transportador/epis/views.py: Warning [TipoEPIViewSet]: Failed to obtain model through view's queryset due to raised exception. Prevent this either by setting "queryset = Model.objects.none()" on the view, checking for "getattr(self, "swagger_fake_view", False)" in get_queryset() or by simply using @extend_schema. (Exception: 'AnonymousUser' object has no attribute 'empresa')
/home/ubuntu/xbpneus/backend/transportador/epis/views.py: Warning [TipoEPIViewSet]: could not derive type of path parameter "id" because it is untyped and obtaining queryset from the viewset failed. Consider adding a type to the path (e.g. <int:id>) or annotating the parameter type with @extend_schema. Defaulting to "string".
/home/ubuntu/xbpneus/backend/transportador/estoque/views.py: Warning [CategoriaProdutoViewSet]: Failed to obtain model through view's queryset due to raised exception. Prevent this either by setting "queryset = Model.objects.none()" on the view, checking for "getattr(self, "swagger_fake_view", False)" in get_queryset() or by simply using @extend_schema. (Exception: 'AnonymousUser' object has no attribute 'empresa')
/home/ubuntu/xbpneus/backend/transportador/estoque/views.py: Warning [CategoriaProdutoViewSet]: could not derive type of path parameter "id" because it is untyped and obtaining queryset from the viewset failed. Consider adding a type to the path (e.g. <int:id>) or annotating the parameter type with @extend_schema. Defaulting to "string".
/home/ubuntu/xbpneus/backend/transportador/estoque/views.py: Warning [CurvaABCViewSet]: Failed to obtain model through view's queryset due to raised exception. Prevent this either by setting "queryset = Model.objects.none()" on the view, checking for "getattr(self, "swagger_fake_view", False)" in get_queryset() or by simply using @extend_schema. (Exception: 'AnonymousUser' object has no attribute 'empresa')
/home/ubuntu/xbpneus/backend/transportador/estoque/views.py: Warning [CurvaABCViewSet]: could not derive type of path parameter "id" because it is untyped and obtaining queryset from the viewset failed. Consider adding a type to the path (e.g. <int:id>) or annotating the parameter type with @extend_schema. Defaulting to "string".
/home/ubuntu/xbpneus/backend/transportador/estoque/views.py: Warning [MovimentacaoEstoqueViewSet]: Failed to obtain model through view's queryset due to raised exception. Prevent this either by setting "queryset = Model.objects.none()" on the view, checking for "getattr(self, "swagger_fake_view", False)" in get_queryset() or by simply using @extend_schema. (Exception: 'AnonymousUser' object has no attribute 'empresa')
/home/ubuntu/xbpneus/backend/transportador/estoque/views.py: Warning [MovimentacaoEstoqueViewSet]: could not derive type of path parameter "id" because it is untyped and obtaining queryset from the viewset failed. Consider adding a type to the path (e.g. <int:id>) or annotating the parameter type with @extend_schema. Defaulting to "string".
/home/ubuntu/xbpneus/backend/transportador/estoque/views.py: Warning [PrevisaoDemandaViewSet]: Failed to obtain model through view's queryset due to raised exception. Prevent this either by setting "queryset = Model.objects.none()" on the view, checking for "getattr(self, "swagger_fake_view", False)" in get_queryset() or by simply using @extend_schema. (Exception: 'AnonymousUser' object has no attribute 'empresa')
/home/ubuntu/xbpneus/backend/transportador/estoque/serializers.py: Warning [PrevisaoDemandaViewSet > PrevisaoDemandaSerializer]: unable to resolve type hint for function "acuracia". Consider using a type hint or @extend_schema_field. Defaulting to string.
/home/ubuntu/xbpneus/backend/transportador/estoque/views.py: Warning [PrevisaoDemandaViewSet]: could not derive type of path parameter "id" because it is untyped and obtaining queryset from the viewset failed. Consider adding a type to the path (e.g. <int:id>) or annotating the parameter type with @extend_schema. Defaulting to "string".
/home/ubuntu/xbpneus/backend/transportador/estoque/views.py: Warning [ProdutoViewSet]: Failed to obtain model through view's queryset due to raised exception. Prevent this either by setting "queryset = Model.objects.none()" on the view, checking for "getattr(self, "swagger_fake_view", False)" in get_queryset() or by simply using @extend_schema. (Exception: 'AnonymousUser' object has no attribute 'empresa')
/home/ubuntu/xbpneus/backend/transportador/estoque/serializers.py: Warning [ProdutoViewSet > ProdutoSerializer]: unable to resolve type hint for function "estoque_atual". Consider using a type hint or @extend_schema_field. Defaulting to string.
/home/ubuntu/xbpneus/backend/transportador/estoque/serializers.py: Warning [ProdutoViewSet > ProdutoSerializer]: unable to resolve type hint for function "necessita_reposicao". Consider using a type hint or @extend_schema_field. Defaulting to string.
/home/ubuntu/xbpneus/backend/transportador/estoque/views.py: Warning [ProdutoViewSet]: could not derive type of path parameter "id" because it is untyped and obtaining queryset from the viewset failed. Consider adding a type to the path (e.g. <int:id>) or annotating the parameter type with @extend_schema. Defaulting to "string".
/home/ubuntu/xbpneus/backend/transportador/estoque/views.py: Warning [SaldoEstoqueViewSet]: Failed to obtain model through view's queryset due to raised exception. Prevent this either by setting "queryset = Model.objects.none()" on the view, checking for "getattr(self, "swagger_fake_view", False)" in get_queryset() or by simply using @extend_schema. (Exception: 'AnonymousUser' object has no attribute 'empresa')
/home/ubuntu/xbpneus/backend/transportador/estoque/views.py: Warning [SaldoEstoqueViewSet]: could not derive type of path parameter "id" because it is untyped and obtaining queryset from the viewset failed. Consider adding a type to the path (e.g. <int:id>) or annotating the parameter type with @extend_schema. Defaulting to "string".
/home/ubuntu/xbpneus/backend/transportador/ferramentas/views.py: Warning [CalibracaoFerramentaViewSet]: Failed to obtain model through view's queryset due to raised exception. Prevent this either by setting "queryset = Model.objects.none()" on the view, checking for "getattr(self, "swagger_fake_view", False)" in get_queryset() or by simply using @extend_schema. (Exception: 'AnonymousUser' object has no attribute 'empresa')
/home/ubuntu/xbpneus/backend/transportador/ferramentas/views.py: Warning [CalibracaoFerramentaViewSet]: could not derive type of path parameter "id" because it is untyped and obtaining queryset from the viewset failed. Consider adding a type to the path (e.g. <int:id>) or annotating the parameter type with @extend_schema. Defaulting to "string".
/home/ubuntu/xbpneus/backend/transportador/ferramentas/views.py: Warning [EmprestimoFerramentaViewSet]: Failed to obtain model through view's queryset due to raised exception. Prevent this either by setting "queryset = Model.objects.none()" on the view, checking for "getattr(self, "swagger_fake_view", False)" in get_queryset() or by simply using @extend_schema. (Exception: 'AnonymousUser' object has no attribute 'empresa')
/home/ubuntu/xbpneus/backend/transportador/ferramentas/views.py: Warning [EmprestimoFerramentaViewSet]: could not derive type of path parameter "id" because it is untyped and obtaining queryset from the viewset failed. Consider adding a type to the path (e.g. <int:id>) or annotating the parameter type with @extend_schema. Defaulting to "string".
/home/ubuntu/xbpneus/backend/transportador/ferramentas/views.py: Warning [FerramentaViewSet]: Failed to obtain model through view's queryset due to raised exception. Prevent this either by setting "queryset = Model.objects.none()" on the view, checking for "getattr(self, "swagger_fake_view", False)" in get_queryset() or by simply using @extend_schema. (Exception: 'AnonymousUser' object has no attribute 'empresa')
/home/ubuntu/xbpneus/backend/transportador/ferramentas/views.py: Warning [FerramentaViewSet]: could not derive type of path parameter "id" because it is untyped and obtaining queryset from the viewset failed. Consider adding a type to the path (e.g. <int:id>) or annotating the parameter type with @extend_schema. Defaulting to "string".
/home/ubuntu/xbpneus/backend/transportador/ferramentas/views.py: Warning [ManutencaoFerramentaViewSet]: Failed to obtain model through view's queryset due to raised exception. Prevent this either by setting "queryset = Model.objects.none()" on the view, checking for "getattr(self, "swagger_fake_view", False)" in get_queryset() or by simply using @extend_schema. (Exception: 'AnonymousUser' object has no attribute 'empresa')
/home/ubuntu/xbpneus/backend/transportador/ferramentas/views.py: Warning [ManutencaoFerramentaViewSet]: could not derive type of path parameter "id" because it is untyped and obtaining queryset from the viewset failed. Consider adding a type to the path (e.g. <int:id>) or annotating the parameter type with @extend_schema. Defaulting to "string".
/home/ubuntu/xbpneus/backend/transportador/transportador_financeiro/views.py: Error [DespesaViewSet]: unable to guess serializer. This is graceful fallback handling for APIViews. Consider using GenericAPIView as view base class, if view is under your control. Either way you may want to add a serializer_class (or method). Ignoring view for now.
/home/ubuntu/xbpneus/backend/transportador/transportador_financeiro/views.py: Error [LancamentoViewSet]: unable to guess serializer. This is graceful fallback handling for APIViews. Consider using GenericAPIView as view base class, if view is under your control. Either way you may want to add a serializer_class (or method). Ignoring view for now.
/home/ubuntu/xbpneus/backend/transportador/garantias/views.py: Error [GarantiaViewSet]: unable to guess serializer. This is graceful fallback handling for APIViews. Consider using GenericAPIView as view base class, if view is under your control. Either way you may want to add a serializer_class (or method). Ignoring view for now.
/home/ubuntu/xbpneus/backend/transportador/implemento/views.py: Error [ImplementoViewSet]: unable to guess serializer. This is graceful fallback handling for APIViews. Consider using GenericAPIView as view base class, if view is under your control. Either way you may want to add a serializer_class (or method). Ignoring view for now.
/home/ubuntu/xbpneus/backend/transportador/integracoes/views.py: Warning [APICredentialViewSet]: Failed to obtain model through view's queryset due to raised exception. Prevent this either by setting "queryset = Model.objects.none()" on the view, checking for "getattr(self, "swagger_fake_view", False)" in get_queryset() or by simply using @extend_schema. (Exception: 'AnonymousUser' object has no attribute 'empresa')
/home/ubuntu/xbpneus/backend/transportador/integracoes/views.py: Warning [APICredentialViewSet]: could not derive type of path parameter "id" because it is untyped and obtaining queryset from the viewset failed. Consider adding a type to the path (e.g. <int:id>) or annotating the parameter type with @extend_schema. Defaulting to "string".
/home/ubuntu/xbpneus/backend/transportador/integracoes/views.py: Warning [IntegracaoExternaViewSet]: Failed to obtain model through view's queryset due to raised exception. Prevent this either by setting "queryset = Model.objects.none()" on the view, checking for "getattr(self, "swagger_fake_view", False)" in get_queryset() or by simply using @extend_schema. (Exception: 'AnonymousUser' object has no attribute 'empresa')
/home/ubuntu/xbpneus/backend/transportador/integracoes/views.py: Warning [IntegracaoExternaViewSet]: could not derive type of path parameter "id" because it is untyped and obtaining queryset from the viewset failed. Consider adding a type to the path (e.g. <int:id>) or annotating the parameter type with @extend_schema. Defaulting to "string".
/home/ubuntu/xbpneus/backend/transportador/integracoes/views.py: Warning [LogIntegracaoViewSet]: Failed to obtain model through view's queryset due to raised exception. Prevent this either by setting "queryset = Model.objects.none()" on the view, checking for "getattr(self, "swagger_fake_view", False)" in get_queryset() or by simply using @extend_schema. (Exception: 'AnonymousUser' object has no attribute 'empresa')
/home/ubuntu/xbpneus/backend/transportador/integracoes/views.py: Warning [LogIntegracaoViewSet]: could not derive type of path parameter "id" because it is untyped and obtaining queryset from the viewset failed. Consider adding a type to the path (e.g. <int:id>) or annotating the parameter type with @extend_schema. Defaulting to "string".
/home/ubuntu/xbpneus/backend/transportador/integracoes/views.py: Warning [WebhookConfigViewSet]: Failed to obtain model through view's queryset due to raised exception. Prevent this either by setting "queryset = Model.objects.none()" on the view, checking for "getattr(self, "swagger_fake_view", False)" in get_queryset() or by simply using @extend_schema. (Exception: 'AnonymousUser' object has no attribute 'empresa')
/home/ubuntu/xbpneus/backend/transportador/integracoes/views.py: Warning [WebhookConfigViewSet]: could not derive type of path parameter "id" because it is untyped and obtaining queryset from the viewset failed. Consider adding a type to the path (e.g. <int:id>) or annotating the parameter type with @extend_schema. Defaulting to "string".
/home/ubuntu/xbpneus/backend/transportador/views.py: Error [login_transportador]: unable to guess serializer. This is graceful fallback handling for APIViews. Consider using GenericAPIView as view base class, if view is under your control. Either way you may want to add a serializer_class (or method). Ignoring view for now.
/home/ubuntu/xbpneus/backend/transportador/views.py: Error [logout_transportador]: unable to guess serializer. This is graceful fallback handling for APIViews. Consider using GenericAPIView as view base class, if view is under your control. Either way you may want to add a serializer_class (or method). Ignoring view for now.
/home/ubuntu/xbpneus/backend/transportador/loja/serializers.py: Warning [CategoriaProdutoViewSet > CategoriaProdutoSerializer]: Encountered 2 components with identical names "CategoriaProduto" and different classes <class 'backend.transportador.loja.serializers.CategoriaProdutoSerializer'> and <class 'backend.transportador.estoque.serializers.CategoriaProdutoSerializer'>. This will very likely result in an incorrect schema. Try renaming one.
/home/ubuntu/xbpneus/backend/transportador/loja/views.py: Warning [CategoriaProdutoViewSet]: Encountered 2 components with identical names "PaginatedCategoriaProdutoList" and different classes <class 'backend.transportador.loja.serializers.CategoriaProdutoSerializer'> and <class 'backend.transportador.estoque.serializers.CategoriaProdutoSerializer'>. This will very likely result in an incorrect schema. Try renaming one.
/home/ubuntu/xbpneus/backend/transportador/loja/serializers.py: Warning [CategoriaProdutoViewSet > CategoriaProdutoSerializer]: Encountered 2 components with identical names "PatchedCategoriaProduto" and different classes <class 'backend.transportador.loja.serializers.CategoriaProdutoSerializer'> and <class 'backend.transportador.estoque.serializers.CategoriaProdutoSerializer'>. This will very likely result in an incorrect schema. Try renaming one.
/home/ubuntu/xbpneus/backend/transportador/loja/serializers.py: Warning [ProdutoViewSet > ProdutoSerializer]: Encountered 2 components with identical names "Produto" and different classes <class 'backend.transportador.loja.serializers.ProdutoSerializer'> and <class 'backend.transportador.estoque.serializers.ProdutoSerializer'>. This will very likely result in an incorrect schema. Try renaming one.
/home/ubuntu/xbpneus/backend/transportador/loja/views.py: Warning [ProdutoViewSet]: Encountered 2 components with identical names "PaginatedProdutoList" and different classes <class 'backend.transportador.loja.serializers.ProdutoSerializer'> and <class 'backend.transportador.estoque.serializers.ProdutoSerializer'>. This will very likely result in an incorrect schema. Try renaming one.
/home/ubuntu/xbpneus/backend/transportador/loja/serializers.py: Warning [ProdutoViewSet > ProdutoSerializer]: Encountered 2 components with identical names "PatchedProduto" and different classes <class 'backend.transportador.loja.serializers.ProdutoSerializer'> and <class 'backend.transportador.estoque.serializers.ProdutoSerializer'>. This will very likely result in an incorrect schema. Try renaming one.
/home/ubuntu/xbpneus/backend/transportador/manutencao/serializers.py: Warning [ChecklistManutencaoViewSet > ChecklistManutencaoSerializer]: unable to resolve type hint for function "percentual_conclusao". Consider using a type hint or @extend_schema_field. Defaulting to string.
/home/ubuntu/xbpneus/backend/transportador/manutencao/serializers.py: Warning [OrdemServicoViewSet > OrdemServicoSerializer]: unable to resolve type hint for function "tempo_execucao". Consider using a type hint or @extend_schema_field. Defaulting to string.
/home/ubuntu/xbpneus/backend/transportador/manutencao/serializers.py: Warning [OrdemServicoViewSet > OrdemServicoSerializer]: unable to resolve type hint for function "esta_atrasada". Consider using a type hint or @extend_schema_field. Defaulting to string.
/home/ubuntu/xbpneus/backend/transportador/dashboard_views.py: Error [me_view]: unable to guess serializer. This is graceful fallback handling for APIViews. Consider using GenericAPIView as view base class, if view is under your control. Either way you may want to add a serializer_class (or method). Ignoring view for now.
/home/ubuntu/xbpneus/backend/transportador/transportador_motorista/views.py: Error [MotoristaTransportadorViewSet]: unable to guess serializer. This is graceful fallback handling for APIViews. Consider using GenericAPIView as view base class, if view is under your control. Either way you may want to add a serializer_class (or method). Ignoring view for now.
/home/ubuntu/xbpneus/backend/transportador/notas_fiscais/views.py: Warning [AnexoNotaFiscalViewSet]: Failed to obtain model through view's queryset due to raised exception. Prevent this either by setting "queryset = Model.objects.none()" on the view, checking for "getattr(self, "swagger_fake_view", False)" in get_queryset() or by simply using @extend_schema. (Exception: 'AnonymousUser' object has no attribute 'empresa')
/home/ubuntu/xbpneus/backend/transportador/notas_fiscais/views.py: Warning [AnexoNotaFiscalViewSet]: could not derive type of path parameter "id" because it is untyped and obtaining queryset from the viewset failed. Consider adding a type to the path (e.g. <int:id>) or annotating the parameter type with @extend_schema. Defaulting to "string".
/home/ubuntu/xbpneus/backend/transportador/notas_fiscais/views.py: Warning [ImpostoNotaFiscalViewSet]: Failed to obtain model through view's queryset due to raised exception. Prevent this either by setting "queryset = Model.objects.none()" on the view, checking for "getattr(self, "swagger_fake_view", False)" in get_queryset() or by simply using @extend_schema. (Exception: 'AnonymousUser' object has no attribute 'empresa')
/home/ubuntu/xbpneus/backend/transportador/notas_fiscais/views.py: Warning [ImpostoNotaFiscalViewSet]: could not derive type of path parameter "id" because it is untyped and obtaining queryset from the viewset failed. Consider adding a type to the path (e.g. <int:id>) or annotating the parameter type with @extend_schema. Defaulting to "string".
/home/ubuntu/xbpneus/backend/transportador/notas_fiscais/views.py: Warning [ItemNotaFiscalViewSet]: Failed to obtain model through view's queryset due to raised exception. Prevent this either by setting "queryset = Model.objects.none()" on the view, checking for "getattr(self, "swagger_fake_view", False)" in get_queryset() or by simply using @extend_schema. (Exception: 'AnonymousUser' object has no attribute 'empresa')
/home/ubuntu/xbpneus/backend/transportador/notas_fiscais/views.py: Warning [ItemNotaFiscalViewSet]: could not derive type of path parameter "id" because it is untyped and obtaining queryset from the viewset failed. Consider adding a type to the path (e.g. <int:id>) or annotating the parameter type with @extend_schema. Defaulting to "string".
/home/ubuntu/xbpneus/backend/transportador/notas_fiscais/views.py: Warning [NotaFiscalViewSet]: Failed to obtain model through view's queryset due to raised exception. Prevent this either by setting "queryset = Model.objects.none()" on the view, checking for "getattr(self, "swagger_fake_view", False)" in get_queryset() or by simply using @extend_schema. (Exception: 'AnonymousUser' object has no attribute 'empresa')
/home/ubuntu/xbpneus/backend/transportador/notas_fiscais/views.py: Warning [NotaFiscalViewSet]: could not derive type of path parameter "id" because it is untyped and obtaining queryset from the viewset failed. Consider adding a type to the path (e.g. <int:id>) or annotating the parameter type with @extend_schema. Defaulting to "string".
/home/ubuntu/xbpneus/backend/transportador/pecas/views.py: Warning [CategoriaPecaViewSet]: Failed to obtain model through view's queryset due to raised exception. Prevent this either by setting "queryset = Model.objects.none()" on the view, checking for "getattr(self, "swagger_fake_view", False)" in get_queryset() or by simply using @extend_schema. (Exception: 'AnonymousUser' object has no attribute 'empresa')
/home/ubuntu/xbpneus/backend/transportador/pecas/views.py: Warning [CategoriaPecaViewSet]: could not derive type of path parameter "id" because it is untyped and obtaining queryset from the viewset failed. Consider adding a type to the path (e.g. <int:id>) or annotating the parameter type with @extend_schema. Defaulting to "string".
/home/ubuntu/xbpneus/backend/transportador/pecas/views.py: Warning [EstoquePecaViewSet]: Failed to obtain model through view's queryset due to raised exception. Prevent this either by setting "queryset = Model.objects.none()" on the view, checking for "getattr(self, "swagger_fake_view", False)" in get_queryset() or by simply using @extend_schema. (Exception: 'AnonymousUser' object has no attribute 'empresa')
/home/ubuntu/xbpneus/backend/transportador/pecas/views.py: Warning [EstoquePecaViewSet]: could not derive type of path parameter "id" because it is untyped and obtaining queryset from the viewset failed. Consider adding a type to the path (e.g. <int:id>) or annotating the parameter type with @extend_schema. Defaulting to "string".
/home/ubuntu/xbpneus/backend/transportador/pecas/views.py: Warning [FornecedorPecaViewSet]: Failed to obtain model through view's queryset due to raised exception. Prevent this either by setting "queryset = Model.objects.none()" on the view, checking for "getattr(self, "swagger_fake_view", False)" in get_queryset() or by simply using @extend_schema. (Exception: 'AnonymousUser' object has no attribute 'empresa')
/home/ubuntu/xbpneus/backend/transportador/pecas/views.py: Warning [FornecedorPecaViewSet]: could not derive type of path parameter "id" because it is untyped and obtaining queryset from the viewset failed. Consider adding a type to the path (e.g. <int:id>) or annotating the parameter type with @extend_schema. Defaulting to "string".
/home/ubuntu/xbpneus/backend/transportador/pecas/views.py: Warning [MovimentacaoPecaViewSet]: Failed to obtain model through view's queryset due to raised exception. Prevent this either by setting "queryset = Model.objects.none()" on the view, checking for "getattr(self, "swagger_fake_view", False)" in get_queryset() or by simply using @extend_schema. (Exception: 'AnonymousUser' object has no attribute 'empresa')
/home/ubuntu/xbpneus/backend/transportador/pecas/views.py: Warning [MovimentacaoPecaViewSet]: could not derive type of path parameter "id" because it is untyped and obtaining queryset from the viewset failed. Consider adding a type to the path (e.g. <int:id>) or annotating the parameter type with @extend_schema. Defaulting to "string".
/home/ubuntu/xbpneus/backend/transportador/pecas/views.py: Warning [PecaViewSet]: Failed to obtain model through view's queryset due to raised exception. Prevent this either by setting "queryset = Model.objects.none()" on the view, checking for "getattr(self, "swagger_fake_view", False)" in get_queryset() or by simply using @extend_schema. (Exception: 'AnonymousUser' object has no attribute 'empresa')
/home/ubuntu/xbpneus/backend/transportador/pecas/views.py: Warning [PecaViewSet]: could not derive type of path parameter "id" because it is untyped and obtaining queryset from the viewset failed. Consider adding a type to the path (e.g. <int:id>) or annotating the parameter type with @extend_schema. Defaulting to "string".
/home/ubuntu/xbpneus/backend/transportador/views.py: Error [perfil_transportador]: unable to guess serializer. This is graceful fallback handling for APIViews. Consider using GenericAPIView as view base class, if view is under your control. Either way you may want to add a serializer_class (or method). Ignoring view for now.
/home/ubuntu/xbpneus/backend/transportador/pneus/serializers.py: Warning [TireViewSet > TireSerializer]: unable to resolve type hint for function "get_vida_util_percentual". Consider using a type hint or @extend_schema_field. Defaulting to string.
/home/ubuntu/xbpneus/backend/transportador/pneus/serializers.py: Warning [TireViewSet > TireSerializer]: unable to resolve type hint for function "get_precisa_inspecao". Consider using a type hint or @extend_schema_field. Defaulting to string.
/home/ubuntu/xbpneus/backend/transportador/dashboard_views.py: Error [profile_view]: unable to guess serializer. This is graceful fallback handling for APIViews. Consider using GenericAPIView as view base class, if view is under your control. Either way you may want to add a serializer_class (or method). Ignoring view for now.
/home/ubuntu/xbpneus/backend/transportador/views.py: Error [registro_transportador]: unable to guess serializer. This is graceful fallback handling for APIViews. Consider using GenericAPIView as view base class, if view is under your control. Either way you may want to add a serializer_class (or method). Ignoring view for now.
/home/ubuntu/xbpneus/backend/transportador/relatorios/views.py: Warning [DashboardPersonalizadoViewSet]: Failed to obtain model through view's queryset due to raised exception. Prevent this either by setting "queryset = Model.objects.none()" on the view, checking for "getattr(self, "swagger_fake_view", False)" in get_queryset() or by simply using @extend_schema. (Exception: 'AnonymousUser' object has no attribute 'empresa')
/home/ubuntu/xbpneus/backend/transportador/relatorios/views.py: Warning [DashboardPersonalizadoViewSet]: could not derive type of path parameter "id" because it is untyped and obtaining queryset from the viewset failed. Consider adding a type to the path (e.g. <int:id>) or annotating the parameter type with @extend_schema. Defaulting to "string".
/home/ubuntu/xbpneus/backend/transportador/relatorios/views.py: Warning [RelatorioAgendadoViewSet]: Failed to obtain model through view's queryset due to raised exception. Prevent this either by setting "queryset = Model.objects.none()" on the view, checking for "getattr(self, "swagger_fake_view", False)" in get_queryset() or by simply using @extend_schema. (Exception: 'AnonymousUser' object has no attribute 'empresa')
/home/ubuntu/xbpneus/backend/transportador/relatorios/views.py: Warning [RelatorioAgendadoViewSet]: could not derive type of path parameter "id" because it is untyped and obtaining queryset from the viewset failed. Consider adding a type to the path (e.g. <int:id>) or annotating the parameter type with @extend_schema. Defaulting to "string".
/home/ubuntu/xbpneus/backend/transportador/relatorios/views.py: Warning [RelatorioGeradoViewSet]: Failed to obtain model through view's queryset due to raised exception. Prevent this either by setting "queryset = Model.objects.none()" on the view, checking for "getattr(self, "swagger_fake_view", False)" in get_queryset() or by simply using @extend_schema. (Exception: 'AnonymousUser' object has no attribute 'empresa')
/home/ubuntu/xbpneus/backend/transportador/relatorios/views.py: Warning [RelatorioGeradoViewSet]: could not derive type of path parameter "id" because it is untyped and obtaining queryset from the viewset failed. Consider adding a type to the path (e.g. <int:id>) or annotating the parameter type with @extend_schema. Defaulting to "string".
/home/ubuntu/xbpneus/backend/transportador/relatorios/views.py: Warning [RelatorioTemplateViewSet]: Failed to obtain model through view's queryset due to raised exception. Prevent this either by setting "queryset = Model.objects.none()" on the view, checking for "getattr(self, "swagger_fake_view", False)" in get_queryset() or by simply using @extend_schema. (Exception: 'AnonymousUser' object has no attribute 'empresa')
/home/ubuntu/xbpneus/backend/transportador/relatorios/views.py: Warning [RelatorioTemplateViewSet]: could not derive type of path parameter "id" because it is untyped and obtaining queryset from the viewset failed. Consider adding a type to the path (e.g. <int:id>) or annotating the parameter type with @extend_schema. Defaulting to "string".
/home/ubuntu/xbpneus/backend/transportador/transportador_relatorios/views.py: Error [RelatorioTransportadorViewSet]: unable to guess serializer. This is graceful fallback handling for APIViews. Consider using GenericAPIView as view base class, if view is under your control. Either way you may want to add a serializer_class (or method). Ignoring view for now.
/home/ubuntu/xbpneus/backend/transportador/telemetria/serializers.py: Warning [AlertaViewSet > AlertaSerializer]: Encountered 2 components with identical names "Alerta" and different classes <class 'backend.transportador.telemetria.serializers.AlertaSerializer'> and <class 'backend.transportador.alertas.serializers.AlertaSerializer'>. This will very likely result in an incorrect schema. Try renaming one.
/home/ubuntu/xbpneus/backend/transportador/telemetria/views.py: Warning [AlertaViewSet]: Encountered 2 components with identical names "PaginatedAlertaList" and different classes <class 'backend.transportador.telemetria.serializers.AlertaSerializer'> and <class 'backend.transportador.alertas.serializers.AlertaSerializer'>. This will very likely result in an incorrect schema. Try renaming one.
/home/ubuntu/xbpneus/backend/transportador/telemetria/serializers.py: Warning [AlertaViewSet > AlertaSerializer]: Encountered 2 components with identical names "PatchedAlerta" and different classes <class 'backend.transportador.telemetria.serializers.AlertaSerializer'> and <class 'backend.transportador.alertas.serializers.AlertaSerializer'>. This will very likely result in an incorrect schema. Try renaming one.
/home/ubuntu/xbpneus/backend/transportador/transportador_tr/views.py: Error [TRViewSet]: unable to guess serializer. This is graceful fallback handling for APIViews. Consider using GenericAPIView as view base class, if view is under your control. Either way you may want to add a serializer_class (or method). Ignoring view for now.
/home/ubuntu/xbpneus/backend/transportador/treinamentos/views.py: Warning [CertificadoTreinamentoViewSet]: Failed to obtain model through view's queryset due to raised exception. Prevent this either by setting "queryset = Model.objects.none()" on the view, checking for "getattr(self, "swagger_fake_view", False)" in get_queryset() or by simply using @extend_schema. (Exception: 'AnonymousUser' object has no attribute 'empresa')
/home/ubuntu/xbpneus/backend/transportador/treinamentos/views.py: Warning [CertificadoTreinamentoViewSet]: could not derive type of path parameter "id" because it is untyped and obtaining queryset from the viewset failed. Consider adding a type to the path (e.g. <int:id>) or annotating the parameter type with @extend_schema. Defaulting to "string".
/home/ubuntu/xbpneus/backend/transportador/treinamentos/views.py: Warning [CursoTreinamentoViewSet]: Failed to obtain model through view's queryset due to raised exception. Prevent this either by setting "queryset = Model.objects.none()" on the view, checking for "getattr(self, "swagger_fake_view", False)" in get_queryset() or by simply using @extend_schema. (Exception: 'AnonymousUser' object has no attribute 'empresa')
/home/ubuntu/xbpneus/backend/transportador/treinamentos/views.py: Warning [CursoTreinamentoViewSet]: could not derive type of path parameter "id" because it is untyped and obtaining queryset from the viewset failed. Consider adding a type to the path (e.g. <int:id>) or annotating the parameter type with @extend_schema. Defaulting to "string".
/home/ubuntu/xbpneus/backend/transportador/treinamentos/views.py: Warning [InstrutorTreinamentoViewSet]: Failed to obtain model through view's queryset due to raised exception. Prevent this either by setting "queryset = Model.objects.none()" on the view, checking for "getattr(self, "swagger_fake_view", False)" in get_queryset() or by simply using @extend_schema. (Exception: 'AnonymousUser' object has no attribute 'empresa')
/home/ubuntu/xbpneus/backend/transportador/treinamentos/views.py: Warning [InstrutorTreinamentoViewSet]: could not derive type of path parameter "id" because it is untyped and obtaining queryset from the viewset failed. Consider adding a type to the path (e.g. <int:id>) or annotating the parameter type with @extend_schema. Defaulting to "string".
/home/ubuntu/xbpneus/backend/transportador/treinamentos/views.py: Warning [TreinamentoRealizadoViewSet]: Failed to obtain model through view's queryset due to raised exception. Prevent this either by setting "queryset = Model.objects.none()" on the view, checking for "getattr(self, "swagger_fake_view", False)" in get_queryset() or by simply using @extend_schema. (Exception: 'AnonymousUser' object has no attribute 'empresa')
/home/ubuntu/xbpneus/backend/transportador/treinamentos/views.py: Warning [TreinamentoRealizadoViewSet]: could not derive type of path parameter "id" because it is untyped and obtaining queryset from the viewset failed. Consider adding a type to the path (e.g. <int:id>) or annotating the parameter type with @extend_schema. Defaulting to "string".
/home/ubuntu/xbpneus/backend/transportador/viagens/serializers.py: Warning [CargaViewSet > CargaSerializer]: Encountered 2 components with identical names "Carga" and different classes <class 'backend.transportador.viagens.serializers.CargaSerializer'> and <class 'backend.transportador.cargas.serializers.CargaSerializer'>. This will very likely result in an incorrect schema. Try renaming one.
/home/ubuntu/xbpneus/backend/transportador/viagens/views.py: Warning [CargaViewSet]: Encountered 2 components with identical names "PaginatedCargaList" and different classes <class 'backend.transportador.viagens.serializers.CargaSerializer'> and <class 'backend.transportador.cargas.serializers.CargaSerializer'>. This will very likely result in an incorrect schema. Try renaming one.
/home/ubuntu/xbpneus/backend/transportador/viagens/serializers.py: Warning [CargaViewSet > CargaSerializer]: Encountered 2 components with identical names "PatchedCarga" and different classes <class 'backend.transportador.viagens.serializers.CargaSerializer'> and <class 'backend.transportador.cargas.serializers.CargaSerializer'>. This will very likely result in an incorrect schema. Try renaming one.
/home/ubuntu/xbpneus/backend/transportador/viagens/serializers.py: Warning [ViagemViewSet > ViagemSerializer > CargaSerializer]: Encountered 2 components with identical names "Carga" and different classes <class 'backend.transportador.viagens.serializers.CargaSerializer'> and <class 'backend.transportador.cargas.serializers.CargaSerializer'>. This will very likely result in an incorrect schema. Try renaming one.
/home/ubuntu/xbpneus/backend/common/register_views.py: Error [register_full_view]: unable to guess serializer. This is graceful fallback handling for APIViews. Consider using GenericAPIView as view base class, if view is under your control. Either way you may want to add a serializer_class (or method). Ignoring view for now.
Warning: enum naming encountered a non-optimally resolvable collision for fields named "tipo". The same name has been used for multiple choice sets in multiple components. The collision was resolved with "Tipo24eEnum". add an entry to ENUM_NAME_OVERRIDES to fix the naming.
Warning: enum naming encountered a non-optimally resolvable collision for fields named "tipo". The same name has been used for multiple choice sets in multiple components. The collision was resolved with "TipoFf8Enum". add an entry to ENUM_NAME_OVERRIDES to fix the naming.
Warning: enum naming encountered a non-optimally resolvable collision for fields named "tipo". The same name has been used for multiple choice sets in multiple components. The collision was resolved with "Tipo25aEnum". add an entry to ENUM_NAME_OVERRIDES to fix the naming.
Warning: enum naming encountered a non-optimally resolvable collision for fields named "tipo". The same name has been used for multiple choice sets in multiple components. The collision was resolved with "Tipo2a6Enum". add an entry to ENUM_NAME_OVERRIDES to fix the naming.
Warning: enum naming encountered a non-optimally resolvable collision for fields named "tipo". The same name has been used for multiple choice sets in multiple components. The collision was resolved with "Tipo964Enum". add an entry to ENUM_NAME_OVERRIDES to fix the naming.
Warning: enum naming encountered a non-optimally resolvable collision for fields named "status". The same name has been used for multiple choice sets in multiple components. The collision was resolved with "Status99bEnum". add an entry to ENUM_NAME_OVERRIDES to fix the naming.
Warning: enum naming encountered a non-optimally resolvable collision for fields named "status". The same name has been used for multiple choice sets in multiple components. The collision was resolved with "Status3aaEnum". add an entry to ENUM_NAME_OVERRIDES to fix the naming.
Warning: enum naming encountered a non-optimally resolvable collision for fields named "status". The same name has been used for multiple choice sets in multiple components. The collision was resolved with "Status3edEnum". add an entry to ENUM_NAME_OVERRIDES to fix the naming.
{"message": "\"GET /api/schema/ HTTP/1.1\" 200 1232501", "request": "<socket.socket fd=6, family=2, type=1, proto=0, laddr=('127.0.0.1', 8000), raddr=('127.0.0.1', 52348)>", "server_time": "23/Oct/2025 10:44:09", "status_code": 200}
{"message": "\"GET /api/docs/ HTTP/1.1\" 200 4453", "request": "<socket.socket fd=7, family=2, type=1, proto=0, laddr=('127.0.0.1', 8000), raddr=('127.0.0.1', 48168)>", "server_time": "23/Oct/2025 10:44:09", "status_code": 200}
{"message": "Bad Request: /api/token/", "status_code": 400, "request": "<WSGIRequest: POST '/api/token/'>"}
{"message": "\"POST /api/token/ HTTP/1.1\" 400 41", "request": "<socket.socket fd=7, family=2, type=1, proto=0, laddr=('127.0.0.1', 8000), raddr=('127.0.0.1', 48178)>", "server_time": "23/Oct/2025 10:44:09", "status_code": 400}
{"message": "Not Found: /api/approve/", "status_code": 404, "request": "<WSGIRequest: GET '/api/approve/'>"}
{"message": "\"GET /api/approve/ HTTP/1.1\" 404 11063", "request": "<socket.socket fd=7, family=2, type=1, proto=0, laddr=('127.0.0.1', 8000), raddr=('127.0.0.1', 48188)>", "server_time": "23/Oct/2025 10:44:09", "status_code": 404}
{"message": "Not Found: /api/motorista/", "status_code": 404, "request": "<WSGIRequest: GET '/api/motorista/'>"}
{"message": "\"GET /api/motorista/ HTTP/1.1\" 404 11705", "request": "<socket.socket fd=8, family=2, type=1, proto=0, laddr=('127.0.0.1', 8000), raddr=('127.0.0.1', 48196)>", "server_time": "23/Oct/2025 10:44:09", "status_code": 404}
{"message": "Not Found: /api/borracharia/", "status_code": 404, "request": "<WSGIRequest: GET '/api/borracharia/'>"}
{"message": "\"GET /api/borracharia/ HTTP/1.1\" 404 11552", "request": "<socket.socket fd=6, family=2, type=1, proto=0, laddr=('127.0.0.1', 8000), raddr=('127.0.0.1', 48212)>", "server_time": "23/Oct/2025 10:44:09", "status_code": 404}
{"message": "Not Found: /api/revenda/", "status_code": 404, "request": "<WSGIRequest: GET '/api/revenda/'>"}
{"message": "\"GET /api/revenda/ HTTP/1.1\" 404 11520", "request": "<socket.socket fd=7, family=2, type=1, proto=0, laddr=('127.0.0.1', 8000), raddr=('127.0.0.1', 48218)>", "server_time": "23/Oct/2025 10:44:09", "status_code": 404}
{"message": "Not Found: /api/recapagem/", "status_code": 404, "request": "<WSGIRequest: GET '/api/recapagem/'>"}
{"message": "\"GET /api/recapagem/ HTTP/1.1\" 404 11536", "request": "<socket.socket fd=6, family=2, type=1, proto=0, laddr=('127.0.0.1', 8000), raddr=('127.0.0.1', 48224)>", "server_time": "23/Oct/2025 10:44:09", "status_code": 404}
{"message": "Not Found: /api/reports/", "status_code": 404, "request": "<WSGIRequest: GET '/api/reports/'>"}
{"message": "\"GET /api/reports/ HTTP/1.1\" 404 11682", "request": "<socket.socket fd=7, family=2, type=1, proto=0, laddr=('127.0.0.1', 8000), raddr=('127.0.0.1', 48232)>", "server_time": "23/Oct/2025 10:44:09", "status_code": 404}
{"message": "Not Found: /api/jobs/", "status_code": 404, "request": "<WSGIRequest: GET '/api/jobs/'>"}
{"message": "\"GET /api/jobs/ HTTP/1.1\" 404 11467", "request": "<socket.socket fd=6, family=2, type=1, proto=0, laddr=('127.0.0.1', 8000), raddr=('127.0.0.1', 48246)>", "server_time": "23/Oct/2025 10:44:09", "status_code": 404}
{"message": "Not Found: /api/endpoint-inexistente/", "status_code": 404, "request": "<WSGIRequest: GET '/api/endpoint-inexistente/'>"}
{"message": "\"GET /api/endpoint-inexistente/ HTTP/1.1\" 404 11102", "request": "<socket.socket fd=6, family=2, type=1, proto=0, laddr=('127.0.0.1', 8000), raddr=('127.0.0.1', 48252)>", "server_time": "23/Oct/2025 10:44:09", "status_code": 404}
{"message": "Unauthorized: /api/auth/me/", "status_code": 401, "request": "<WSGIRequest: GET '/api/auth/me/'>"}
{"message": "\"GET /api/auth/me/ HTTP/1.1\" 401 183", "request": "<socket.socket fd=7, family=2, type=1, proto=0, laddr=('127.0.0.1', 8000), raddr=('127.0.0.1', 48266)>", "server_time": "23/Oct/2025 10:44:11", "status_code": 401}

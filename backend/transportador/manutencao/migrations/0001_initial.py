# Generated by Django 5.2.7 on 2025-10-10 12:31

import django.core.validators
import django.db.models.deletion
from decimal import Decimal
from django.conf import settings
from django.db import migrations, models


class Migration(migrations.Migration):

    initial = True

    dependencies = [
        ('frota', '0001_initial'),
        migrations.swappable_dependency(settings.AUTH_USER_MODEL),
    ]

    operations = [
        migrations.CreateModel(
            name='Teste',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('os_id', models.IntegerField()),
                ('torque_ok', models.BooleanField(default=False)),
                ('pressao_ok', models.BooleanField(default=False)),
                ('rodagem_ok', models.BooleanField(default=False)),
                ('data', models.CharField(blank=True, max_length=30)),
            ],
            options={
                'verbose_name': 'Teste (Legado)',
                'verbose_name_plural': 'Testes (Legado)',
            },
        ),
        migrations.CreateModel(
            name='WorkOrder',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('tipo', models.CharField(max_length=30)),
                ('status', models.CharField(blank=True, max_length=50)),
                ('veiculo', models.CharField(max_length=20)),
                ('agendamento', models.CharField(blank=True, max_length=20)),
            ],
            options={
                'verbose_name': 'Work Order (Legado)',
                'verbose_name_plural': 'Work Orders (Legado)',
            },
        ),
        migrations.CreateModel(
            name='OrdemServico',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('numero', models.CharField(max_length=20, unique=True, verbose_name='Número da OS')),
                ('tipo', models.CharField(choices=[('PREVENTIVA', 'Preventiva'), ('CORRETIVA', 'Corretiva'), ('PREDITIVA', 'Preditiva'), ('EMERGENCIAL', 'Emergencial')], max_length=20, verbose_name='Tipo de Manutenção')),
                ('status', models.CharField(choices=[('ABERTA', 'Aberta'), ('AGENDADA', 'Agendada'), ('EM_ANDAMENTO', 'Em Andamento'), ('AGUARDANDO_PECA', 'Aguardando Peça'), ('CONCLUIDA', 'Concluída'), ('CANCELADA', 'Cancelada')], default='ABERTA', max_length=20, verbose_name='Status')),
                ('prioridade', models.CharField(choices=[('BAIXA', 'Baixa'), ('MEDIA', 'Média'), ('ALTA', 'Alta'), ('CRITICA', 'Crítica')], default='MEDIA', max_length=10, verbose_name='Prioridade')),
                ('data_abertura', models.DateTimeField(auto_now_add=True, verbose_name='Data de Abertura')),
                ('data_agendamento', models.DateTimeField(blank=True, null=True, verbose_name='Data de Agendamento')),
                ('data_inicio', models.DateTimeField(blank=True, null=True, verbose_name='Data de Início')),
                ('data_conclusao', models.DateTimeField(blank=True, null=True, verbose_name='Data de Conclusão')),
                ('data_cancelamento', models.DateTimeField(blank=True, null=True, verbose_name='Data de Cancelamento')),
                ('descricao_problema', models.TextField(verbose_name='Descrição do Problema')),
                ('descricao_servico', models.TextField(blank=True, verbose_name='Descrição do Serviço Realizado')),
                ('observacoes', models.TextField(blank=True, verbose_name='Observações')),
                ('km_abertura', models.IntegerField(blank=True, null=True, verbose_name='KM na Abertura')),
                ('km_conclusao', models.IntegerField(blank=True, null=True, verbose_name='KM na Conclusão')),
                ('custo_pecas', models.DecimalField(decimal_places=2, default=Decimal('0.00'), max_digits=15, verbose_name='Custo de Peças')),
                ('custo_mao_obra', models.DecimalField(decimal_places=2, default=Decimal('0.00'), max_digits=15, verbose_name='Custo de Mão de Obra')),
                ('custo_total', models.DecimalField(decimal_places=2, default=Decimal('0.00'), max_digits=15, verbose_name='Custo Total')),
                ('criado_em', models.DateTimeField(auto_now_add=True, verbose_name='Criado em')),
                ('atualizado_em', models.DateTimeField(auto_now=True, verbose_name='Atualizado em')),
                ('aberta_por', models.ForeignKey(null=True, on_delete=django.db.models.deletion.SET_NULL, related_name='os_abertas', to=settings.AUTH_USER_MODEL, verbose_name='Aberta por')),
                ('mecanico', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.SET_NULL, related_name='os_executadas', to=settings.AUTH_USER_MODEL, verbose_name='Mecânico')),
                ('veiculo', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='ordens_servico', to='frota.vehicle', verbose_name='Veículo')),
            ],
            options={
                'verbose_name': 'Ordem de Serviço',
                'verbose_name_plural': 'Ordens de Serviço',
                'ordering': ['-data_abertura'],
            },
        ),
        migrations.CreateModel(
            name='ItemOS',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('tipo', models.CharField(choices=[('PECA', 'Peça'), ('SERVICO', 'Serviço')], max_length=10, verbose_name='Tipo')),
                ('codigo', models.CharField(max_length=60, verbose_name='Código')),
                ('descricao', models.CharField(max_length=200, verbose_name='Descrição')),
                ('quantidade', models.DecimalField(decimal_places=2, max_digits=10, validators=[django.core.validators.MinValueValidator(Decimal('0.01'))], verbose_name='Quantidade')),
                ('unidade', models.CharField(default='UN', max_length=10, verbose_name='Unidade')),
                ('valor_unitario', models.DecimalField(decimal_places=2, default=Decimal('0.00'), max_digits=15, verbose_name='Valor Unitário')),
                ('valor_total', models.DecimalField(decimal_places=2, default=Decimal('0.00'), max_digits=15, verbose_name='Valor Total')),
                ('aplicado', models.BooleanField(default=False, verbose_name='Aplicado')),
                ('observacoes', models.TextField(blank=True, verbose_name='Observações')),
                ('criado_em', models.DateTimeField(auto_now_add=True, verbose_name='Criado em')),
                ('os', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='itens', to='manutencao.ordemservico', verbose_name='Ordem de Serviço')),
            ],
            options={
                'verbose_name': 'Item da OS',
                'verbose_name_plural': 'Itens da OS',
                'ordering': ['os', 'tipo', 'descricao'],
            },
        ),
        migrations.CreateModel(
            name='HistoricoManutencao',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('data', models.DateTimeField(verbose_name='Data')),
                ('tipo', models.CharField(choices=[('PREVENTIVA', 'Preventiva'), ('CORRETIVA', 'Corretiva'), ('PREDITIVA', 'Preditiva'), ('EMERGENCIAL', 'Emergencial')], max_length=20, verbose_name='Tipo')),
                ('descricao', models.TextField(verbose_name='Descrição')),
                ('km', models.IntegerField(blank=True, null=True, verbose_name='Quilometragem')),
                ('custo', models.DecimalField(decimal_places=2, default=Decimal('0.00'), max_digits=15, verbose_name='Custo')),
                ('criado_em', models.DateTimeField(auto_now_add=True, verbose_name='Criado em')),
                ('veiculo', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='historico_manutencao', to='frota.vehicle', verbose_name='Veículo')),
                ('os', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.SET_NULL, related_name='historicos', to='manutencao.ordemservico', verbose_name='Ordem de Serviço')),
            ],
            options={
                'verbose_name': 'Histórico de Manutenção',
                'verbose_name_plural': 'Históricos de Manutenção',
                'ordering': ['-data'],
            },
        ),
        migrations.CreateModel(
            name='ChecklistManutencao',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('nivel_oleo_motor', models.BooleanField(default=False, verbose_name='Nível de Óleo do Motor')),
                ('nivel_fluido_freio', models.BooleanField(default=False, verbose_name='Nível de Fluido de Freio')),
                ('nivel_agua_radiador', models.BooleanField(default=False, verbose_name='Nível de Água do Radiador')),
                ('pressao_pneus', models.BooleanField(default=False, verbose_name='Pressão dos Pneus')),
                ('estado_pneus', models.BooleanField(default=False, verbose_name='Estado dos Pneus')),
                ('funcionamento_farois', models.BooleanField(default=False, verbose_name='Funcionamento dos Faróis')),
                ('funcionamento_setas', models.BooleanField(default=False, verbose_name='Funcionamento das Setas')),
                ('funcionamento_freios', models.BooleanField(default=False, verbose_name='Funcionamento dos Freios')),
                ('funcionamento_buzina', models.BooleanField(default=False, verbose_name='Funcionamento da Buzina')),
                ('limpeza_filtro_ar', models.BooleanField(default=False, verbose_name='Limpeza do Filtro de Ar')),
                ('estado_correia', models.BooleanField(default=False, verbose_name='Estado da Correia')),
                ('vazamentos', models.BooleanField(default=False, verbose_name='Verificação de Vazamentos')),
                ('torque_ok', models.BooleanField(default=False, verbose_name='Torque OK')),
                ('pressao_ok', models.BooleanField(default=False, verbose_name='Pressão OK')),
                ('rodagem_ok', models.BooleanField(default=False, verbose_name='Rodagem OK')),
                ('observacoes', models.TextField(blank=True, verbose_name='Observações')),
                ('realizado_em', models.DateTimeField(auto_now_add=True, verbose_name='Realizado em')),
                ('realizado_por', models.ForeignKey(null=True, on_delete=django.db.models.deletion.SET_NULL, related_name='checklists_realizados', to=settings.AUTH_USER_MODEL, verbose_name='Realizado por')),
                ('os', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='checklists', to='manutencao.ordemservico', verbose_name='Ordem de Serviço')),
            ],
            options={
                'verbose_name': 'Checklist de Manutenção',
                'verbose_name_plural': 'Checklists de Manutenção',
                'ordering': ['-realizado_em'],
            },
        ),
        migrations.CreateModel(
            name='PlanoManutencaoPreventiva',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('nome', models.CharField(max_length=200, verbose_name='Nome do Plano')),
                ('descricao', models.TextField(verbose_name='Descrição')),
                ('periodicidade_km', models.IntegerField(blank=True, help_text='Ex: 10000 para manutenção a cada 10.000 km', null=True, verbose_name='Periodicidade em KM')),
                ('periodicidade_dias', models.IntegerField(blank=True, help_text='Ex: 90 para manutenção a cada 90 dias', null=True, verbose_name='Periodicidade em Dias')),
                ('proxima_manutencao_km', models.IntegerField(blank=True, null=True, verbose_name='Próxima Manutenção (KM)')),
                ('proxima_manutencao_data', models.DateField(blank=True, null=True, verbose_name='Próxima Manutenção (Data)')),
                ('ativo', models.BooleanField(default=True, verbose_name='Ativo')),
                ('criado_em', models.DateTimeField(auto_now_add=True, verbose_name='Criado em')),
                ('atualizado_em', models.DateTimeField(auto_now=True, verbose_name='Atualizado em')),
                ('criado_por', models.ForeignKey(null=True, on_delete=django.db.models.deletion.SET_NULL, related_name='planos_manutencao_criados', to=settings.AUTH_USER_MODEL, verbose_name='Criado por')),
                ('veiculo', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.CASCADE, related_name='planos_manutencao', to='frota.vehicle', verbose_name='Veículo')),
            ],
            options={
                'verbose_name': 'Plano de Manutenção Preventiva',
                'verbose_name_plural': 'Planos de Manutenção Preventiva',
                'ordering': ['nome'],
            },
        ),
        migrations.AddIndex(
            model_name='ordemservico',
            index=models.Index(fields=['numero'], name='manutencao__numero_bfcfe8_idx'),
        ),
        migrations.AddIndex(
            model_name='ordemservico',
            index=models.Index(fields=['veiculo', 'status'], name='manutencao__veiculo_ba9887_idx'),
        ),
        migrations.AddIndex(
            model_name='ordemservico',
            index=models.Index(fields=['status', 'prioridade'], name='manutencao__status_5168a9_idx'),
        ),
        migrations.AddIndex(
            model_name='ordemservico',
            index=models.Index(fields=['data_abertura'], name='manutencao__data_ab_b1dac1_idx'),
        ),
    ]
